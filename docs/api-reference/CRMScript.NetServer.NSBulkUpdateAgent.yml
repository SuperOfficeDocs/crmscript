### YamlMime:ManagedReference
items:
- uid: CRMScript.NetServer.NSBulkUpdateAgent
  commentId: T:CRMScript.NetServer.NSBulkUpdateAgent
  id: NSBulkUpdateAgent
  langs:
  - crmscript
  children:
  - CRMScript.NetServer.NSBulkUpdateAgent.#ctor
  - CRMScript.NetServer.NSBulkUpdateAgent.ExecuteByEntityIds(NSFieldValueInfo[],String,String,String)
  - CRMScript.NetServer.NSBulkUpdateAgent.ExecuteBySelectionId(NSFieldValueInfo[],String,String,Integer,Bool)
  - CRMScript.NetServer.NSBulkUpdateAgent.GetAvailableFields(String)
  - CRMScript.NetServer.NSBulkUpdateAgent.GetJobResultAsJsonFromBinaryObjectId(String,Integer)
  - CRMScript.NetServer.NSBulkUpdateAgent.GetJobResultsFromStorageAsJson()
  - CRMScript.NetServer.NSBulkUpdateAgent.GetStoredFields(String,String)
  - CRMScript.NetServer.NSBulkUpdateAgent.RemoveStoredFields(String,String)
  - CRMScript.NetServer.NSBulkUpdateAgent.RemoveStoredFieldsAndGetDefaultFields(String,String)
  name: NSBulkUpdateAgent
  nameWithType: NSBulkUpdateAgent
  fullName: CRMScript.NetServer.NSBulkUpdateAgent
  type: Class
  summary: "\nAgent used for bulk update methods.\n"
  example: 
  - "\n<pre><code>NSBulkUpdateAgent agent;\nagent.callMethod(arg1, arg2);</code></pre>\n"
- uid: CRMScript.NetServer.NSBulkUpdateAgent.#ctor
  commentId: M:CRMScript.NetServer.NSBulkUpdateAgent.#ctor
  id: '#ctor'
  so.intellisense: Void.NSBulkUpdateAgent
  langs:
  - crmscript
  name: '#ctor'
  nameWithType: NSBulkUpdateAgent.#ctor
  fullName: CRMScript.NetServer.NSBulkUpdateAgent.#ctor
  type: Constructor
  summary: ""
  remarks: 
  syntax: 
    content: NSBulkUpdateAgent
  example: 
  - "\n<pre><code>NSBulkUpdateAgent agent;\nagent.callMethod(arg1, arg2);</code></pre>\n"
- uid: CRMScript.NetServer.NSBulkUpdateAgent.ExecuteByEntityIds(NSFieldValueInfo[],String,String,String)
  commentId: M:CRMScript.NetServer.NSBulkUpdateAgent.ExecuteByEntityIds(NSFieldValueInfo[],String,String,String)
  id: 'ExecuteByEntityIds(NSFieldValueInfo[],String,String,String)'
  so.intellisense: NSBulkUpdateAgent.ExecuteByEntityIds
  langs:
  - crmscript
  name: 'ExecuteByEntityIds(NSFieldValueInfo[],String,String,String)'
  nameWithType: NSBulkUpdateAgent.ExecuteByEntityIds(NSFieldValueInfo[],String,String,String)
  fullName: CRMScript.NetServer.NSBulkUpdateAgent.ExecuteByEntityIds(NSFieldValueInfo[],String,String,String)
  type: Method
  summary: "\nDo the batch update on selected\n"
  remarks: 
  syntax: 
    content: Integer ExecuteByEntityIds(NSFieldValueInfo[] fieldValueInfos, String tableName, String context, String ids)
    parameters:
    - id: fieldValueInfos
      type: CRMScript.NetServer.NSFieldValueInfo[]
      description: The name of the wanted tablename
    - id: tableName
      type: CRMScript.Global.String
      description:  The name of the table to bulk update
    - id: context
      type: CRMScript.Global.String
      description: Where is the function called from
    - id: ids
      type: CRMScript.Global.String
      description: Comma-separated string of the IDs of the entities to update
    return:
      type: CRMScript.Global.Integer
      describe: batchtaskinfo ID
  example: 
  - "\n<pre><code>NSBulkUpdateAgent agent;\nNSFieldValueInfo[] fieldValueInfos;\nString tableName;\nString context;\nString ids;\nInteger res = agent.ExecuteByEntityIds(fieldValueInfos, tableName, context, ids);</code></pre>\n"
- uid: CRMScript.NetServer.NSBulkUpdateAgent.ExecuteBySelectionId(NSFieldValueInfo[],String,String,Integer,Bool)
  commentId: M:CRMScript.NetServer.NSBulkUpdateAgent.ExecuteBySelectionId(NSFieldValueInfo[],String,String,Integer,Bool)
  id: 'ExecuteBySelectionId(NSFieldValueInfo[],String,String,Integer,Bool)'
  so.intellisense: NSBulkUpdateAgent.ExecuteBySelectionId
  langs:
  - crmscript
  name: 'ExecuteBySelectionId(NSFieldValueInfo[],String,String,Integer,Bool)'
  nameWithType: NSBulkUpdateAgent.ExecuteBySelectionId(NSFieldValueInfo[],String,String,Integer,Bool)
  fullName: CRMScript.NetServer.NSBulkUpdateAgent.ExecuteBySelectionId(NSFieldValueInfo[],String,String,Integer,Bool)
  type: Method
  summary: "\nDo the batchupdate on this selection\n"
  remarks: 
  syntax: 
    content: Integer ExecuteBySelectionId(NSFieldValueInfo[] fieldValueInfos, String tableName, String context, Integer selectionId, Bool isShadow)
    parameters:
    - id: fieldValueInfos
      type: CRMScript.NetServer.NSFieldValueInfo[]
      description: The name of the wanted tablename
    - id: tableName
      type: CRMScript.Global.String
      description: The name of the table to bulk update
    - id: context
      type: CRMScript.Global.String
      description: Where is the function called from
    - id: selectionId
      type: CRMScript.Global.Integer
      description: The ID of the selection
    - id: isShadow
      type: CRMScript.Global.Bool
      description: Use the shadow selection
    return:
      type: CRMScript.Global.Integer
      description: batchtaskinfo ID
  example: 
  - "\n<pre><code>NSBulkUpdateAgent agent;\nNSFieldValueInfo[] fieldValueInfos;\nString tableName;\nString context;\nInteger selectionId;\nBool isShadow;\nInteger res = agent.ExecuteBySelectionId(fieldValueInfos, tableName, context, selectionId, isShadow);</code></pre>\n"
- uid: CRMScript.NetServer.NSBulkUpdateAgent.GetAvailableFields(String)
  commentId: M:CRMScript.NetServer.NSBulkUpdateAgent.GetAvailableFields(String)
  id: 'GetAvailableFields(String)'
  so.intellisense: NSBulkUpdateAgent.GetAvailableFields
  langs:
  - crmscript
  name: 'GetAvailableFields(String)'
  nameWithType: NSBulkUpdateAgent.GetAvailableFields(String)
  fullName: CRMScript.NetServer.NSBulkUpdateAgent.GetAvailableFields(String)
  type: Method
  summary: "\nGets all available fields for a given tablename/entity\n"
  remarks: 
  syntax: 
    content: NSFieldValueInfo[] GetAvailableFields(String tablename)
    parameters:
    - id: tablename
      type: CRMScript.Global.String
      description: The name of the wanted tablename
    return:
      type: CRMScript.NetServer.NSFieldValueInfo[]
      description: Array of the available fields for the given entity
  example: 
  - "\n<pre><code>NSBulkUpdateAgent agent;\nString tablename;\nNSFieldValueInfo[] res = agent.GetAvailableFields(tablename);</code></pre>\n"
- uid: CRMScript.NetServer.NSBulkUpdateAgent.GetJobResultAsJsonFromBinaryObjectId(String,Integer)
  commentId: M:CRMScript.NetServer.NSBulkUpdateAgent.GetJobResultAsJsonFromBinaryObjectId(String,Integer)
  id: 'GetJobResultAsJsonFromBinaryObjectId(String,Integer)'
  so.intellisense: NSBulkUpdateAgent.GetJobResultAsJsonFromBinaryObjectId
  langs:
  - crmscript
  name: 'GetJobResultAsJsonFromBinaryObjectId(String,Integer)'
  nameWithType: NSBulkUpdateAgent.GetJobResultAsJsonFromBinaryObjectId(String,Integer)
  fullName: CRMScript.NetServer.NSBulkUpdateAgent.GetJobResultAsJsonFromBinaryObjectId(String,Integer)
  type: Method
  summary: "\nGets result of the batchupdate job\n"
  remarks: 
  syntax: 
    content: String GetJobResultAsJsonFromBinaryObjectId(String tableName, Integer binaryObjectId)
    parameters:
    - id: tableName
      type: CRMScript.Global.String
      description: The name of the table that was updated to show the log from
    - id: binaryObjectId
      type: CRMScript.Global.Integer
      description: Which binaryobject ID has stored the job result
    return:
      type: CRMScript.Global.String
      description: Result of job as JSON
  example: 
  - "\n<pre><code>NSBulkUpdateAgent agent;\nString tableName;\nInteger binaryObjectId;\nString res = agent.GetJobResultAsJsonFromBinaryObjectId(tableName, binaryObjectId);</code></pre>\n"
- uid: CRMScript.NetServer.NSBulkUpdateAgent.GetJobResultsFromStorageAsJson()
  commentId: M:CRMScript.NetServer.NSBulkUpdateAgent.GetJobResultsFromStorageAsJson()
  id: 'GetJobResultsFromStorageAsJson()'
  so.intellisense: NSBulkUpdateAgent.GetJobResultsFromStorageAsJson
  langs:
  - crmscript
  name: 'GetJobResultsFromStorageAsJson()'
  nameWithType: NSBulkUpdateAgent.GetJobResultsFromStorageAsJson()
  fullName: CRMScript.NetServer.NSBulkUpdateAgent.GetJobResultsFromStorageAsJson()
  type: Method
  summary: "\nGets result of the batchupdate job\n"
  remarks: 
  syntax: 
    content: String[] GetJobResultsFromStorageAsJson()
    parameters: []
    return:
      type: CRMScript.Global.String[]
      description: Result of job as JSON
  example: 
  - "\n<pre><code>NSBulkUpdateAgent agent;\nString[] res = agent.GetJobResultsFromStorageAsJson();</code></pre>\n"
- uid: CRMScript.NetServer.NSBulkUpdateAgent.GetStoredFields(String,String)
  commentId: M:CRMScript.NetServer.NSBulkUpdateAgent.GetStoredFields(String,String)
  id: 'GetStoredFields(String,String)'
  so.intellisense: NSBulkUpdateAgent.GetStoredFields
  langs:
  - crmscript
  name: 'GetStoredFields(String,String)'
  nameWithType: NSBulkUpdateAgent.GetStoredFields(String,String)
  fullName: CRMScript.NetServer.NSBulkUpdateAgent.GetStoredFields(String,String)
  type: Method
  summary: "\nGets all stored fields for a given tablename/entity and context\n"
  remarks: 
  syntax: 
    content: NSFieldValueInfo[] GetStoredFields(String tablename, String context)
    parameters:
    - id: tablename
      type: CRMScript.Global.String
      description: The name of the wanted tablename
    - id: context
      type: CRMScript.Global.String
      description: Where is the function called for
    return:
      type: CRMScript.NetServer.NSFieldValueInfo[]
      description: array of the stored or default fields for the given entity
  example: 
  - "\n<pre><code>NSBulkUpdateAgent agent;\nString tablename;\nString context;\nNSFieldValueInfo[] res = agent.GetStoredFields(tablename, context);</code></pre>\n"
- uid: CRMScript.NetServer.NSBulkUpdateAgent.RemoveStoredFields(String,String)
  commentId: M:CRMScript.NetServer.NSBulkUpdateAgent.RemoveStoredFields(String,String)
  id: 'RemoveStoredFields(String,String)'
  so.intellisense: NSBulkUpdateAgent.RemoveStoredFields
  langs:
  - crmscript
  name: 'RemoveStoredFields(String,String)'
  nameWithType: NSBulkUpdateAgent.RemoveStoredFields(String,String)
  fullName: CRMScript.NetServer.NSBulkUpdateAgent.RemoveStoredFields(String,String)
  type: Method
  summary: "\nRemoves the stored settings of the bulk update for this table from this context\n"
  remarks: 
  syntax: 
    content: Bool RemoveStoredFields(String tableName, String context)
    parameters:
    - id: tableName
      type: CRMScript.Global.String
      description: The name of the table to remove stored settings from
    - id: context
      type: CRMScript.Global.String
      description: Where is the function called from that we will remove the settings from
    return:
      type: CRMScript.Global.Bool
  example: 
- uid: CRMScript.NetServer.NSBulkUpdateAgent.RemoveStoredFieldsAndGetDefaultFields(String,String)
  commentId: M:CRMScript.NetServer.NSBulkUpdateAgent.RemoveStoredFieldsAndGetDefaultFields(String,String)
  id: 'RemoveStoredFieldsAndGetDefaultFields(String,String)'
  so.intellisense: NSBulkUpdateAgent.RemoveStoredFieldsAndGetDefaultFields
  langs:
  - crmscript
  name: 'RemoveStoredFieldsAndGetDefaultFields(String,String)'
  nameWithType: NSBulkUpdateAgent.RemoveStoredFieldsAndGetDefaultFields(String,String)
  fullName: CRMScript.NetServer.NSBulkUpdateAgent.RemoveStoredFieldsAndGetDefaultFields(String,String)
  type: Method
  summary: "\nRemove the stored settings of the bulk update for this table from this context, to get the default settings instead\n"
  remarks: 
  syntax: 
    content: NSFieldValueInfo[] RemoveStoredFieldsAndGetDefaultFields(String tableName, String context)
    parameters:
    - id: tableName
      type: CRMScript.Global.String
      description: The name of the table to remove stored settings from
    - id: context
      type: CRMScript.Global.String
      description: Where is the function called from that we will remove the settings from
    return:
      type: CRMScript.NetServer.NSFieldValueInfo[]
      description: array of the available fields for the given tablename
  example: 
  - "\n<pre><code>NSBulkUpdateAgent agent;\nString tableName;\nString context;\nNSFieldValueInfo[] res = agent.RemoveStoredFieldsAndGetDefaultFields(tableName, context);</code></pre>\n"
references:
- uid: CRMScript.NetServer.NSBulkUpdateAgent
  commentId: T:CRMScript.NetServer.NSBulkUpdateAgent
  isExternal: true
  name: NSBulkUpdateAgent
  nameWithType: NSBulkUpdateAgent
  fullName: CRMScript.NetServer.NSBulkUpdateAgent
- uid: CRMScript.Global.String
  commentId: T:CRMScript.Global.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: CRMScript.Global.String
- uid: CRMScript.Global.Integer
  commentId: T:CRMScript.Global.Integer
  isExternal: true
  name: Integer
  nameWithType: Integer
  fullName: CRMScript.Global.Integer
- uid: CRMScript.Global.Bool
  commentId: T:CRMScript.Global.Bool
  isExternal: true
  name: Bool
  nameWithType: Bool
  fullName: CRMScript.Global.Bool
- uid: CRMScript.NetServer.NSFieldValueInfo[]
  isExternal: true
  name: NSFieldValueInfo[]
  nameWithType: NSFieldValueInfo[]
  fullName: CRMScript.NetServer.NSFieldValueInfo[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSFieldValueInfo
    isExternal: true
    name: NSFieldValueInfo
    nameWithType: NSFieldValueInfo
    fullName: CRMScript.NetServer.NSFieldValueInfo
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSFieldValueInfo
  commentId: T:CRMScript.NetServer.NSFieldValueInfo
  isExternal: true
  name: NSFieldValueInfo
  nameWithType: NSFieldValueInfo
  fullName: CRMScript.NetServer.NSFieldValueInfo
- uid: CRMScript.Global.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: CRMScript.Global.String[]
  spec.crmscript:
  - uid: CRMScript.Global.String
    isExternal: true
    name: String
    nameWithType: String
    fullName: CRMScript.Global.String
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.Global.String
  commentId: T:CRMScript.Global.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: CRMScript.Global.String
- uid: CRMScript.Global.Void
  commentId: T:CRMScript.Global.Void
  isExternal: true
  name: Void
  nameWithType: Void
  fullName: CRMScript.Global.Void
