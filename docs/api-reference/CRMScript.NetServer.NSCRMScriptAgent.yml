### YamlMime:ManagedReference
items:
- uid: CRMScript.NetServer.NSCRMScriptAgent
  commentId: T:CRMScript.NetServer.NSCRMScriptAgent
  id: NSCRMScriptAgent
  langs:
  - crmscript
  children:
  - CRMScript.NetServer.NSCRMScriptAgent.#ctor
  - CRMScript.NetServer.NSCRMScriptAgent.CreateDefaultCRMScriptEntity()
  - CRMScript.NetServer.NSCRMScriptAgent.CreateDefaultTriggerScriptEntity()
  - CRMScript.NetServer.NSCRMScriptAgent.DeleteCRMScriptByUniqueIdentifier(String)
  - CRMScript.NetServer.NSCRMScriptAgent.DeleteCRMScriptEntity(Integer)
  - CRMScript.NetServer.NSCRMScriptAgent.DeleteTriggerScriptByUniqueId(String)
  - CRMScript.NetServer.NSCRMScriptAgent.DeleteTriggerScriptEntity(Integer)
  - CRMScript.NetServer.NSCRMScriptAgent.ExecuteScript(Integer.String[])
  - CRMScript.NetServer.NSCRMScriptAgent.ExecuteScriptAsEvent(Integer,NSEventData)
  - CRMScript.NetServer.NSCRMScriptAgent.ExecuteScriptAsEventByUniqueId(String,NSEventData)
  - CRMScript.NetServer.NSCRMScriptAgent.ExecuteScriptByIncludeId(String,String[])
  - CRMScript.NetServer.NSCRMScriptAgent.ExecuteScriptByUniqueId(String,String[])
  - CRMScript.NetServer.NSCRMScriptAgent.GetCRMScriptByUniqueIdentifier(String)
  - CRMScript.NetServer.NSCRMScriptAgent.GetCRMScriptEntity(Integer)
  - CRMScript.NetServer.NSCRMScriptAgent.GetTriggerScriptByUniqueId(String)
  - CRMScript.NetServer.NSCRMScriptAgent.GetTriggerScriptEntity(Integer)
  - CRMScript.NetServer.NSCRMScriptAgent.SaveCRMScriptByUniqueIdentifier(String,NSScript)
  - CRMScript.NetServer.NSCRMScriptAgent.SaveCRMScriptEntity(NSCRMScriptEntity)
  - CRMScript.NetServer.NSCRMScriptAgent.SaveTriggerScriptByUniqueId(String,NSTriggerScriptEntity)
  - CRMScript.NetServer.NSCRMScriptAgent.SaveTriggerScriptEntity(NSTriggerScriptEntity)
  - CRMScript.NetServer.NSCRMScriptAgent.ValidateScript(Integer)
  - CRMScript.NetServer.NSCRMScriptAgent.ValidateScriptByIncludeId(String)
  - CRMScript.NetServer.NSCRMScriptAgent.ValidateScriptByUniqueId(String)
  - CRMScript.NetServer.NSCRMScriptAgent.ValidateTriggerScript(Integer)
  - CRMScript.NetServer.NSCRMScriptAgent.ValidateTriggerScriptByUniqueId(String)
  name: NSCRMScriptAgent
  nameWithType: NSCRMScriptAgent
  fullName: CRMScript.NetServer.NSCRMScriptAgent
  type: Class
  summary: "\nManage and execute CRMScript functions.\n"
  example: 
  - "\n<pre><code>NSCRMScriptAgent agent;\nagent.callMethod(arg1, arg2);</code></pre>\n"
- uid: CRMScript.NetServer.NSCRMScriptAgent.#ctor
  commentId: M:CRMScript.NetServer.NSCRMScriptAgent.#ctor
  id: '#ctor'
  so.intellisense: Void.NSCRMScriptAgent
  langs:
  - crmscript
  name: '#ctor'
  nameWithType: NSCRMScriptAgent.#ctor
  fullName: CRMScript.NetServer.NSCRMScriptAgent.#ctor
  type: Constructor
  summary: "\nManage and execute CRMScript functions.\n"
  remarks: 
  syntax: 
    content: NSCRMScriptAgent
  example: 
  - "\n<pre><code>NSCRMScriptAgent agent;\nagent.callMethod(arg1, arg2);</code></pre>\n"
- uid: CRMScript.NetServer.NSCRMScriptAgent.CreateDefaultCRMScriptEntity()
  commentId: M:CRMScript.NetServer.NSCRMScriptAgent.CreateDefaultCRMScriptEntity()
  id: 'CreateDefaultCRMScriptEntity()'
  so.intellisense: NSCRMScriptAgent.CreateDefaultCRMScriptEntity
  langs:
  - crmscript
  name: 'CreateDefaultCRMScriptEntity()'
  nameWithType: NSCRMScriptAgent.CreateDefaultCRMScriptEntity()
  fullName: CRMScript.NetServer.NSCRMScriptAgent.CreateDefaultCRMScriptEntity()
  type: Method
  summary: "\nSets default values into a new NSCRMScriptEntity.\n"
  remarks: "\nNetServer calculates default values (for example, Country) on the entity, which is required when creating/storing a new instance\n"
  syntax: 
    content: NSCRMScriptEntity CreateDefaultCRMScriptEntity()
    parameters: []
    return:
      type: CRMScript.NetServer.NSCRMScriptEntity
      description: The newly created entity
  example: 
  - "\n<pre><code>NSCRMScriptAgent agent;\nNSCRMScriptEntity thing = agent.CreateDefaultCRMScriptEntity();\nthing = agent.SaveCRMScriptEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSCRMScriptAgent.CreateDefaultTriggerScriptEntity()
  commentId: M:CRMScript.NetServer.NSCRMScriptAgent.CreateDefaultTriggerScriptEntity()
  id: 'CreateDefaultTriggerScriptEntity()'
  so.intellisense: NSCRMScriptAgent.CreateDefaultTriggerScriptEntity
  langs:
  - crmscript
  name: 'CreateDefaultTriggerScriptEntity()'
  nameWithType: NSCRMScriptAgent.CreateDefaultTriggerScriptEntity()
  fullName: CRMScript.NetServer.NSCRMScriptAgent.CreateDefaultTriggerScriptEntity()
  type: Method
  summary: "\nSets default values into a new NSTriggerScriptEntity.\n"
  remarks: "\nNetServer calculates default values (for example, Country) on the entity, which is required when creating/storing a new instance\n"
  syntax: 
    content: NSTriggerScriptEntity CreateDefaultTriggerScriptEntity()
    parameters: []
    return:
      type: CRMScript.NetServer.NSTriggerScriptEntity
      description: The newly created entity
  example: 
  - "\n<pre><code>NSCRMScriptAgent agent;\nNSTriggerScriptEntity thing = agent.CreateDefaultTriggerScriptEntity();\nthing = agent.SaveTriggerScriptEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSCRMScriptAgent.DeleteCRMScriptByUniqueIdentifier(String)
  commentId: M:CRMScript.NetServer.NSCRMScriptAgent.DeleteCRMScriptByUniqueIdentifier(String)
  id: 'DeleteCRMScriptByUniqueIdentifier(String)'
  so.intellisense: NSCRMScriptAgent.DeleteCRMScriptByUniqueIdentifier
  langs:
  - crmscript
  name: 'DeleteCRMScriptByUniqueIdentifier(String)'
  nameWithType: NSCRMScriptAgent.DeleteCRMScriptByUniqueIdentifier(String)
  fullName: CRMScript.NetServer.NSCRMScriptAgent.DeleteCRMScriptByUniqueIdentifier(String)
  type: Method
  summary: "\nDeletes the CRMScript\n"
  remarks: 
  syntax: 
    content: Void DeleteCRMScriptByUniqueIdentifier(String uniqueIdentifier)
    parameters:
    - id: uniqueIdentifier
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSCRMScriptAgent agent;\nString uniqueIdentifier;\nagent.DeleteCRMScriptByUniqueIdentifier(uniqueIdentifier);</code></pre>\n"
- uid: CRMScript.NetServer.NSCRMScriptAgent.DeleteCRMScriptEntity(Integer)
  commentId: M:CRMScript.NetServer.NSCRMScriptAgent.DeleteCRMScriptEntity(Integer)
  id: 'DeleteCRMScriptEntity(Integer)'
  so.intellisense: NSCRMScriptAgent.DeleteCRMScriptEntity
  langs:
  - crmscript
  name: 'DeleteCRMScriptEntity(Integer)'
  nameWithType: NSCRMScriptAgent.DeleteCRMScriptEntity(Integer)
  fullName: CRMScript.NetServer.NSCRMScriptAgent.DeleteCRMScriptEntity(Integer)
  type: Method
  summary: "\nDeletes the NSCRMScriptEntity\n"
  remarks: 
  syntax: 
    content: DeleteCRMScriptEntity(Integer cRMScriptEntity)
    parameters:
    - id: cRMScriptEntity
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSCRMScriptAgent agent;\nagent.DeleteCRMScriptEntity(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSCRMScriptAgent.DeleteTriggerScriptByUniqueId(String)
  commentId: M:CRMScript.NetServer.NSCRMScriptAgent.DeleteTriggerScriptByUniqueId(String)
  id: 'DeleteTriggerScriptByUniqueId(String)'
  so.intellisense: NSCRMScriptAgent.DeleteTriggerScriptByUniqueId
  langs:
  - crmscript
  name: 'DeleteTriggerScriptByUniqueId(String)'
  nameWithType: NSCRMScriptAgent.DeleteTriggerScriptByUniqueId(String)
  fullName: CRMScript.NetServer.NSCRMScriptAgent.DeleteTriggerScriptByUniqueId(String)
  type: Method
  summary: "\nDeletes a trigger CRMScript.\n"
  remarks: 
  syntax: 
    content: Void DeleteTriggerScriptByUniqueId(String triggerScriptUniqueId)
    parameters:
    - id: triggerScriptUniqueId
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSCRMScriptAgent agent;\nString triggerScriptUniqueId;\nagent.DeleteTriggerScriptByUniqueId(triggerScriptUniqueId);</code></pre>\n"
- uid: CRMScript.NetServer.NSCRMScriptAgent.DeleteTriggerScriptEntity(Integer)
  commentId: M:CRMScript.NetServer.NSCRMScriptAgent.DeleteTriggerScriptEntity(Integer)
  id: 'DeleteTriggerScriptEntity(Integer)'
  so.intellisense: NSCRMScriptAgent.DeleteTriggerScriptEntity
  langs:
  - crmscript
  name: 'DeleteTriggerScriptEntity(Integer)'
  nameWithType: NSCRMScriptAgent.DeleteTriggerScriptEntity(Integer)
  fullName: CRMScript.NetServer.NSCRMScriptAgent.DeleteTriggerScriptEntity(Integer)
  type: Method
  summary: "\nDeletes the NSTriggerScriptEntity\n"
  remarks: 
  syntax: 
    content: DeleteTriggerScriptEntity(Integer triggerScriptEntity)
    parameters:
    - id: triggerScriptEntity
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSCRMScriptAgent agent;\nagent.DeleteTriggerScriptEntity(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSCRMScriptAgent.ExecuteScript(Integer.String[])
  commentId: M:CRMScript.NetServer.NSCRMScriptAgent.ExecuteScript(Integer.String[])
  id: 'ExecuteScript(Integer.String[])'
  so.intellisense: NSCRMScriptAgent.ExecuteScript
  langs:
  - crmscript
  name: 'ExecuteScript(Integer.String[])'
  nameWithType: NSCRMScriptAgent.ExecuteScript(Integer.String[])
  fullName: CRMScript.NetServer.NSCRMScriptAgent.ExecuteScript(Integer.String[])
  type: Method
  summary: "\nExecutes a CRMScript with parameters, returning printed output value.\n"
  remarks: 
  syntax: 
    content: String ExecuteScript(Integer cRMScriptId, String[] parameters)
    parameters:
    - id: cRMScriptId
      type: CRMScript.Global.Integer
      description: 
    - id: parameters
      type: CRMScript.Global.String[]
      description: 
    return:
      type: CRMScript.Global.String
      description: Output from script
  example: 
  - "\n<pre><code>NSCRMScriptAgent agent;\nInteger cRMScriptId;\nString[] parameters;\nString res = agent.ExecuteScript(cRMScriptId, parameters);</code></pre>\n"
- uid: CRMScript.NetServer.NSCRMScriptAgent.ExecuteScriptAsEvent(Integer,NSEventData)
  commentId: M:CRMScript.NetServer.NSCRMScriptAgent.ExecuteScriptAsEvent(Integer,NSEventData)
  id: 'ExecuteScriptAsEvent(Integer,NSEventData)'
  so.intellisense: NSCRMScriptAgent.ExecuteScriptAsEvent
  langs:
  - crmscript
  name: 'ExecuteScriptAsEvent(Integer,NSEventData)'
  nameWithType: NSCRMScriptAgent.ExecuteScriptAsEvent(Integer,NSEventData)
  fullName: CRMScript.NetServer.NSCRMScriptAgent.ExecuteScriptAsEvent(Integer,NSEventData)
  type: Method
  summary: "\nExecutes a CRMScript with event data as input.\n"
  remarks: 
  syntax: 
    content: NSEventData ExecuteScriptAsEvent(Integer cRMScriptId, NSEventData eventData)
    parameters:
    - id: cRMScriptId
      type: CRMScript.Global.Integer
      description: 
    - id: eventData
      type: CRMScript.NetServer.NSEventData
      description:
    return:
      type: CRMScript.NetServer.NSEventData
      description: event data with output variable values
  example: 
  - "\n<pre><code>NSCRMScriptAgent agent;\nInteger cRMScriptId;\nNSEventData eventData;\nNSEventData res = agent.ExecuteScriptAsEvent(cRMScriptId, eventData);</code></pre>\n"
- uid: CRMScript.NetServer.NSCRMScriptAgent.ExecuteScriptAsEventByUniqueId(String,NSEventData)
  commentId: M:CRMScript.NetServer.NSCRMScriptAgent.ExecuteScriptAsEventByUniqueId(String,NSEventData)
  id: 'ExecuteScriptAsEventByUniqueId(String,NSEventData)'
  so.intellisense: NSCRMScriptAgent.ExecuteScriptAsEventByUniqueId
  langs:
  - crmscript
  name: 'ExecuteScriptAsEventByUniqueId(String,NSEventData)'
  nameWithType: NSCRMScriptAgent.ExecuteScriptAsEventByUniqueId(String,NSEventData)
  fullName: CRMScript.NetServer.NSCRMScriptAgent.ExecuteScriptAsEventByUniqueId(String,NSEventData)
  type: Method
  summary: "\nExecutes a CRMScript with event data as input.\n"
  remarks: 
  syntax: 
    content: NSEventData ExecuteScriptAsEventByUniqueId(String cRMScriptUniqueId, NSEventData eventData)
    parameters:
    - id: cRMScriptUniqueId
      type: CRMScript.Global.String
      description: 
    - id: eventData
      type: CRMScript.NetServer.NSEventData
      description:
    return:
      type: CRMScript.NetServer.NSEventData
      description: event data with output variable values
  example: 
  - "\n<pre><code>NSCRMScriptAgent agent;\nString cRMScriptUniqueId;\nNSEventData eventData;\nNSEventData res = agent.ExecuteScriptAsEventByUniqueId(cRMScriptUniqueId, eventData);</code></pre>\n"
- uid: CRMScript.NetServer.NSCRMScriptAgent.ExecuteScriptByIncludeId(String,String[])
  commentId: M:CRMScript.NetServer.NSCRMScriptAgent.ExecuteScriptByIncludeId(String,String[])
  id: 'ExecuteScriptByIncludeId(String,String[])'
  so.intellisense: NSCRMScriptAgent.ExecuteScriptByIncludeId
  langs:
  - crmscript
  name: 'ExecuteScriptByIncludeId(String,String[])'
  nameWithType: NSCRMScriptAgent.ExecuteScriptByIncludeId(String,String[])
  fullName: CRMScript.NetServer.NSCRMScriptAgent.ExecuteScriptByIncludeId(String,String[])
  type: Method
  summary: "\nExecutes a CRMScript with parameters.\n"
  remarks: 
  syntax: 
    content: String ExecuteScriptByIncludeId(String cRMScriptIncludeId, String[] parameters)
    parameters:
    - id: cRMScriptIncludeId
      type: CRMScript.Global.String
      description: 
    - id: parameters
      type: CRMScript.Global.String[]
      description: 
    return:
      type: CRMScript.Global.String
      description: output from script
  example: 
  - "\n<pre><code>NSCRMScriptAgent agent;\nString cRMScriptIncludeId;\nString[] parameters;\nString res = agent.ExecuteScriptByIncludeId(cRMScriptIncludeId, parameters);</code></pre>\n"
- uid: CRMScript.NetServer.NSCRMScriptAgent.ExecuteScriptByUniqueId(String,String[])
  commentId: M:CRMScript.NetServer.NSCRMScriptAgent.ExecuteScriptByUniqueId(String,String[])
  id: 'ExecuteScriptByUniqueId(String,String[])'
  so.intellisense: NSCRMScriptAgent.ExecuteScriptByUniqueId
  langs:
  - crmscript
  name: 'ExecuteScriptByUniqueId(String,String[])'
  nameWithType: NSCRMScriptAgent.ExecuteScriptByUniqueId(String,String[])
  fullName: CRMScript.NetServer.NSCRMScriptAgent.ExecuteScriptByUniqueId(String,String[])
  type: Method
  summary: "\nExecutes a CRMScript with parameters.\n"
  remarks: 
  syntax: 
    content: String ExecuteScriptByUniqueId(String cRMScriptUniqueId, String[] parameters)
    parameters:
    - id: cRMScriptUniqueId
      type: CRMScript.Global.String
      description: 
    - id: parameters
      type: CRMScript.Global.String[]
      description:
    return:
      type: CRMScript.Global.String
      description: output from script
  example: 
  - "\n<pre><code>NSCRMScriptAgent agent;\nString cRMScriptUniqueId;\nString[] parameters;\nString res = agent.ExecuteScriptByUniqueId(cRMScriptUniqueId, parameters);</code></pre>\n"
- uid: CRMScript.NetServer.NSCRMScriptAgent.GetCRMScriptByUniqueIdentifier(String)
  commentId: M:CRMScript.NetServer.NSCRMScriptAgent.GetCRMScriptByUniqueIdentifier(String)
  id: 'GetCRMScriptByUniqueIdentifier(String)'
  so.intellisense: NSCRMScriptAgent.GetCRMScriptByUniqueIdentifier
  langs:
  - crmscript
  name: 'GetCRMScriptByUniqueIdentifier(String)'
  nameWithType: NSCRMScriptAgent.GetCRMScriptByUniqueIdentifier(String)
  fullName: CRMScript.NetServer.NSCRMScriptAgent.GetCRMScriptByUniqueIdentifier(String)
  type: Method
  summary: "\nGets information about an NSScript from a unique identifier\n"
  remarks: 
  syntax: 
    content: NSCRMScript GetCRMScriptByUniqueIdentifier(String uniqueIdentifier)
    parameters:
    - id: uniqueIdentifier
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.NetServer.NSScript
      description: 
  example: 
  - "\n<pre><code>NSCRMScriptAgent agent;\nString uniqueIdentifier;\nNSScript res = agent.GetCRMScriptByUniqueIdentifier(uniqueIdentifier);</code></pre>\n"
- uid: CRMScript.NetServer.NSCRMScriptAgent.GetCRMScriptEntity(Integer)
  commentId: M:CRMScript.NetServer.NSCRMScriptAgent.GetCRMScriptEntity(Integer)
  id: 'GetCRMScriptEntity(Integer)'
  so.intellisense: NSCRMScriptAgent.GetCRMScriptEntity
  langs:
  - crmscript
  name: 'GetCRMScriptEntity(Integer)'
  nameWithType: NSCRMScriptAgent.GetCRMScriptEntity(Integer)
  fullName: CRMScript.NetServer.NSCRMScriptAgent.GetCRMScriptEntity(Integer)
  type: Method
  summary: "\nGets an NSCRMScriptEntity object.\n"
  remarks: 
  syntax: 
    content: NSCRMScriptEntity GetCRMScriptEntity(Integer cRMScriptEntityId)
    parameters:
    - id: cRMScriptEntityId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSCRMScriptEntity
      description:
  example: 
  - "\n<pre><code>NSCRMScriptAgent agent;\nNSCRMScriptEntity thing = agent.GetCRMScriptEntity(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSCRMScriptAgent.GetTriggerScriptByUniqueId(String)
  commentId: M:CRMScript.NetServer.NSCRMScriptAgent.GetTriggerScriptByUniqueId(String)
  id: 'GetTriggerScriptByUniqueId(String)'
  so.intellisense: NSCRMScriptAgent.GetTriggerScriptByUniqueId
  langs:
  - crmscript
  name: 'GetTriggerScriptByUniqueId(String)'
  nameWithType: NSCRMScriptAgent.GetTriggerScriptByUniqueId(String)
  fullName: CRMScript.NetServer.NSCRMScriptAgent.GetTriggerScriptByUniqueId(String)
  type: Method
  summary: "\nGets a trigger CRMScript.\n"
  remarks: 
  syntax: 
    content: NSTriggerScriptEntity GetTriggerScriptByUniqueId(String triggerScriptUniqueId)
    parameters:
    - id: triggerScriptUniqueId
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.NetServer.NSTriggerScriptEntity
      description:
  example: 
  - "\n<pre><code>NSCRMScriptAgent agent;\nString triggerScriptUniqueId;\nNSTriggerScriptEntity res = agent.GetTriggerScriptByUniqueId(triggerScriptUniqueId);</code></pre>\n"
- uid: CRMScript.NetServer.NSCRMScriptAgent.GetTriggerScriptEntity(Integer)
  commentId: M:CRMScript.NetServer.NSCRMScriptAgent.GetTriggerScriptEntity(Integer)
  id: 'GetTriggerScriptEntity(Integer)'
  so.intellisense: NSCRMScriptAgent.GetTriggerScriptEntity
  langs:
  - crmscript
  name: 'GetTriggerScriptEntity(Integer)'
  nameWithType: NSCRMScriptAgent.GetTriggerScriptEntity(Integer)
  fullName: CRMScript.NetServer.NSCRMScriptAgent.GetTriggerScriptEntity(Integer)
  type: Method
  summary: "\nGets an NSTriggerScriptEntity object.\n"
  remarks: 
  syntax: 
    content: NSTriggerScriptEntity GetTriggerScriptEntity(Integer triggerScriptEntityId)
    parameters:
    - id: triggerScriptEntityId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSTriggerScriptEntity
      description:
  example: 
  - "\n<pre><code>NSCRMScriptAgent agent;\nNSTriggerScriptEntity thing = agent.GetTriggerScriptEntity(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSCRMScriptAgent.SaveCRMScriptByUniqueIdentifier(String,NSScript)
  commentId: M:CRMScript.NetServer.NSCRMScriptAgent.SaveCRMScriptByUniqueIdentifier(String,NSScript)
  id: 'SaveCRMScriptByUniqueIdentifier(String,NSScript)'
  so.intellisense: NSCRMScriptAgent.SaveCRMScriptByUniqueIdentifier
  langs:
  - crmscript
  name: 'SaveCRMScriptByUniqueIdentifier(String,NSScript)'
  nameWithType: NSCRMScriptAgent.SaveCRMScriptByUniqueIdentifier(String,NSScript)
  fullName: CRMScript.NetServer.NSCRMScriptAgent.SaveCRMScriptByUniqueIdentifier(String,NSScript)
  type: Method
  summary: "\nCreates or Updates the CRMScript information\n"
  remarks: 
  syntax: 
    content: CRMScript.NetServer.NSScriptSaveCRMScriptByUniqueIdentifier(String uniqueIdentifier, CRMScript.NetServer.NSScript)
    parameters:
    - id: uniqueIdentifier
      type: CRMScript.Global.String
      description: 
    - id: crmscript
      type: CRMScript.NetServer.NSScript
      description: 
    return:
      type: CRMScript.NetServer.NSScript
      description:
  example: 
  - "\n<pre><code>NSCRMScriptAgent agent;\nString uniqueIdentifier;\nCRMScript.NetServer.NSScript;\nCRMScript.NetServer.NSScript res = agent.SaveCRMScriptByUniqueIdentifier(uniqueIdentifier, crmscript);</code></pre>\n"
- uid: CRMScript.NetServer.NSCRMScriptAgent.SaveCRMScriptEntity(NSCRMScriptEntity)
  commentId: M:CRMScript.NetServer.NSCRMScriptAgent.SaveCRMScriptEntity(NSCRMScriptEntity)
  id: 'SaveCRMScriptEntity(NSCRMScriptEntity)'
  so.intellisense: NSCRMScriptAgent.SaveCRMScriptEntity
  langs:
  - crmscript
  name: 'SaveCRMScriptEntity(NSCRMScriptEntity)'
  nameWithType: NSCRMScriptAgent.SaveCRMScriptEntity(NSCRMScriptEntity)
  fullName: CRMScript.NetServer.NSCRMScriptAgent.SaveCRMScriptEntity(NSCRMScriptEntity)
  type: Method
  summary: "\nUpdates the existing NSCRMScriptEntity or creates a new NSCRMScriptEntity if the ID parameter is 0\n"
  remarks: 
  syntax: 
    content: NSCRMScriptEntity SaveCRMScriptEntity(NSCRMScriptEntity cRMScriptEntity)
    parameters:
    - id: cRMScriptEntity
      type: CRMScript.NetServer.NSCRMScriptEntity
      description: The NSCRMScriptEntity to save.
    return:
      type: CRMScript.NetServer.NSCRMScriptEntity
      description:
  example: 
  - "\n<pre><code>NSCRMScriptAgent  agent;\nNSCRMScriptEntity thing = agent.CreateDefaultCRMScriptEntity();\nthing = agent.SaveCRMScriptEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSCRMScriptAgent.SaveTriggerScriptByUniqueId(String,NSTriggerScriptEntity)
  commentId: M:CRMScript.NetServer.NSCRMScriptAgent.SaveTriggerScriptByUniqueId(String,NSTriggerScriptEntity)
  id: 'SaveTriggerScriptByUniqueId(String,NSTriggerScriptEntity)'
  so.intellisense: NSCRMScriptAgent.SaveTriggerScriptByUniqueId
  langs:
  - crmscript
  name: 'SaveTriggerScriptByUniqueId(String,NSTriggerScriptEntity)'
  nameWithType: NSCRMScriptAgent.SaveTriggerScriptByUniqueId(String,NSTriggerScriptEntity)
  fullName: CRMScript.NetServer.NSCRMScriptAgent.SaveTriggerScriptByUniqueId(String,NSTriggerScriptEntity)
  type: Method
  summary: "\nValidates a CRMScript(checks that the syntax is correct)\n"
  remarks: 
  syntax: 
    content: NSTriggerScriptEntity SaveTriggerScriptByUniqueId(String triggerScriptUniqueId, NSTriggerScriptEntity entity)
    parameters:
    - id: triggerScriptUniqueId
      type: CRMScript.Global.String
      description: 
    - id: entity
      type: CRMScript.NetServer.NSTriggerScriptEntity
      description: 
    return:
      type: CRMScript.NetServer.NSTriggerScriptEntity
      description:
  example: 
  - "\n<pre><code>NSCRMScriptAgent agent;\nString triggerScriptUniqueId;\nNSTriggerScriptEntity entity;\nNSTriggerScriptEntity res = agent.SaveTriggerScriptByUniqueId(triggerScriptUniqueId, entity);</code></pre>\n"
- uid: CRMScript.NetServer.NSCRMScriptAgent.SaveTriggerScriptEntity(NSTriggerScriptEntity)
  commentId: M:CRMScript.NetServer.NSCRMScriptAgent.SaveTriggerScriptEntity(NSTriggerScriptEntity)
  id: 'SaveTriggerScriptEntity(NSTriggerScriptEntity)'
  so.intellisense: NSCRMScriptAgent.SaveTriggerScriptEntity
  langs:
  - crmscript
  name: 'SaveTriggerScriptEntity(NSTriggerScriptEntity)'
  nameWithType: NSCRMScriptAgent.SaveTriggerScriptEntity(NSTriggerScriptEntity)
  fullName: CRMScript.NetServer.NSCRMScriptAgent.SaveTriggerScriptEntity(NSTriggerScriptEntity)
  type: Method
  summary: "\nUpdates the existing NSTriggerScriptEntity or creates a new NSTriggerScriptEntity if the ID parameter is 0\n"
  remarks: 
  syntax: 
    content: NSTriggerScriptEntity SaveTriggerScriptEntity(NSTriggerScriptEntity triggerScriptEntity)
    parameters:
    - id: triggerScriptEntity
      type: CRMScript.NetServer.NSTriggerScriptEntity
      description: The NSTriggerScriptEntity to save.
    return:
      type: CRMScript.NetServer.NSTriggerScriptEntity
  example: 
  - "\n<pre><code>NSCRMScriptAgent  agent;\nNSTriggerScriptEntity thing = agent.CreateDefaultTriggerScriptEntity();\nthing = agent.SaveTriggerScriptEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSCRMScriptAgent.ValidateScript(Integer)
  commentId: M:CRMScript.NetServer.NSCRMScriptAgent.ValidateScript(Integer)
  id: 'ValidateScript(Integer)'
  so.intellisense: NSCRMScriptAgent.ValidateScript
  langs:
  - crmscript
  name: 'ValidateScript(Integer)'
  nameWithType: NSCRMScriptAgent.ValidateScript(Integer)
  fullName: CRMScript.NetServer.NSCRMScriptAgent.ValidateScript(Integer)
  type: Method
  summary: "\nValidates a CRMScript(checks that the syntax is correct)\n"
  remarks: 
  syntax: 
    content: NSCRMScriptResult ValidateScript(Integer cRMScriptId)
    parameters:
    - id: cRMScriptId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSCRMScriptResult
  example: 
  - "\n<pre><code>NSCRMScriptAgent agent;\nInteger cRMScriptId;\nNSCRMScriptResult res = agent.ValidateScript(cRMScriptId);</code></pre>\n"
- uid: CRMScript.NetServer.NSCRMScriptAgent.ValidateScriptByIncludeId(String)
  commentId: M:CRMScript.NetServer.NSCRMScriptAgent.ValidateScriptByIncludeId(String)
  id: 'ValidateScriptByIncludeId(String)'
  so.intellisense: NSCRMScriptAgent.ValidateScriptByIncludeId
  langs:
  - crmscript
  name: 'ValidateScriptByIncludeId(String)'
  nameWithType: NSCRMScriptAgent.ValidateScriptByIncludeId(String)
  fullName: CRMScript.NetServer.NSCRMScriptAgent.ValidateScriptByIncludeId(String)
  type: Method
  summary: "\nValidates a CRMScript(checks that the syntax is correct)\n"
  remarks: 
  syntax: 
    content: NSCRMScriptResult ValidateScriptByIncludeId(String cRMScriptIncludeId)
    parameters:
    - id: cRMScriptIncludeId
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.NetServer.NSCRMScriptResult
      description:
  example: 
  - "\n<pre><code>NSCRMScriptAgent agent;\nString cRMScriptIncludeId;\nNSCRMScriptResult res = agent.ValidateScriptByIncludeId(cRMScriptIncludeId);</code></pre>\n"
- uid: CRMScript.NetServer.NSCRMScriptAgent.ValidateScriptByUniqueId(String)
  commentId: M:CRMScript.NetServer.NSCRMScriptAgent.ValidateScriptByUniqueId(String)
  id: 'ValidateScriptByUniqueId(String)'
  so.intellisense: NSCRMScriptAgent.ValidateScriptByUniqueId
  langs:
  - crmscript
  name: 'ValidateScriptByUniqueId(String)'
  nameWithType: NSCRMScriptAgent.ValidateScriptByUniqueId(String)
  fullName: CRMScript.NetServer.NSCRMScriptAgent.ValidateScriptByUniqueId(String)
  type: Method
  summary: "\nValidates a CRMScript(checks that the syntax is correct)\n"
  remarks: 
  syntax: 
    content: NSCRMScriptResult ValidateScriptByUniqueId(String cRMScriptUniqueId)
    parameters:
    - id: cRMScriptUniqueId
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.NetServer.NSCRMScriptResult
      description:
  example: 
  - "\n<pre><code>NSCRMScriptAgent agent;\nString cRMScriptUniqueId;\nNSCRMScriptResult res = agent.ValidateScriptByUniqueId(cRMScriptUniqueId);</code></pre>\n"
- uid: CRMScript.NetServer.NSCRMScriptAgent.ValidateTriggerScript(Integer)
  commentId: M:CRMScript.NetServer.NSCRMScriptAgent.ValidateTriggerScript(Integer)
  id: 'ValidateTriggerScript(Integer)'
  so.intellisense: NSCRMScriptAgent.ValidateTriggerScript
  langs:
  - crmscript
  name: 'ValidateTriggerScript(Integer)'
  nameWithType: NSCRMScriptAgent.ValidateTriggerScript(Integer)
  fullName: CRMScript.NetServer.NSCRMScriptAgent.ValidateTriggerScript(Integer)
  type: Method
  summary: "\nValidates a Trigger CRMScript(checks that the syntax is correct but not execute the script).\n"
  remarks: 
  syntax: 
    content: NSCRMScriptResult ValidateTriggerScript(Integer triggerScriptId)
    parameters:
    - id: triggerScriptId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSCRMScriptResult
      description:
  example: 
  - "\n<pre><code>NSCRMScriptAgent agent;\nInteger triggerScriptId;\nNSCRMScriptResult res = agent.ValidateTriggerScript(triggerScriptId);</code></pre>\n"
- uid: CRMScript.NetServer.NSCRMScriptAgent.ValidateTriggerScriptByUniqueId(String)
  commentId: M:CRMScript.NetServer.NSCRMScriptAgent.ValidateTriggerScriptByUniqueId(String)
  id: 'ValidateTriggerScriptByUniqueId(String)'
  so.intellisense: NSCRMScriptAgent.ValidateTriggerScriptByUniqueId
  langs:
  - crmscript
  name: 'ValidateTriggerScriptByUniqueId(String)'
  nameWithType: NSCRMScriptAgent.ValidateTriggerScriptByUniqueId(String)
  fullName: CRMScript.NetServer.NSCRMScriptAgent.ValidateTriggerScriptByUniqueId(String)
  type: Method
  summary: "\nValidates a Trigger CRMScript(checks that the syntax is correct but not execute the script).\n"
  remarks: 
  syntax: 
    content: NSCRMScriptResult ValidateTriggerScriptByUniqueId(String triggerScriptUniqueId)
    parameters:
    - id: triggerScriptUniqueId
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.NetServer.NSCRMScriptResult
  example: 
  - "\n<pre><code>NSCRMScriptAgent agent;\nString triggerScriptUniqueId;\nNSCRMScriptResult res = agent.ValidateTriggerScriptByUniqueId(triggerScriptUniqueId);</code></pre>\n"
references:
- uid: CRMScript.NetServer.NSCRMScriptAgent
  commentId: T:CRMScript.NetServer.NSCRMScriptAgent
  isExternal: true
  name: NSCRMScriptAgent
  nameWithType: NSCRMScriptAgent
  fullName: CRMScript.NetServer.NSCRMScriptAgent
- uid: CRMScript.NetServer.NSCRMScriptEntity
  commentId: T:CRMScript.NetServer.NSCRMScriptEntity
  isExternal: true
  name: NSCRMScriptEntity
  nameWithType: NSCRMScriptEntity
  fullName: CRMScript.NetServer.NSCRMScriptEntity
- uid: CRMScript.NetServer.NSTriggerScriptEntity
  commentId: T:CRMScript.NetServer.NSTriggerScriptEntity
  isExternal: true
  name: NSTriggerScriptEntity
  nameWithType: NSTriggerScriptEntity
  fullName: CRMScript.NetServer.NSTriggerScriptEntity
- uid: CRMScript.Global.String
  commentId: T:CRMScript.Global.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: CRMScript.Global.String
- uid: CRMScript.Global.String[]
  commentId: T:CRMScript.Global.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: CRMScript.Global.String[]
  spec.crmscript:
  - uid: CRMScript.Global.String
    commentId: T:CRMScript.Global.String
    isExternal: true
    name: String
    nameWithType: String
    fullName: CRMScript.Global.String
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.Global.Void
  commentId: T:CRMScript.Global.Void
  isExternal: true
  name: Void
  nameWithType: Void
  fullName: CRMScript.Global.Void
- uid: CRMScript.Global.Integer
  commentId: T:CRMScript.Global.Integer
  isExternal: true
  name: Integer
  nameWithType: Integer
  fullName: CRMScript.Global.Integer
- uid: CRMScript.NetServer.NSEventData
  commentId: T:CRMScript.NetServer.NSEventData
  isExternal: true
  name: NSEventData
  nameWithType: NSEventData
  fullName: CRMScript.NetServer.NSEventData
- uid: CRMScript.NetServer.NSScript
  commentId: T:CRMScript.NetServer.NSScript
  isExternal: true
  name: NSScript
  nameWithType: NSScript
  fullName: CRMScript.NetServer.NSScript
- uid: CRMScript.NetServer.NSCRMScriptResult
  commentId: T:CRMScript.NetServer.NSCRMScriptResult
  isExternal: true
  name: NSCRMScriptResult
  nameWithType: NSCRMScriptResult
  fullName: CRMScript.NetServer.NSCRMScriptResult