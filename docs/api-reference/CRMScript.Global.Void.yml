### YamlMime:ManagedReference
items:
- uid: CRMScript.Global.Void
  commentId: T:CRMScript.Global.Void
  id: Void
  so.intellisense: 
  langs:
  - crmscript
  children:
  - CRMScript.Global.Void.addAction(String,String,Bool)
  - CRMScript.Global.Void.addChatMessage(Integer,String,Integer,String,Integer,String)
  - CRMScript.Global.Void.addHtmlElement(Integer,String,Integer)
  - CRMScript.Global.Void.assert(Bool)
  - CRMScript.Global.Void.assertEquals(Bool,Bool,String,String,Integer)
  - CRMScript.Global.Void.buildUrl()
  - CRMScript.Global.Void.cgiWasPost()
  - CRMScript.Global.Void.checkReply(String)
  - CRMScript.Global.Void.combineHtmlStrings(Vector)
  - CRMScript.Global.Void.convertStatus(Integer)
  - CRMScript.Global.Void.copyCRMDocumentToAttachment(Integer)
  - CRMScript.Global.Void.debugWait(String)
  - CRMScript.Global.Void.decodeBase64(String)
  - CRMScript.Global.Void.decodeBase64AsStream(String)
  - CRMScript.Global.Void.decodeDBValue(String)
  - CRMScript.Global.Void.enableDebug(String)
  - CRMScript.Global.Void.encodeBase64(Byte[])
  - CRMScript.Global.Void.encodeHMACSHA1(String,String)
  - CRMScript.Global.Void.encodeHMACSHA256(String,String)
  - CRMScript.Global.Void.encodeHMACSHA512(String,String)
  - CRMScript.Global.Void.encodeSHA1(String)
  - CRMScript.Global.Void.encodeSHA256(String,String)
  - CRMScript.Global.Void.executeDbiAgentSchedule(Integer)
  - CRMScript.Global.Void.executeMacro(String)
  - CRMScript.Global.Void.executeScript(String)
  - CRMScript.Global.Void.executeSQLQuery(String)
  - CRMScript.Global.Void.exitWithMessage(String)
  - CRMScript.Global.Void.faqSearch(Integer,Integer,String,Integer)
  - CRMScript.Global.Void.findReplyTemplateToMerge(Integer)
  - CRMScript.Global.Void.flushCaches()
  - CRMScript.Global.Void.forwardMail(String,String,Integer)
  - CRMScript.Global.Void.getActiveUser()
  - CRMScript.Global.Void.getAgentId(String)
  - CRMScript.Global.Void.getAgentScheduleId(String)
  - CRMScript.Global.Void.getAttachmentsSize(Integer[])
  - CRMScript.Global.Void.getCategoryIdFromFullname(String)
  - CRMScript.Global.Void.getCgiContent()
  - CRMScript.Global.Void.getCgiUrl()
  - CRMScript.Global.Void.getCgiVariable(String)
  - CRMScript.Global.Void.getCgiVariableArray(String)
  - CRMScript.Global.Void.getCgiVariables()
  - CRMScript.Global.Void.getCookie(String)
  - CRMScript.Global.Void.getCurrent(String)
  - CRMScript.Global.Void.getCurrentDate()
  - CRMScript.Global.Void.getCurrentDateTime()
  - CRMScript.Global.Void.getCurrentTime()
  - CRMScript.Global.Void.getCustomerMainEmail(Integer)
  - CRMScript.Global.Void.getDbiControl()
  - CRMScript.Global.Void.getDefaultElementConfig(Integer,String,String)
  - CRMScript.Global.Void.getDocumentId(String)
  - CRMScript.Global.Void.getEnvVariable(String)
  - CRMScript.Global.Void.getEventData()
  - CRMScript.Global.Void.getExecutable()
  - CRMScript.Global.Void.getExternalProgram(Integer)
  - CRMScript.Global.Void.getExternalProgramAdmin()
  - CRMScript.Global.Void.getExternalProgramAjax()
  - CRMScript.Global.Void.getExternalProgramBlogic()
  - CRMScript.Global.Void.getExternalProgramChat()
  - CRMScript.Global.Void.getExternalProgramCustomer()
  - CRMScript.Global.Void.getExternalProgramDocument()
  - CRMScript.Global.Void.getExternalProgramHelp()
  - CRMScript.Global.Void.getExternalProgramKnowledge()
  - CRMScript.Global.Void.getExternalProgramRms()
  - CRMScript.Global.Void.getExternalProgramSoap()
  - CRMScript.Global.Void.getExternalProgramStat()
  - CRMScript.Global.Void.getExternalProgramTicket()
  - CRMScript.Global.Void.getExtraTable(String)
  - CRMScript.Global.Void.getFavourites(String)
  - CRMScript.Global.Void.getFunctionList()
  - CRMScript.Global.Void.getGlobalStaticMap()
  - CRMScript.Global.Void.getGlobalVariable(String)
  - CRMScript.Global.Void.getHtmlElement(String)
  - CRMScript.Global.Void.getHtmlElementIndex(String)
  - CRMScript.Global.Void.getHtmlElementName(Integer)
  - CRMScript.Global.Void.getHttpHeader(String)
  - CRMScript.Global.Void.getLanguageVariable(String)
  - CRMScript.Global.Void.getLocalTimeZone()
  - CRMScript.Global.Void.getMainMenu()
  - CRMScript.Global.Void.getNtUser()
  - CRMScript.Global.Void.getNumHtmlElements()
  - CRMScript.Global.Void.getParser()
  - CRMScript.Global.Void.getParserParameter(String)
  - CRMScript.Global.Void.getParserParameterCount(String)
  - CRMScript.Global.Void.getParserVariable(String)
  - CRMScript.Global.Void.getParserVariableAsCSV(String,Bool)
  - CRMScript.Global.Void.getParserVariableCount(String)
  - CRMScript.Global.Void.getPID()
  - CRMScript.Global.Void.getPriorityIdFromName(String)
  - CRMScript.Global.Void.getProgram(Integer)
  - CRMScript.Global.Void.getProgramAdmin()
  - CRMScript.Global.Void.getProgramAjax()
  - CRMScript.Global.Void.getProgramBlogic()
  - CRMScript.Global.Void.getProgramChat()
  - CRMScript.Global.Void.getProgramCustomer()
  - CRMScript.Global.Void.getProgramDocument()
  - CRMScript.Global.Void.getProgramHelp()
  - CRMScript.Global.Void.getProgramKnowledge()
  - CRMScript.Global.Void.getProgramRms()
  - CRMScript.Global.Void.getProgramSoap()
  - CRMScript.Global.Void.getProgramStat()
  - CRMScript.Global.Void.getProgramTicket()
  - CRMScript.Global.Void.getReplyTemplateBody(Integer,Bool,Integer)
  - CRMScript.Global.Void.getReplyTemplateSubject(Integer,Integer)
  - CRMScript.Global.Void.getScreenElementConfig(Integer)
  - CRMScript.Global.Void.getScreenElementId(Integer)
  - CRMScript.Global.Void.getScreenElementName(Integer)
  - CRMScript.Global.Void.getScreenElementType(Integer)
  - CRMScript.Global.Void.getScriptId(String)
  - CRMScript.Global.Void.getSelectionIds(Integer)
  - CRMScript.Global.Void.getSessionVariable(String)
  - CRMScript.Global.Void.getSessionVariables()
  - CRMScript.Global.Void.getStatusIdFromName(String)
  - CRMScript.Global.Void.getSystemFlags()
  - CRMScript.Global.Void.getSystemLang()
  - CRMScript.Global.Void.getUserLang()
  - CRMScript.Global.Void.getUsername(Integer)
  - CRMScript.Global.Void.getVariable(String)
  - CRMScript.Global.Void.getVariables()
  - CRMScript.Global.Void.getWarnings()
  - CRMScript.Global.Void.htmlConvToText(String)
  - CRMScript.Global.Void.idToLang(Integer)
  - CRMScript.Global.Void.invoiceTypesExists()
  - CRMScript.Global.Void.isValidPhoneNumber(String,Bool)
  - CRMScript.Global.Void.langToId(String)
  - CRMScript.Global.Void.License(String,String)
  - CRMScript.Global.Void.log(String)
  - CRMScript.Global.Void.logMessage(String)
  - CRMScript.Global.Void.MacroParameter(String,String,String,String,Bool,String)
  - CRMScript.Global.Void.MacroReturnValue(String,String)
  - CRMScript.Global.Void.makePassword(Integer)
  - CRMScript.Global.Void.mapValue(String)
  - CRMScript.Global.Void.modulo(Integer,Integer)
  - CRMScript.Global.Void.parseJSON(String)
  - CRMScript.Global.Void.parseJSON2(String)
  - CRMScript.Global.Void.parseXML(String)
  - CRMScript.Global.Void.pow()
  - CRMScript.Global.Void.print(String)
  - CRMScript.Global.Void.printBinary()
  - CRMScript.Global.Void.printDebug(String)
  - CRMScript.Global.Void.printLine(String)
  - CRMScript.Global.Void.rand(Integer,Integer)
  - CRMScript.Global.Void.reloadAndSendShipment(Integer)
  - CRMScript.Global.Void.removeHtmlElement(Integer)
  - CRMScript.Global.Void.resetChat(Integer)
  - CRMScript.Global.Void.runProgram(String)
  - CRMScript.Global.Void.saveAllCgiAttachments(String)
  - CRMScript.Global.Void.saveCgiAttachment(String)
  - CRMScript.Global.Void.setChatStatus(Integer,Integer)
  - CRMScript.Global.Void.setCookie(String,String,Bool)
  - CRMScript.Global.Void.setCurrent(String,String)
  - CRMScript.Global.Void.setFromCgi()
  - CRMScript.Global.Void.setGlobalVariable(String,String)
  - CRMScript.Global.Void.setHidden(String,String)
  - CRMScript.Global.Void.setPageFocusFirstControl(Bool)
  - CRMScript.Global.Void.setPageOnLoad(String)
  - CRMScript.Global.Void.setPageRefresh(Integer)
  - CRMScript.Global.Void.setPageTitle(String)
  - CRMScript.Global.Void.setParserVariable(String,String)
  - CRMScript.Global.Void.setSessionVariable(String)
  - CRMScript.Global.Void.setUserIsTyping(Integer,Bool)
  - CRMScript.Global.Void.setVariable(String,String)
  - CRMScript.Global.Void.simpleTwoWay(Byte[])
  - CRMScript.Global.Void.sleep()
  name: Void
  nameWithType: Void
  fullName: CRMScript.Global.Void
  type: Class
  summary: "\nGlobal functions\n"
  example: 
- uid: CRMScript.Global.Void.addAction(String,String,Bool)
  commentId: M:CRMScript.Global.Void.addAction(String,String,Bool)
  id: 'addAction(String,String,Bool)'
  so.intellisense: Void.addAction
  langs:
  - crmscript
  name: 'addAction(String,String,Bool)'
  nameWithType: Void.addAction(String,String,Bool)
  fullName: CRMScript.Global.Void.addAction(String,String,Bool)
  type: Method
  summary: "\nVoid addAction(String button, String script, Bool doCheck)Adds an action to the Screen definition associated with this script (i.e. when the script is the load script for a Screen). An action is essentially a connection between a button with a given name and a script. When a button in the screen is pressed, the list of actions is checked, and the action with the matching button name (e.g. &quot;ok&quot;, &quot;cancel&quot;, &quot;addSomething&quot;) will be found and the script will be executed.\n"
  remarks: 
  syntax: 
    content: addAction(String button, String script, Bool doCheck)
    parameters:
    - id: button
      type: CRMScript.Global.String
      description: 
    - id: script
      type: CRMScript.Global.String
      description: 
    - id: doCheck
      type: CRMScript.Global.Bool
      description: 
  example: 
- uid: CRMScript.Global.Void.addChatMessage(Integer,String,Integer,String,Integer,String)
  commentId: M:CRMScript.Global.Void.addChatMessage(Integer,String,Integer,String,Integer,String)
  id: 'addChatMessage(Integer,String,Integer,String,Integer,String)'
  so.intellisense: Void.addChatMessage
  langs:
  - crmscript
  name: 'addChatMessage(Integer,String,Integer,String,Integer,String)'
  nameWithType: Void.addChatMessage(Integer,String,Integer,String,Integer,String)
  fullName: CRMScript.Global.Void.addChatMessage(Integer,String,Integer,String,Integer,String)
  type: Method
  summary: "\nCRMScript function used to add a message to a chat sessionAdds a message to a chat session. You can optionally pass a<code>DateTime</code>to set when the message will show up. This variant of<code>addChatMessage</code>is especially used for ChatBot-integrations.\n"
  remarks: 
  syntax: 
    content: Integer addChatMessage()
    parameters:
    - id: sessionId
      type: CRMScript.Global.Integer
      description: The ID of the chat session.
    - id: message
      type: CRMScript.Global.String
      description: The text of the message you want to add in HTML format. A few tags, such as &lt;b&gt;, &lt;i&gt;, &lt;ul&gt; are allowed. Other tags and attributes will be removed.
    - id: type
      type: CRMScript.Global.Integer
      description: 1 to indicate the message is to the customer.
    - id: author
      type: CRMScript.Global.String
      description: The string used as the author of the message. Placed above the message bubble.
    - id: specialType
      type: CRMScript.Global.Integer
      description: Mostly internally used. 0 = no special type; 16 =  the message is from a chatbot
    - id: specialParams
      type: CRMScript.Global.String
      description: Various params based on the specialType. Specifically, for specialType=16, you can add showAt=&lt;datetime&gt; to specify when the message should show up to create a delay before the bot message is shown.
    return:
      type: CRMScript.Global.Integer
  example: 
- uid: CRMScript.Global.Void.addHtmlElement(Integer,String,Integer)
  commentId: M:CRMScript.Global.Void.addHtmlElement(Integer,String,Integer)
  id: 'addHtmlElement(Integer,String,Integer)'
  so.intellisense: Void.addHtmlElement
  langs:
  - crmscript
  name: 'addHtmlElement(Integer,String,Integer)'
  nameWithType: Void.addHtmlElement(Integer,String,Integer)
  fullName: CRMScript.Global.Void.addHtmlElement(Integer,String,Integer)
  type: Method
  summary: "\nCRMScript function used to add an HTML element to the associated screenAdds an HTML element to the associated screen when this script is executed as the load script for a screen.<p></p>\nThe configuration for the HTML element can be provided as a String or a Map. You can optionally provide the zero-based position of the element in the list of elements for the screen.<p></p>\nReturns the element that was added.\n"
  remarks: 
  syntax: 
    content: HtmlElement addHtmlElement()
    parameters:
    - id: id
      type: CRMScript.Global.Integer
      description: The ID of this HTML element. Normally not relevant.
    - id: name
      type: CRMScript.Global.String
      description: The unique name of this HTML element. Used for accessing it later.
    - id: type
      type: CRMScript.Global.Integer
      description: The type of this element. Types are documented under bLogic.
    return:
      type: CRMScript.Native.HtmlElement
  example: 
- uid: CRMScript.Global.Void.assert(Bool)
  commentId: M:CRMScript.Global.Void.assert(Bool)
  id: 'assert(Bool)'
  so.intellisense: Void.assert
  langs:
  - crmscript
  name: 'assert(Bool)'
  nameWithType: Void.assert(Bool)
  fullName: CRMScript.Global.Void.assert(Bool)
  type: Method
  summary: "\nVoid assert(Bool condition)This method is used primarily with unit testing.
It will throw an AssertException if &quot;condition&quot; is false. The exception contains the line number where the assert occurred.\n"
  remarks: 
  syntax: 
    content: assert(Bool condition)
    parameters:
    - id: condition
      type: CRMScript.Global.Bool
      description: 
  example: 
- uid: CRMScript.Global.Void.assertEquals(Bool,Bool,String,String,Integer)
  commentId: M:CRMScript.Global.Void.assertEquals(Bool,Bool,String,String,Integer)
  id: 'assertEquals(Bool,Bool,String,String,Integer)'
  so.intellisense: Void.assertEquals
  langs:
  - crmscript
  name: 'assertEquals(Bool,Bool,String,String,Integer)'
  nameWithType: Void.assertEquals(Bool,Bool,String,String,Integer)
  fullName: CRMScript.Global.Void.assertEquals(Bool,Bool,String,String,Integer)
  type: Method
  summary: "\nCRMScript function used primarily with unit testing. It will throw an AssertException if the 2 parameters are not equal.This method is used primarily with unit testing.<p></p>\nIt will throw an<code>AssertException</code>if the 2 parameters are not equal. Specifically:<p></p>\n<ul><li>if bool1!=bool2</li><li>if float1!=float2</li><li>if string1!=string2</li><li>if integer1!=integer2</li></ul>The exception contains the line number where the assert occurred.\n"
  remarks: 
  syntax: 
    content: Void assertEquals()
    parameters:
    - id: bool1
      type: CRMScript.Global.Bool
      description: The first bool to test
    - id: bool2
      type: CRMScript.Global.Bool
      description: The second bool to test
    - id: string1
      type: CRMScript.Global.String
      description: The first string to test
    - id: string2
      type: CRMScript.Global.String
      description: The second string to test
    - id: integer1
      type: CRMScript.Global.Integer
      description: The first integer to test
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Global.Void.buildUrl()
  commentId: M:CRMScript.Global.Void.buildUrl()
  id: 'buildUrl()'
  so.intellisense: Void.buildUrl
  langs:
  - crmscript
  name: 'buildUrl()'
  nameWithType: Void.buildUrl()
  fullName: CRMScript.Global.Void.buildUrl()
  type: Method
  summary: "\nString buildUrl()\n"
  remarks: 
  syntax: 
    content: String buildUrl()
    parameters:
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.cgiWasPost()
  commentId: M:CRMScript.Global.Void.cgiWasPost()
  id: 'cgiWasPost()'
  so.intellisense: Void.cgiWasPost
  langs:
  - crmscript
  name: 'cgiWasPost()'
  nameWithType: Void.cgiWasPost()
  fullName: CRMScript.Global.Void.cgiWasPost()
  type: Method
  summary: "\nBool cgiWasPost()<ul><li><strong>Returns:</strong>True if the CGI HTTP request was of type POST (not GET or anything else).</li></ul>\n"
  remarks: 
  syntax: 
    content: cgiWasPost()
    parameters:
  example: 
- uid: CRMScript.Global.Void.checkReply(String)
  commentId: M:CRMScript.Global.Void.checkReply(String)
  id: 'checkReply(String)'
  so.intellisense: Void.checkReply
  langs:
  - crmscript
  name: 'checkReply(String)'
  nameWithType: Void.checkReply(String)
  fullName: CRMScript.Global.Void.checkReply(String)
  type: Method
  summary: "\nBool checkReply(String email)This function will return true if it is ok to send a receipt to the indicated email address, false otherwise.\n"
  remarks: 
  syntax: 
    content: Bool checkReply(String email)
    parameters:
    - id: email
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.Bool
  example: 
- uid: CRMScript.Global.Void.combineHtmlStrings(Vector)
  commentId: M:CRMScript.Global.Void.combineHtmlStrings(Vector)
  id: 'combineHtmlStrings(Vector)'
  so.intellisense: Void.combineHtmlStrings
  langs:
  - crmscript
  name: 'combineHtmlStrings(Vector)'
  nameWithType: Void.combineHtmlStrings(Vector)
  fullName: CRMScript.Global.Void.combineHtmlStrings(Vector)
  type: Method
  summary: "\nString combineHtmlStrings(Vector htmlStrings)This function will take several strings, each containing an HTML document, and combine them into one HTML string.<p></p>\nThe head contents in each string is combined into the head tag of the output string, except for the title tag. The title tag is taken from the first string in the vector.<p></p>\nThe body content is likewise combined into the body tag of the output string. All strings except for the first will have their body tags converted to div tags.\n"
  remarks: 
  syntax: 
    content: String combineHtmlStrings(Vector htmlStrings)
    parameters:
    - id: htmlStrings
      type: CRMScript.Global.Vector
      description: 
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.convertStatus(Integer)
  commentId: M:CRMScript.Global.Void.convertStatus(Integer)
  id: 'convertStatus(Integer)'
  so.intellisense: Void.convertStatus
  langs:
  - crmscript
  name: 'convertStatus(Integer)'
  nameWithType: Void.convertStatus(Integer)
  fullName: CRMScript.Global.Void.convertStatus(Integer)
  type: Method
  summary: "\nString convertStatus(Integer status)\n"
  remarks: 
  syntax: 
    content: String convertStatus(Integer status)
    parameters:
    - id: status
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.copyCRMDocumentToAttachment(Integer)
  commentId: M:CRMScript.Global.Void.copyCRMDocumentToAttachment(Integer)
  id: 'copyCRMDocumentToAttachment(Integer)'
  so.intellisense: Void.copyCRMDocumentToAttachment
  langs:
  - crmscript
  name: 'copyCRMDocumentToAttachment(Integer)'
  nameWithType: Void.copyCRMDocumentToAttachment(Integer)
  fullName: CRMScript.Global.Void.copyCRMDocumentToAttachment(Integer)
  type: Method
  summary: "\nInteger copyCRMDocumentToAttachment(Integer crmDocId)copy the content of a CRM Document, given the ID, to a new Service Attachment. There is no sync between these two, so only a copy at the point of time is made.\n"
  remarks: 
  syntax: 
    content: Integer copyCRMDocumentToAttachment(Integer crmDocId)
    parameters:
    - id: crmDocId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.Integer
  example: 
- uid: CRMScript.Global.Void.debugWait(String)
  commentId: M:CRMScript.Global.Void.debugWait(String)
  id: 'debugWait(String)'
  so.intellisense: Void.debugWait
  langs:
  - crmscript
  name: 'debugWait(String)'
  nameWithType: Void.debugWait(String)
  fullName: CRMScript.Global.Void.debugWait(String)
  type: Method
  summary: "\nVoid debugWait(String info)Pause the script if it is in debug mode (see [enableDebug][1]). The info string will be stored in the database entry for the current debug session so that it can be viewed in the debugger.\n"
  remarks: 
  syntax: 
    content: debugWait(String info)
    parameters:
    - id: info
      type: CRMScript.Global.String
      description: 
  example: 
- uid: CRMScript.Global.Void.decodeBase64(String)
  commentId: M:CRMScript.Global.Void.decodeBase64(String)
  id: 'decodeBase64(String)'
  so.intellisense: Void.decodeBase64
  langs:
  - crmscript
  name: 'decodeBase64(String)'
  nameWithType: Void.decodeBase64(String)
  fullName: CRMScript.Global.Void.decodeBase64(String)
  type: Method
  summary: "\nByte[] decodeBase64(String base64)Decode a base64 encoded string into a byte array.\n"
  remarks: 
  syntax: 
    content: Byte[] decodeBase64(String base64)
    parameters:
    - id: base64
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.Byte[]
  example: 
- uid: CRMScript.Global.Void.decodeBase64AsStream(String)
  commentId: M:CRMScript.Global.Void.decodeBase64AsStream(String)
  id: 'decodeBase64AsStream(String)'
  so.intellisense: Void.decodeBase64AsStream
  langs:
  - crmscript
  name: 'decodeBase64AsStream(String)'
  nameWithType: Void.decodeBase64AsStream(String)
  fullName: CRMScript.Global.Void.decodeBase64AsStream(String)
  type: Method
  summary: "\nNSStream decodeBase64AsStream(String base64)Decode a base64 encoded string into an NSStream.\n"
  remarks: 
  syntax: 
    content: NSStream decodeBase64AsStream(String base64)
    parameters:
    - id: base64
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.NetServer.NSStream
  example: 
- uid: CRMScript.Global.Void.decodeDBValue(String)
  commentId: M:CRMScript.Global.Void.decodeDBValue(String)
  id: 'decodeDBValue(String)'
  so.intellisense: Void.decodeDBValue
  langs:
  - crmscript
  name: 'decodeDBValue(String)'
  nameWithType: Void.decodeDBValue(String)
  fullName: CRMScript.Global.Void.decodeDBValue(String)
  type: Method
  summary: "\nString decodeDBValue(String p_dbValue)\n"
  remarks: 
  syntax: 
    content: String decodeDBValue(String p_dbValue)
    parameters:
    - id: p_dbValue
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.enableDebug(String)
  commentId: M:CRMScript.Global.Void.enableDebug(String)
  id: 'enableDebug(String)'
  so.intellisense: Void.enableDebug
  langs:
  - crmscript
  name: 'enableDebug(String)'
  nameWithType: Void.enableDebug(String)
  fullName: CRMScript.Global.Void.enableDebug(String)
  type: Method
  summary: "\nVoid enableDebug(String debugId)Enable debugging for the current script, with the given debugId. If the executing environment contains the same debugId, then this script will enter debug mode. To set the debugId in a browser, use the &quot;?action=debug&quot; parameter. This functionality is designed to allow for debugging scripts which are operative. I.e. it is possible to debug a script, while it will continue to run as normal for other users.\n"
  remarks: 
  syntax: 
    content: enableDebug(String debugId)
    parameters:
    - id: debugId
      type: CRMScript.Global.String
      description: 
  example: 
- uid: CRMScript.Global.Void.encodeBase64(Byte[])
  commentId: M:CRMScript.Global.Void.encodeBase64(Byte[])
  id: 'encodeBase64(Byte[])'
  so.intellisense: Void.encodeBase64
  langs:
  - crmscript
  name: 'encodeBase64(Byte[])'
  nameWithType: Void.encodeBase64(Byte[])
  fullName: CRMScript.Global.Void.encodeBase64(Byte[])
  type: Method
  summary: "\nCRMScript function that encodes bytes to a base 64 stringEncode bytes to a base 64 string. You can pass the data to encode as either<code>Byte[]</code>or<code>NSStream</code>. You can optionally pass a<code>Bool</code>to control if the encoded data should be wrapped with new lines or not.<p></p>\nReturns a Base64-encoded string.\n"
  remarks: 
  syntax: 
    content: String encodeBase64()
    parameters:
    - id: data
      type: CRMScript.Global.Byte[]
      description: Data to encode
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.encodeHMACSHA1(String,String)
  commentId: M:CRMScript.Global.Void.encodeHMACSHA1(String,String)
  id: 'encodeHMACSHA1(String,String)'
  so.intellisense: Void.encodeHMACSHA1
  langs:
  - crmscript
  name: 'encodeHMACSHA1(String,String)'
  nameWithType: Void.encodeHMACSHA1(String,String)
  fullName: CRMScript.Global.Void.encodeHMACSHA1(String,String)
  type: Method
  summary: "\nString encodeHMACSHA1(String key, String value)This function generates and returns a hash from a specified key-value pair using the HMAC SHA1 encoding algorithm. This can be used to ensure data integrity. (The hash cannot be decrypted back)\n"
  remarks: 
  syntax: 
    content: String encodeHMACSHA1(String key, String value)
    parameters:
    - id: key
      type: CRMScript.Global.String
      description: 
    - id: value
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.encodeHMACSHA256(String,String)
  commentId: M:CRMScript.Global.Void.encodeHMACSHA256(String,String)
  id: 'encodeHMACSHA256(String,String)'
  so.intellisense: Void.encodeHMACSHA256
  langs:
  - crmscript
  name: 'encodeHMACSHA256(String,String)'
  nameWithType: Void.encodeHMACSHA256(String,String)
  fullName: CRMScript.Global.Void.encodeHMACSHA256(String,String)
  type: Method
  summary: "\nByte[] encodeHMACSHA256(String key, String value)\n"
  remarks: 
  syntax: 
    content: Byte[] encodeHMACSHA256(String key, String value)
    parameters:
    - id: key
      type: CRMScript.Global.String
      description: 
    - id: value
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.Byte[]
  example: 
- uid: CRMScript.Global.Void.encodeHMACSHA512(String,String)
  commentId: M:CRMScript.Global.Void.encodeHMACSHA512(String,String)
  id: 'encodeHMACSHA512(String,String)'
  so.intellisense: Void.encodeHMACSHA512
  langs:
  - crmscript
  name: 'encodeHMACSHA512(String,String)'
  nameWithType: Void.encodeHMACSHA512(String,String)
  fullName: CRMScript.Global.Void.encodeHMACSHA512(String,String)
  type: Method
  summary: "\nByte[] encodeHMACSHA512(String key, String value)\n"
  remarks: 
  syntax: 
    content: Byte[] encodeHMACSHA512(String key, String value)
    parameters:
    - id: key
      type: CRMScript.Global.String
      description: 
    - id: value
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.Byte[]
  example: 
- uid: CRMScript.Global.Void.encodeSHA1(String)
  commentId: M:CRMScript.Global.Void.encodeSHA1(String)
  id: 'encodeSHA1(String)'
  so.intellisense: Void.encodeSHA1
  langs:
  - crmscript
  name: 'encodeSHA1(String)'
  nameWithType: Void.encodeSHA1(String)
  fullName: CRMScript.Global.Void.encodeSHA1(String)
  type: Method
  summary: "\nString encodeSHA1(String value)This function generates and returns a hash from a specified value using the SHA1 encoding algorithm. This can be used to ensure data integrity. (The hash cannot be decrypted back)\n"
  remarks: 
  syntax: 
    content: String encodeSHA1(String value)
    parameters:
    - id: value
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.String
  example: 
  - "\n<pre><code>String s = &quot;Hello world!&quot;;\n\nprintLine(encodeSHA1(&quot;Hello there!&quot;)); // Prints &quot;6b19cb3790b6da8f7c34b4d8895d78a56d078624&quot;\nprintLine(encodeSHA1(&quot;Hello world!&quot;)); // Prints &quot;d3486ae9136e7856bc42212385ea797094475802&quot;\nprintLine(encodeSHA1(s));              // Prints &quot;d3486ae9136e7856bc42212385ea797094475802&quot;\n\n// Notice that the same value always returns the same hash (formatted as hex)</code></pre>\n"
- uid: CRMScript.Global.Void.encodeSHA256(String,String)
  commentId: M:CRMScript.Global.Void.encodeSHA256(String,String)
  id: 'encodeSHA256(String,String)'
  so.intellisense: Void.encodeSHA256
  langs:
  - crmscript
  name: 'encodeSHA256(String,String)'
  nameWithType: Void.encodeSHA256(String,String)
  fullName: CRMScript.Global.Void.encodeSHA256(String,String)
  type: Method
  summary: "\nString encodeSHA256(String key, String value)This function generates and returns a hash from a specified key-value pair using the SHA256 encoding algorithm. This can be used to ensure data integrity. (The hash cannot be decrypted back)\n"
  remarks: 
  syntax: 
    content: String encodeSHA256(String key, String value)
    parameters:
    - id: key
      type: CRMScript.Global.String
      description: 
    - id: value
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.String
  example: 
  - "\n<pre><code>String s = &quot;Hello world!&quot;;\n\nprintLine(encodeSHA256(&quot;test&quot;, &quot;Hello there!&quot;)); // Prints &quot;39bf407008986fa79eac9cb0b3c8da3fb46acdd6f71721e38e6c4bbf1d14c222&quot;\nprintLine(encodeSHA256(&quot;test&quot;, &quot;Hello world!&quot;)); // Prints &quot;1700f488c1e47cf1a8e8337c0a51d176291a5b4a200fe9bab866765a86edc0a4&quot;\nprintLine(encodeSHA256(&quot;test&quot;, s));              // Prints &quot;1700f488c1e47cf1a8e8337c0a51d176291a5b4a200fe9bab866765a86edc0a4&quot;\n\n// Notice that the same key-value pair always returns the same hash (formatted as hex)</code></pre>\n"
- uid: CRMScript.Global.Void.executeDbiAgentSchedule(Integer)
  commentId: M:CRMScript.Global.Void.executeDbiAgentSchedule(Integer)
  id: 'executeDbiAgentSchedule(Integer)'
  so.intellisense: Void.executeDbiAgentSchedule
  langs:
  - crmscript
  name: 'executeDbiAgentSchedule(Integer)'
  nameWithType: Void.executeDbiAgentSchedule(Integer)
  fullName: CRMScript.Global.Void.executeDbiAgentSchedule(Integer)
  type: Method
  summary: "\nVoid executeDbiAgentSchedule(Integer scheduleId, Map values)Manually start a DBI agent schedule. It is possible to supply a map of parameter values used by the schedule.\n"
  remarks: 
  syntax: 
    content: executeDbiAgentSchedule(Integer scheduleId, Map values)
    parameters:
    - id: scheduleId
      type: CRMScript.Global.Integer
      description: 
  example: 
- uid: CRMScript.Global.Void.executeMacro(String)
  commentId: M:CRMScript.Global.Void.executeMacro(String)
  id: 'executeMacro(String)'
  so.intellisense: Void.executeMacro
  langs:
  - crmscript
  name: 'executeMacro(String)'
  nameWithType: Void.executeMacro(String)
  fullName: CRMScript.Global.Void.executeMacro(String)
  type: Method
  summary: "\nString executeMacro(String p0)This function is the outermost function for executing a macro.\n"
  remarks: 
  syntax: 
    content: String executeMacro(String p0)
    parameters:
    - id: p0
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.executeScript(String)
  commentId: M:CRMScript.Global.Void.executeScript(String)
  id: 'executeScript(String)'
  so.intellisense: Void.executeScript
  langs:
  - crmscript
  name: 'executeScript(String)'
  nameWithType: Void.executeScript(String)
  fullName: CRMScript.Global.Void.executeScript(String)
  type: Method
  summary: "\nString executeScript(String p0, Map p1)\n"
  remarks: 
  syntax: 
    content: String executeScript(String p0, Map p1)
    parameters:
    - id: p0
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.executeSQLQuery(String)
  commentId: M:CRMScript.Global.Void.executeSQLQuery(String)
  id: 'executeSQLQuery(String)'
  so.intellisense: Void.executeSQLQuery
  langs:
  - crmscript
  name: 'executeSQLQuery(String)'
  nameWithType: Void.executeSQLQuery(String)
  fullName: CRMScript.Global.Void.executeSQLQuery(String)
  type: Method
  summary: "\nVoid executeSQLQuery(String sql)\n"
  remarks: 
  syntax: 
    content: executeSQLQuery(String sql)
    parameters:
    - id: sql
      type: CRMScript.Global.String
      description: 
  example: 
- uid: CRMScript.Global.Void.exitWithMessage(String)
  commentId: M:CRMScript.Global.Void.exitWithMessage(String)
  id: 'exitWithMessage(String)'
  so.intellisense: Void.exitWithMessage
  langs:
  - crmscript
  name: 'exitWithMessage(String)'
  nameWithType: Void.exitWithMessage(String)
  fullName: CRMScript.Global.Void.exitWithMessage(String)
  type: Method
  summary: "\nVoid exitWithMessage(String p0)Exits running the rest of the script and displays a message with text from the parameter.\n"
  remarks: 
  syntax: 
    content: exitWithMessage(String p0)
    parameters:
    - id: p0
      type: CRMScript.Global.String
      description: 
  example: 
- uid: CRMScript.Global.Void.faqSearch(Integer,Integer,String,Integer)
  commentId: M:CRMScript.Global.Void.faqSearch(Integer,Integer,String,Integer)
  id: 'faqSearch(Integer,Integer,String,Integer)'
  so.intellisense: Void.faqSearch
  langs:
  - crmscript
  name: 'faqSearch(Integer,Integer,String,Integer)'
  nameWithType: Void.faqSearch(Integer,Integer,String,Integer)
  fullName: CRMScript.Global.Void.faqSearch(Integer,Integer,String,Integer)
  type: Method
  summary: "\nParser faqSearch(Integer root, Integer access, String message, Parser p, Integer max)do a faq search, using the same search engine as the customer pages do. It will fill the parser with the result. The following parser variables are available (sorted, where the top most is the best hit):\n"
  remarks: 
  syntax: 
    content: Parser faqSearch(Integer root, Integer access, String message, Parser p, Integer max)
    parameters:
    - id: root
      type: CRMScript.Global.Integer
      description: 
    - id: access
      type: CRMScript.Global.Integer
      description: 
    - id: message
      type: CRMScript.Global.String
      description: 
    - id: max
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Native.Parser
  example: 
- uid: CRMScript.Global.Void.findReplyTemplateToMerge(Integer)
  commentId: M:CRMScript.Global.Void.findReplyTemplateToMerge(Integer)
  id: 'findReplyTemplateToMerge(Integer)'
  so.intellisense: Void.findReplyTemplateToMerge
  langs:
  - crmscript
  name: 'findReplyTemplateToMerge(Integer)'
  nameWithType: Void.findReplyTemplateToMerge(Integer)
  fullName: CRMScript.Global.Void.findReplyTemplateToMerge(Integer)
  type: Method
  summary: "\nInteger findReplyTemplateToMerge(Integer p_categoryId)\n"
  remarks: 
  syntax: 
    content: Integer findReplyTemplateToMerge(Integer p_categoryId)
    parameters:
    - id: p_categoryId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.Integer
  example: 
- uid: CRMScript.Global.Void.flushCaches()
  commentId: M:CRMScript.Global.Void.flushCaches()
  id: 'flushCaches()'
  so.intellisense: Void.flushCaches
  langs:
  - crmscript
  name: 'flushCaches()'
  nameWithType: Void.flushCaches()
  fullName: CRMScript.Global.Void.flushCaches()
  type: Method
  summary: "\nVoid flushCaches()\n"
  remarks: 
  syntax: 
    content: flushCaches()
    parameters:
  example: 
- uid: CRMScript.Global.Void.forwardMail(String,String,Integer)
  commentId: M:CRMScript.Global.Void.forwardMail(String,String,Integer)
  id: 'forwardMail(String,String,Integer)'
  so.intellisense: Void.forwardMail
  langs:
  - crmscript
  name: 'forwardMail(String,String,Integer)'
  nameWithType: Void.forwardMail(String,String,Integer)
  fullName: CRMScript.Global.Void.forwardMail(String,String,Integer)
  type: Method
  summary: "\nVoid forwardMail(String p_mail, String p_to, Integer p_ticketId)Forward preformatted email<p></p>\n<ul><li><strong>p_mail:</strong>Preformated mail</li><li><strong>p_to:</strong>Preformated mail</li></ul>\n"
  remarks: 
  syntax: 
    content: forwardMail(String p_mail, String p_to, Integer p_ticketId)
    parameters:
    - id: p_mail
      type: CRMScript.Global.String
      description: 
    - id: p_to
      type: CRMScript.Global.String
      description: 
    - id: p_ticketId
      type: CRMScript.Global.Integer
      description: 
  example: 
- uid: CRMScript.Global.Void.getActiveUser()
  commentId: M:CRMScript.Global.Void.getActiveUser()
  id: 'getActiveUser()'
  so.intellisense: Void.getActiveUser
  langs:
  - crmscript
  name: 'getActiveUser()'
  nameWithType: Void.getActiveUser()
  fullName: CRMScript.Global.Void.getActiveUser()
  type: Method
  summary: "\nUser getActiveUser()\n"
  remarks: 
  syntax: 
    content: getActiveUser()
    parameters:
  example: 
- uid: CRMScript.Global.Void.getAgentId(String)
  commentId: M:CRMScript.Global.Void.getAgentId(String)
  id: 'getAgentId(String)'
  so.intellisense: Void.getAgentId
  langs:
  - crmscript
  name: 'getAgentId(String)'
  nameWithType: Void.getAgentId(String)
  fullName: CRMScript.Global.Void.getAgentId(String)
  type: Method
  summary: "\nInteger getAgentId(String idString)Returns the id of the agent matching the idString parameter<p></p>\n<ul><li><strong>idString:</strong>The id string of the agent</li></ul>\n"
  remarks: 
  syntax: 
    content: Integer getAgentId(String idString)
    parameters:
    - id: idString
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.Integer
  example: 
- uid: CRMScript.Global.Void.getAgentScheduleId(String)
  commentId: M:CRMScript.Global.Void.getAgentScheduleId(String)
  id: 'getAgentScheduleId(String)'
  so.intellisense: Void.getAgentScheduleId
  langs:
  - crmscript
  name: 'getAgentScheduleId(String)'
  nameWithType: Void.getAgentScheduleId(String)
  fullName: CRMScript.Global.Void.getAgentScheduleId(String)
  type: Method
  summary: "\nInteger getAgentScheduleId(String name)Returns the id of the agent schedule with the given name. -1 if no agent schedule was found<p></p>\n<ul><li><strong>name:</strong>Name of the agent schedule</li></ul>\n"
  remarks: 
  syntax: 
    content: Integer getAgentScheduleId(String name)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.Integer
  example: 
- uid: CRMScript.Global.Void.getAttachmentsSize(Integer[])
  commentId: M:CRMScript.Global.Void.getAttachmentsSize(Integer[])
  id: 'getAttachmentsSize(Integer[])'
  so.intellisense: Void.getAttachmentsSize
  langs:
  - crmscript
  name: 'getAttachmentsSize(Integer[])'
  nameWithType: Void.getAttachmentsSize(Integer[])
  fullName: CRMScript.Global.Void.getAttachmentsSize(Integer[])
  type: Method
  summary: "\nInteger getAttachmentsSize(Integer[] attachmentIds)Gets the total byte size of the specified attachments.\n"
  remarks: 
  syntax: 
    content: Integer getAttachmentsSize(Integer[] attachmentIds)
    parameters:
    - id: attachmentIds
      type: CRMScript.Global.Integer[]
      description: 
    return:
      type: CRMScript.Global.Integer
  example: 
- uid: CRMScript.Global.Void.getCategoryIdFromFullname(String)
  commentId: M:CRMScript.Global.Void.getCategoryIdFromFullname(String)
  id: 'getCategoryIdFromFullname(String)'
  so.intellisense: Void.getCategoryIdFromFullname
  langs:
  - crmscript
  name: 'getCategoryIdFromFullname(String)'
  nameWithType: Void.getCategoryIdFromFullname(String)
  fullName: CRMScript.Global.Void.getCategoryIdFromFullname(String)
  type: Method
  summary: "\nInteger getCategoryIdFromFullname(String name)Find category ID from the category's full name.\n"
  remarks: 
  syntax: 
    content: Integer getCategoryIdFromFullname(String name)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.Integer
  example: 
- uid: CRMScript.Global.Void.getCgiContent()
  commentId: M:CRMScript.Global.Void.getCgiContent()
  id: 'getCgiContent()'
  so.intellisense: Void.getCgiContent
  langs:
  - crmscript
  name: 'getCgiContent()'
  nameWithType: Void.getCgiContent()
  fullName: CRMScript.Global.Void.getCgiContent()
  type: Method
  summary: "\nString getCgiContent()\n"
  remarks: 
  syntax: 
    content: String getCgiContent()
    parameters:
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getCgiUrl()
  commentId: M:CRMScript.Global.Void.getCgiUrl()
  id: 'getCgiUrl()'
  so.intellisense: Void.getCgiUrl
  langs:
  - crmscript
  name: 'getCgiUrl()'
  nameWithType: Void.getCgiUrl()
  fullName: CRMScript.Global.Void.getCgiUrl()
  type: Method
  summary: "\nString getCgiUrl()Return the cgiUrl value from the config table. Used for creating URLs.\n"
  remarks: 
  syntax: 
    content: String getCgiUrl()
    parameters:
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getCgiVariable(String)
  commentId: M:CRMScript.Global.Void.getCgiVariable(String)
  id: 'getCgiVariable(String)'
  so.intellisense: Void.getCgiVariable
  langs:
  - crmscript
  name: 'getCgiVariable(String)'
  nameWithType: Void.getCgiVariable(String)
  fullName: CRMScript.Global.Void.getCgiVariable(String)
  type: Method
  summary: "\nString getCgiVariable(String varName)Return the CGI variable with the given name.\n"
  remarks: 
  syntax: 
    content: String getCgiVariable(String varName)
    parameters:
    - id: varName
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getCgiVariableArray(String)
  commentId: M:CRMScript.Global.Void.getCgiVariableArray(String)
  id: 'getCgiVariableArray(String)'
  so.intellisense: Void.getCgiVariableArray
  langs:
  - crmscript
  name: 'getCgiVariableArray(String)'
  nameWithType: Void.getCgiVariableArray(String)
  fullName: CRMScript.Global.Void.getCgiVariableArray(String)
  type: Method
  summary: "\nString[] getCgiVariableArray(String name)Returns a string array of all CGI variables matching the given name<p></p>\n<ul><li><strong>name:</strong>of the CGI variables to match</li></ul>\n"
  remarks: 
  syntax: 
    content: String[] getCgiVariableArray(String name)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.String[]
  example: 
- uid: CRMScript.Global.Void.getCgiVariables()
  commentId: M:CRMScript.Global.Void.getCgiVariables()
  id: 'getCgiVariables()'
  so.intellisense: Void.getCgiVariables
  langs:
  - crmscript
  name: 'getCgiVariables()'
  nameWithType: Void.getCgiVariables()
  fullName: CRMScript.Global.Void.getCgiVariables()
  type: Method
  summary: "\nMap getCgiVariables()Returns a map of all CGI variables\n"
  remarks: 
  syntax: 
    content: Map getCgiVariables()
    parameters:
    return:
      type: CRMScript.Global.Map
  example: 
- uid: CRMScript.Global.Void.getCookie(String)
  commentId: M:CRMScript.Global.Void.getCookie(String)
  id: 'getCookie(String)'
  so.intellisense: Void.getCookie
  langs:
  - crmscript
  name: 'getCookie(String)'
  nameWithType: Void.getCookie(String)
  fullName: CRMScript.Global.Void.getCookie(String)
  type: Method
  summary: "\nString getCookie(String name)Return the CGI cookie with the given name.\n"
  remarks: 
  syntax: 
    content: String getCookie(String name)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getCurrent(String)
  commentId: M:CRMScript.Global.Void.getCurrent(String)
  id: 'getCurrent(String)'
  so.intellisense: Void.getCurrent
  langs:
  - crmscript
  name: 'getCurrent(String)'
  nameWithType: Void.getCurrent(String)
  fullName: CRMScript.Global.Void.getCurrent(String)
  type: Method
  summary: "\nString getCurrent(String key)Get the value of the given key from the map of values common to all of the SuperOffice web applications running.\n"
  remarks: 
  syntax: 
    content: String getCurrent(String key)
    parameters:
    - id: key
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getCurrentDate()
  commentId: M:CRMScript.Global.Void.getCurrentDate()
  id: 'getCurrentDate()'
  so.intellisense: Void.getCurrentDate
  langs:
  - crmscript
  name: 'getCurrentDate()'
  nameWithType: Void.getCurrentDate()
  fullName: CRMScript.Global.Void.getCurrentDate()
  type: Method
  summary: "\nDate getCurrentDate()Returns the current date.\n"
  remarks: 
  syntax: 
    content: Date getCurrentDate()
    parameters:
    return:
      type: CRMScript.Global.Date
  example: 
  - "\n<pre><code>print(getCurrentDate().toString());</code></pre>\n"
- uid: CRMScript.Global.Void.getCurrentDateTime()
  commentId: M:CRMScript.Global.Void.getCurrentDateTime()
  id: 'getCurrentDateTime()'
  so.intellisense: Void.getCurrentDateTime
  langs:
  - crmscript
  name: 'getCurrentDateTime()'
  nameWithType: Void.getCurrentDateTime()
  fullName: CRMScript.Global.Void.getCurrentDateTime()
  type: Method
  summary: "\nDateTime getCurrentDateTime()Returns the current date and time.\n"
  remarks: 
  syntax: 
    content: DateTime getCurrentDateTime()
    parameters:
    return:
      type: CRMScript.Global.DateTime
  example: 
  - "\n<pre><code>print(getCurrentDateTime().toString());</code></pre>\n"
- uid: CRMScript.Global.Void.getCurrentTime()
  commentId: M:CRMScript.Global.Void.getCurrentTime()
  id: 'getCurrentTime()'
  so.intellisense: Void.getCurrentTime
  langs:
  - crmscript
  name: 'getCurrentTime()'
  nameWithType: Void.getCurrentTime()
  fullName: CRMScript.Global.Void.getCurrentTime()
  type: Method
  summary: "\nTime getCurrentTime()Get the current time.\n"
  remarks: 
  syntax: 
    content: Time getCurrentTime()
    parameters:
    return:
      type: CRMScript.Global.Time
  example: 
- uid: CRMScript.Global.Void.getCustomerMainEmail(Integer)
  commentId: M:CRMScript.Global.Void.getCustomerMainEmail(Integer)
  id: 'getCustomerMainEmail(Integer)'
  so.intellisense: Void.getCustomerMainEmail
  langs:
  - crmscript
  name: 'getCustomerMainEmail(Integer)'
  nameWithType: Void.getCustomerMainEmail(Integer)
  fullName: CRMScript.Global.Void.getCustomerMainEmail(Integer)
  type: Method
  summary: "\nString getCustomerMainEmail(Integer custId)return the main email of the specified customer. An empty string is returned if the customer does not have an email address or the customer does not exist.\n"
  remarks: 
  syntax: 
    content: String getCustomerMainEmail(Integer custId)
    parameters:
    - id: custId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getDbiControl()
  commentId: M:CRMScript.Global.Void.getDbiControl()
  id: 'getDbiControl()'
  so.intellisense: Void.getDbiControl
  langs:
  - crmscript
  name: 'getDbiControl()'
  nameWithType: Void.getDbiControl()
  fullName: CRMScript.Global.Void.getDbiControl()
  type: Method
  summary: "\nDbiControl getDbiControl()This function is used to access the global DBI control object, which is used for database integration.\n"
  remarks: 
  syntax: 
    content: DbiControl getDbiControl()
    parameters:
    return:
      type: CRMScript.Native.DbiControl
  example: 
- uid: CRMScript.Global.Void.getDefaultElementConfig(Integer,String,String)
  commentId: M:CRMScript.Global.Void.getDefaultElementConfig(Integer,String,String)
  id: 'getDefaultElementConfig(Integer,String,String)'
  so.intellisense: Void.getDefaultElementConfig
  langs:
  - crmscript
  name: 'getDefaultElementConfig(Integer,String,String)'
  nameWithType: Void.getDefaultElementConfig(Integer,String,String)
  fullName: CRMScript.Global.Void.getDefaultElementConfig(Integer,String,String)
  type: Method
  summary: "\nString getDefaultElementConfig(Integer type, String table, String language)Returns the default config for an element type given a table and language.\n"
  remarks: 
  syntax: 
    content: String getDefaultElementConfig(Integer type, String table, String language)
    parameters:
    - id: type
      type: CRMScript.Global.Integer
      description: 
    - id: table
      type: CRMScript.Global.String
      description: 
    - id: language
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getDocumentId(String)
  commentId: M:CRMScript.Global.Void.getDocumentId(String)
  id: 'getDocumentId(String)'
  so.intellisense: Void.getDocumentId
  langs:
  - crmscript
  name: 'getDocumentId(String)'
  nameWithType: Void.getDocumentId(String)
  fullName: CRMScript.Global.Void.getDocumentId(String)
  type: Method
  summary: "\nInteger getDocumentId(String name)Returns the id of the document with the given name. -1 if no agent schedule was found<p></p>\n<ul><li><strong>name:</strong>Name of the document</li></ul>\n"
  remarks: 
  syntax: 
    content: Integer getDocumentId(String name)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.Integer
  example: 
- uid: CRMScript.Global.Void.getEnvVariable(String)
  commentId: M:CRMScript.Global.Void.getEnvVariable(String)
  id: 'getEnvVariable(String)'
  so.intellisense: Void.getEnvVariable
  langs:
  - crmscript
  name: 'getEnvVariable(String)'
  nameWithType: Void.getEnvVariable(String)
  fullName: CRMScript.Global.Void.getEnvVariable(String)
  type: Method
  summary: "\nString getEnvVariable(String name)Return the OS environment variable with the given name.\n"
  remarks: 
  syntax: 
    content: String getEnvVariable(String name)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getEventData()
  commentId: M:CRMScript.Global.Void.getEventData()
  id: 'getEventData()'
  so.intellisense: Void.getEventData
  langs:
  - crmscript
  name: 'getEventData()'
  nameWithType: Void.getEventData()
  fullName: CRMScript.Global.Void.getEventData()
  type: Method
  summary: "\nEventData getEventData()\n"
  remarks: 
  syntax: 
    content: EventData getEventData()
    parameters:
    return:
      type: CRMScript.Native.EventData
  example: 
- uid: CRMScript.Global.Void.getExecutable()
  commentId: M:CRMScript.Global.Void.getExecutable()
  id: 'getExecutable()'
  so.intellisense: Void.getExecutable
  langs:
  - crmscript
  name: 'getExecutable()'
  nameWithType: Void.getExecutable()
  fullName: CRMScript.Global.Void.getExecutable()
  type: Method
  summary: "\nString getExecutable()\n"
  remarks: 
  syntax: 
    content: String getExecutable()
    parameters:
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getExternalProgram(Integer)
  commentId: M:CRMScript.Global.Void.getExternalProgram(Integer)
  id: 'getExternalProgram(Integer)'
  so.intellisense: Void.getExternalProgram
  langs:
  - crmscript
  name: 'getExternalProgram(Integer)'
  nameWithType: Void.getExternalProgram(Integer)
  fullName: CRMScript.Global.Void.getExternalProgram(Integer)
  type: Method
  summary: "\nString getExternalProgram(Integer progId)Returns the URL of the program module specified by progId. As indicated by the name, this will return the external URL, ie when accessed from the Internet (if available). progId can be:<p></p>\n<ul><li>modNull       = 0x00000000,</li><li>modTicket     = 0x00000001,</li><li>modAdmin      = 0x00000002,</li><li>modDocument   = 0x00000004,</li><li>modHelp       = 0x00000008,</li><li>modCustomer   = 0x00000010,</li><li>modKnowledge  = 0x00000020,</li><li>modPlanner    = 0x00000040,</li><li>modAds        = 0x00000080,</li><li>modSchedule   = 0x00000100,</li><li>modStat       = 0x00000200,</li><li>modRms        = 0x00000400,</li><li>modCustLang   = 0x00000800,</li><li>modExtDb      = 0x00001000,</li><li>modAdvancedFAQ = 0x00002000,</li><li>modChat       = 0x00004000,</li><li>modSpm        = 0x00008000,</li><li>modSoap       = 0x00010000,</li><li>modSoapPublic = 0x00020000,</li><li>modSms        = 0x00040000,</li><li>modBlogic     = 0x00080000,</li><li>modRetail     = 0x00100000</li></ul>These numbers are in hexadecimal notation. Convert to decimal before use.<p></p>\n<ul><li>Integer modTicket = 1;</li><li>Integer modAdmin = 2;</li><li>Integer modDocument = 4;</li><li>Integer modHelp = 8;</li><li>Integer modCustomer = 16;</li><li>Integer modKnowledge = 32;</li><li>Integer modPlanner = 64;</li><li>Integer modAds = 128;</li><li>Integer modSchedule = 256;</li><li>Integer modStat = 512;</li><li>Integer modRms = 1024;</li><li>Integer modCustLang = 2048;</li><li>Integer modExtDb = 4096;</li><li>Integer modAdvancedFAQ = 8192;</li><li>Integer modChat = 16384;</li><li>Integer modSpm = 32768;</li><li>Integer modSoap = 65536;</li><li>Integer modSoapPublic = 131072;</li><li>Integer modSms = 262144;</li><li>Integer modBlogic = 524288;</li><li>Integer modRetail = 1048576;</li></ul>\n"
  remarks: 
  syntax: 
    content: String getExternalProgram(Integer progId)
    parameters:
    - id: progId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getExternalProgramAdmin()
  commentId: M:CRMScript.Global.Void.getExternalProgramAdmin()
  id: 'getExternalProgramAdmin()'
  so.intellisense: Void.getExternalProgramAdmin
  langs:
  - crmscript
  name: 'getExternalProgramAdmin()'
  nameWithType: Void.getExternalProgramAdmin()
  fullName: CRMScript.Global.Void.getExternalProgramAdmin()
  type: Method
  summary: "\nString getExternalProgramAdmin()Returns the external URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getExternalProgramAdmin()
    parameters:
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getExternalProgramAjax()
  commentId: M:CRMScript.Global.Void.getExternalProgramAjax()
  id: 'getExternalProgramAjax()'
  so.intellisense: Void.getExternalProgramAjax
  langs:
  - crmscript
  name: 'getExternalProgramAjax()'
  nameWithType: Void.getExternalProgramAjax()
  fullName: CRMScript.Global.Void.getExternalProgramAjax()
  type: Method
  summary: "\nString getExternalProgramAjax()Returns the external URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getExternalProgramAjax()
    parameters:
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getExternalProgramBlogic()
  commentId: M:CRMScript.Global.Void.getExternalProgramBlogic()
  id: 'getExternalProgramBlogic()'
  so.intellisense: Void.getExternalProgramBlogic
  langs:
  - crmscript
  name: 'getExternalProgramBlogic()'
  nameWithType: Void.getExternalProgramBlogic()
  fullName: CRMScript.Global.Void.getExternalProgramBlogic()
  type: Method
  summary: "\nString getExternalProgramBlogic()Returns the external URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getExternalProgramBlogic()
    parameters:
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getExternalProgramChat()
  commentId: M:CRMScript.Global.Void.getExternalProgramChat()
  id: 'getExternalProgramChat()'
  so.intellisense: Void.getExternalProgramChat
  langs:
  - crmscript
  name: 'getExternalProgramChat()'
  nameWithType: Void.getExternalProgramChat()
  fullName: CRMScript.Global.Void.getExternalProgramChat()
  type: Method
  summary: "\nString getExternalProgramChat()Returns the external URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getExternalProgramChat()
    parameters:
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getExternalProgramCustomer()
  commentId: M:CRMScript.Global.Void.getExternalProgramCustomer()
  id: 'getExternalProgramCustomer()'
  so.intellisense: Void.getExternalProgramCustomer
  langs:
  - crmscript
  name: 'getExternalProgramCustomer()'
  nameWithType: Void.getExternalProgramCustomer()
  fullName: CRMScript.Global.Void.getExternalProgramCustomer()
  type: Method
  summary: "\nString getExternalProgramCustomer()Returns the external URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getExternalProgramCustomer()
    parameters:
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getExternalProgramDocument()
  commentId: M:CRMScript.Global.Void.getExternalProgramDocument()
  id: 'getExternalProgramDocument()'
  so.intellisense: Void.getExternalProgramDocument
  langs:
  - crmscript
  name: 'getExternalProgramDocument()'
  nameWithType: Void.getExternalProgramDocument()
  fullName: CRMScript.Global.Void.getExternalProgramDocument()
  type: Method
  summary: "\nString getExternalProgramDocument()Returns the external URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getExternalProgramDocument()
    parameters:
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getExternalProgramHelp()
  commentId: M:CRMScript.Global.Void.getExternalProgramHelp()
  id: 'getExternalProgramHelp()'
  so.intellisense: Void.getExternalProgramHelp
  langs:
  - crmscript
  name: 'getExternalProgramHelp()'
  nameWithType: Void.getExternalProgramHelp()
  fullName: CRMScript.Global.Void.getExternalProgramHelp()
  type: Method
  summary: "\nString getExternalProgramHelp()Returns the external URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getExternalProgramHelp()
    parameters:
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getExternalProgramKnowledge()
  commentId: M:CRMScript.Global.Void.getExternalProgramKnowledge()
  id: 'getExternalProgramKnowledge()'
  so.intellisense: Void.getExternalProgramKnowledge
  langs:
  - crmscript
  name: 'getExternalProgramKnowledge()'
  nameWithType: Void.getExternalProgramKnowledge()
  fullName: CRMScript.Global.Void.getExternalProgramKnowledge()
  type: Method
  summary: "\nString getExternalProgramKnowledge()Returns the external URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getExternalProgramKnowledge()
    parameters:
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getExternalProgramRms()
  commentId: M:CRMScript.Global.Void.getExternalProgramRms()
  id: 'getExternalProgramRms()'
  so.intellisense: Void.getExternalProgramRms
  langs:
  - crmscript
  name: 'getExternalProgramRms()'
  nameWithType: Void.getExternalProgramRms()
  fullName: CRMScript.Global.Void.getExternalProgramRms()
  type: Method
  summary: "\nString getExternalProgramRms()Returns the external URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getExternalProgramRms()
    parameters:
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getExternalProgramSoap()
  commentId: M:CRMScript.Global.Void.getExternalProgramSoap()
  id: 'getExternalProgramSoap()'
  so.intellisense: Void.getExternalProgramSoap
  langs:
  - crmscript
  name: 'getExternalProgramSoap()'
  nameWithType: Void.getExternalProgramSoap()
  fullName: CRMScript.Global.Void.getExternalProgramSoap()
  type: Method
  summary: "\nString getExternalProgramSoap()Returns the external URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getExternalProgramSoap()
    parameters:
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getExternalProgramStat()
  commentId: M:CRMScript.Global.Void.getExternalProgramStat()
  id: 'getExternalProgramStat()'
  so.intellisense: Void.getExternalProgramStat
  langs:
  - crmscript
  name: 'getExternalProgramStat()'
  nameWithType: Void.getExternalProgramStat()
  fullName: CRMScript.Global.Void.getExternalProgramStat()
  type: Method
  summary: "\nString getExternalProgramStat()Returns the external URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getExternalProgramStat()
    parameters:
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getExternalProgramTicket()
  commentId: M:CRMScript.Global.Void.getExternalProgramTicket()
  id: 'getExternalProgramTicket()'
  so.intellisense: Void.getExternalProgramTicket
  langs:
  - crmscript
  name: 'getExternalProgramTicket()'
  nameWithType: Void.getExternalProgramTicket()
  fullName: CRMScript.Global.Void.getExternalProgramTicket()
  type: Method
  summary: "\nString getExternalProgramTicket()Returns the external URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getExternalProgramTicket()
    parameters:
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getExtraTable(String)
  commentId: M:CRMScript.Global.Void.getExtraTable(String)
  id: 'getExtraTable(String)'
  so.intellisense: Void.getExtraTable
  langs:
  - crmscript
  name: 'getExtraTable(String)'
  nameWithType: Void.getExtraTable(String)
  fullName: CRMScript.Global.Void.getExtraTable(String)
  type: Method
  summary: "\nExtraTable getExtraTable(String name)Returns the ExtraTable instance for the given name. The name is the unique name of the table, such as &quot;y_102&quot;, &quot;y_inventory&quot;. This function will throw an exception if the table does not exist.\n"
  remarks: 
  syntax: 
    content: ExtraTable getExtraTable(String name)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Native.ExtraTable
  example: 
- uid: CRMScript.Global.Void.getFavourites(String)
  commentId: M:CRMScript.Global.Void.getFavourites(String)
  id: 'getFavourites(String)'
  so.intellisense: Void.getFavourites
  langs:
  - crmscript
  name: 'getFavourites(String)'
  nameWithType: Void.getFavourites(String)
  fullName: CRMScript.Global.Void.getFavourites(String)
  type: Method
  summary: "\nInteger[] getFavourites(String table)Returns an array containing the IDs of all favorites in the given table.\n"
  remarks: 
  syntax: 
    content: Integer[] getFavourites(String table)
    parameters:
    - id: table
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.Integer[]
  example: 
- uid: CRMScript.Global.Void.getFunctionList()
  commentId: M:CRMScript.Global.Void.getFunctionList()
  id: 'getFunctionList()'
  so.intellisense: Void.getFunctionList
  langs:
  - crmscript
  name: 'getFunctionList()'
  nameWithType: Void.getFunctionList()
  fullName: CRMScript.Global.Void.getFunctionList()
  type: Method
  summary: "\nString[][] getFunctionList()This function returns an array with the description of all ejscript functions defined in the system.\n"
  remarks: 
  syntax: 
    content: String[][] getFunctionList()
    parameters:
    return:
      type: CRMScript.Global.String[][]
  example: 
- uid: CRMScript.Global.Void.getGlobalStaticMap()
  commentId: M:CRMScript.Global.Void.getGlobalStaticMap()
  id: 'getGlobalStaticMap()'
  so.intellisense: Void.getGlobalStaticMap
  langs:
  - crmscript
  name: 'getGlobalStaticMap()'
  nameWithType: Void.getGlobalStaticMap()
  fullName: CRMScript.Global.Void.getGlobalStaticMap()
  type: Method
  summary: "\nMap getGlobalStaticMap()\n"
  remarks: 
  syntax: 
    content: Map getGlobalStaticMap()
    parameters:
    return:
      type: CRMScript.Global.Map
  example: 
- uid: CRMScript.Global.Void.getGlobalVariable(String)
  commentId: M:CRMScript.Global.Void.getGlobalVariable(String)
  id: 'getGlobalVariable(String)'
  so.intellisense: Void.getGlobalVariable
  langs:
  - crmscript
  name: 'getGlobalVariable(String)'
  nameWithType: Void.getGlobalVariable(String)
  fullName: CRMScript.Global.Void.getGlobalVariable(String)
  type: Method
  summary: "\nString getGlobalVariable(String name)Get a value from the global variables (used for communication between the script different scripts).\n"
  remarks: 
  syntax: 
    content: String getGlobalVariable(String name)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getHtmlElement(String)
  commentId: M:CRMScript.Global.Void.getHtmlElement(String)
  id: 'getHtmlElement(String)'
  so.intellisense: Void.getHtmlElement
  langs:
  - crmscript
  name: 'getHtmlElement(String)'
  nameWithType: Void.getHtmlElement(String)
  fullName: CRMScript.Global.Void.getHtmlElement(String)
  type: Method
  summary: "\nHtmlElement getHtmlElement(String name)Returns a reference to an HtmlElement in the associated screen.\n"
  remarks: 
  syntax: 
    content: HtmlElement getHtmlElement(String name)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Native.HtmlElement
  example: 
- uid: CRMScript.Global.Void.getHtmlElementIndex(String)
  commentId: M:CRMScript.Global.Void.getHtmlElementIndex(String)
  id: 'getHtmlElementIndex(String)'
  so.intellisense: Void.getHtmlElementIndex
  langs:
  - crmscript
  name: 'getHtmlElementIndex(String)'
  nameWithType: Void.getHtmlElementIndex(String)
  fullName: CRMScript.Global.Void.getHtmlElementIndex(String)
  type: Method
  summary: "\nInteger getHtmlElementIndex(String p_name)This function can only be called from a screen definition, it will fail if called from a regular script.<p></p>\nGets the index of the specified HTML element. This is useful if you want to insert elements after a particular HTML element, and you do not know the index of it.\n"
  remarks: 
  syntax: 
    content: Integer getHtmlElementIndex(String p_name)
    parameters:
    - id: p_name
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.Integer
  example: 
- uid: CRMScript.Global.Void.getHtmlElementName(Integer)
  commentId: M:CRMScript.Global.Void.getHtmlElementName(Integer)
  id: 'getHtmlElementName(Integer)'
  so.intellisense: Void.getHtmlElementName
  langs:
  - crmscript
  name: 'getHtmlElementName(Integer)'
  nameWithType: Void.getHtmlElementName(Integer)
  fullName: CRMScript.Global.Void.getHtmlElementName(Integer)
  type: Method
  summary: "\nString getHtmlElementName(Integer index)Returns the name of the element with the given index<p></p>\n<ul><li><strong>index:</strong>Index of the element</li></ul>\n"
  remarks: 
  syntax: 
    content: String getHtmlElementName(Integer index)
    parameters:
    - id: index
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getHttpHeader(String)
  commentId: M:CRMScript.Global.Void.getHttpHeader(String)
  id: 'getHttpHeader(String)'
  so.intellisense: Void.getHttpHeader
  langs:
  - crmscript
  name: 'getHttpHeader(String)'
  nameWithType: Void.getHttpHeader(String)
  fullName: CRMScript.Global.Void.getHttpHeader(String)
  type: Method
  summary: "\nString getHttpHeader(String headerName)Returns the value of the specified header name.<p></p>\n<ul><li><strong>Returns:</strong>The header value</li></ul>\n"
  remarks: "\n<h3>Values</h3><ul><li>ACCEPT-*</li><li>ACCESS-CONTROL-REQUEST-METHOD</li><li>ACCESS-CONTROL-REQUEST-HEADERS</li><li>CACHE-CONTROL</li><li>CONTENT-LENGTH</li><li>CONTENT-TYPE</li><li>DATE</li><li>DNT</li><li>EXPECT</li><li>IF-*</li><li>ORIGIN</li><li>PRAGMA</li><li>RANGE</li><li>REFERER</li><li>REQUEST-METHOD</li><li>REQUEST-URI</li><li>TE</li><li>USER-AGENT</li><li>X-CRMSCRIPT-*</li><li>X-FORWARDED-FOR</li><li>X-REQUESTED-WITH</li><li>X-SUPEROFFICE-EVENT</li><li>X-SUPEROFFICE-EVENTID</li><li>X-SUPEROFFICE-RETRY</li></ul>\n"
  syntax: 
    content: String getHttpHeader(String headerName)
    parameters:
    - id: headerName
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.String
  example: 
  - "\n<pre><code>String method = getHttpHeader(&quot;REQUEST-METHOD&quot;);</code></pre>\n"
- uid: CRMScript.Global.Void.getLanguageVariable(String)
  commentId: M:CRMScript.Global.Void.getLanguageVariable(String)
  id: 'getLanguageVariable(String)'
  so.intellisense: Void.getLanguageVariable
  langs:
  - crmscript
  name: 'getLanguageVariable(String)'
  nameWithType: Void.getLanguageVariable(String)
  fullName: CRMScript.Global.Void.getLanguageVariable(String)
  type: Method
  summary: "\nCRMScript function that returns the language variable in the language given by language code or of the current userConverts a language variable to a string in the language of the current user or, if provided, corresponding to a specific language code. Passing the language code is optional.<p></p>\nIt will search in the language variables for the current screen in addition to the common language variables.<p></p>\nReturns the language variable in the language given.\n"
  remarks: 
  syntax: 
    content: String getLanguageVariable()
    parameters:
    - id: langVar
      type: CRMScript.Global.String
      description: The language variable, for example, lang_global_global_okSave
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getLocalTimeZone()
  commentId: M:CRMScript.Global.Void.getLocalTimeZone()
  id: 'getLocalTimeZone()'
  so.intellisense: Void.getLocalTimeZone
  langs:
  - crmscript
  name: 'getLocalTimeZone()'
  nameWithType: Void.getLocalTimeZone()
  fullName: CRMScript.Global.Void.getLocalTimeZone()
  type: Method
  summary: "\nTimeZone getLocalTimeZone()Returns the local timezone.\n"
  remarks: 
  syntax: 
    content: TimeZone getLocalTimeZone()
    parameters:
    return:
      type: CRMScript.Global.TimeZone
  example: 
- uid: CRMScript.Global.Void.getMainMenu()
  commentId: M:CRMScript.Global.Void.getMainMenu()
  id: 'getMainMenu()'
  so.intellisense: Void.getMainMenu
  langs:
  - crmscript
  name: 'getMainMenu()'
  nameWithType: Void.getMainMenu()
  fullName: CRMScript.Global.Void.getMainMenu()
  type: Method
  summary: "\nMainMenu getMainMenu()Return a reference to the global MainMenu instance. This class is used for changing the left-hand menu in the system.\n"
  remarks: 
  syntax: 
    content: MainMenu getMainMenu()
    parameters:
    return:
      type: CRMScript.Native.MainMenu
  example: 
- uid: CRMScript.Global.Void.getNtUser()
  commentId: M:CRMScript.Global.Void.getNtUser()
  id: 'getNtUser()'
  so.intellisense: Void.getNtUser
  langs:
  - crmscript
  name: 'getNtUser()'
  nameWithType: Void.getNtUser()
  fullName: CRMScript.Global.Void.getNtUser()
  type: Method
  summary: "\nString getNtUser()Return the username supplied from the web server. Works with Apache and IIS, but required user authentication on the web server.<p></p>\nDerived from UNMAPPED_REMOTE_USER or REMOTE_USER environment variable\n"
  remarks: 
  syntax: 
    content: String getNtUser()
    parameters:
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getNumHtmlElements()
  commentId: M:CRMScript.Global.Void.getNumHtmlElements()
  id: 'getNumHtmlElements()'
  so.intellisense: Void.getNumHtmlElements
  langs:
  - crmscript
  name: 'getNumHtmlElements()'
  nameWithType: Void.getNumHtmlElements()
  fullName: CRMScript.Global.Void.getNumHtmlElements()
  type: Method
  summary: "\nInteger getNumHtmlElements()\n"
  remarks: 
  syntax: 
    content: Integer getNumHtmlElements()
    parameters:
    return:
      type: CRMScript.Global.Integer
  example: 
- uid: CRMScript.Global.Void.getParser()
  commentId: M:CRMScript.Global.Void.getParser()
  id: 'getParser()'
  so.intellisense: Void.getParser
  langs:
  - crmscript
  name: 'getParser()'
  nameWithType: Void.getParser()
  fullName: CRMScript.Global.Void.getParser()
  type: Method
  summary: "\nParser getParser()Return a reference to the global Parser instance.\n"
  remarks: 
  syntax: 
    content: Parser getParser()
    parameters:
    return:
      type: CRMScript.Native.Parser
  example: 
- uid: CRMScript.Global.Void.getParserParameter(String)
  commentId: M:CRMScript.Global.Void.getParserParameter(String)
  id: 'getParserParameter(String)'
  so.intellisense: Void.getParserParameter
  langs:
  - crmscript
  name: 'getParserParameter(String)'
  nameWithType: Void.getParserParameter(String)
  fullName: CRMScript.Global.Void.getParserParameter(String)
  type: Method
  summary: "\nCRMScript function that gets the value of the given parameter from the global Parser instanceReturns the value of the given parameter in the global Parser instance. You can optionally pass the zero-based index of the value.\n"
  remarks: 
  syntax: 
    content: String getParserParameter()
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: The name of the parameter
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getParserParameterCount(String)
  commentId: M:CRMScript.Global.Void.getParserParameterCount(String)
  id: 'getParserParameterCount(String)'
  so.intellisense: Void.getParserParameterCount
  langs:
  - crmscript
  name: 'getParserParameterCount(String)'
  nameWithType: Void.getParserParameterCount(String)
  fullName: CRMScript.Global.Void.getParserParameterCount(String)
  type: Method
  summary: "\nInteger getParserParameterCount(String paramName)Return the number of values for the given parameters in the global Parser object.\n"
  remarks: 
  syntax: 
    content: Integer getParserParameterCount(String paramName)
    parameters:
    - id: paramName
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.Integer
  example: 
- uid: CRMScript.Global.Void.getParserVariable(String)
  commentId: M:CRMScript.Global.Void.getParserVariable(String)
  id: 'getParserVariable(String)'
  so.intellisense: Void.getParserVariable
  langs:
  - crmscript
  name: 'getParserVariable(String)'
  nameWithType: Void.getParserVariable(String)
  fullName: CRMScript.Global.Void.getParserVariable(String)
  type: Method
  summary: "\nCRMScript function that gets the value of the given variable from the global Parser instanceReturns the (first) value for the given variable from the global Parser instance. You can optionally pass the zero-based row of the parser-query result set.\n"
  remarks: 
  syntax: 
    content: String getParserVariable()
    parameters:
    - id: varName
      type: CRMScript.Global.String
      description: The name of the variable
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getParserVariableAsCSV(String,Bool)
  commentId: M:CRMScript.Global.Void.getParserVariableAsCSV(String,Bool)
  id: 'getParserVariableAsCSV(String,Bool)'
  so.intellisense: Void.getParserVariableAsCSV
  langs:
  - crmscript
  name: 'getParserVariableAsCSV(String,Bool)'
  nameWithType: Void.getParserVariableAsCSV(String,Bool)
  fullName: CRMScript.Global.Void.getParserVariableAsCSV(String,Bool)
  type: Method
  summary: "\nString getParserVariableAsCSV(String paramName, Bool forceQuoting)Return a variable from the global Parser instance as a comma-separated string.\n"
  remarks: 
  syntax: 
    content: String getParserVariableAsCSV(String paramName, Bool forceQuoting)
    parameters:
    - id: paramName
      type: CRMScript.Global.String
      description: 
    - id: forceQuoting
      type: CRMScript.Global.Bool
      description: 
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getParserVariableCount(String)
  commentId: M:CRMScript.Global.Void.getParserVariableCount(String)
  id: 'getParserVariableCount(String)'
  so.intellisense: Void.getParserVariableCount
  langs:
  - crmscript
  name: 'getParserVariableCount(String)'
  nameWithType: Void.getParserVariableCount(String)
  fullName: CRMScript.Global.Void.getParserVariableCount(String)
  type: Method
  summary: "\nInteger getParserVariableCount(String varName)Returns the number of values for the specified value in the global Parser instance.\n"
  remarks: 
  syntax: 
    content: Integer getParserVariableCount(String varName)
    parameters:
    - id: varName
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.Integer
  example: 
- uid: CRMScript.Global.Void.getPID()
  commentId: M:CRMScript.Global.Void.getPID()
  id: 'getPID()'
  so.intellisense: Void.getPID
  langs:
  - crmscript
  name: 'getPID()'
  nameWithType: Void.getPID()
  fullName: CRMScript.Global.Void.getPID()
  type: Method
  summary: "\nInteger getPID()\n"
  remarks: 
  syntax: 
    content: Integer getPID()
    parameters:
    return:
      type: CRMScript.Global.Integer
  example: 
- uid: CRMScript.Global.Void.getPriorityIdFromName(String)
  commentId: M:CRMScript.Global.Void.getPriorityIdFromName(String)
  id: 'getPriorityIdFromName(String)'
  so.intellisense: Void.getPriorityIdFromName
  langs:
  - crmscript
  name: 'getPriorityIdFromName(String)'
  nameWithType: Void.getPriorityIdFromName(String)
  fullName: CRMScript.Global.Void.getPriorityIdFromName(String)
  type: Method
  summary: "\nInteger getPriorityIdFromName(String p0)Returns the id of the priority with the given name.\n"
  remarks: 
  syntax: 
    content: Integer getPriorityIdFromName(String p0)
    parameters:
    - id: p0
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.Integer
  example: 
- uid: CRMScript.Global.Void.getProgram(Integer)
  commentId: M:CRMScript.Global.Void.getProgram(Integer)
  id: 'getProgram(Integer)'
  so.intellisense: Void.getProgram
  langs:
  - crmscript
  name: 'getProgram(Integer)'
  nameWithType: Void.getProgram(Integer)
  fullName: CRMScript.Global.Void.getProgram(Integer)
  type: Method
  summary: "\nString getProgram(Integer progId)Returns the URL of the program module specified by progId.
progId can be:<p></p>\n<ul><li>modNull       = 0x00000000,</li><li>modTicket     = 0x00000001,</li><li>modAdmin      = 0x00000002,</li><li>modDocument   = 0x00000004,</li><li>modHelp       = 0x00000008,</li><li>modCustomer   = 0x00000010,</li><li>modKnowledge  = 0x00000020,</li><li>modPlanner    = 0x00000040,</li><li>modAds        = 0x00000080,</li><li>modSchedule   = 0x00000100,</li><li>modStat       = 0x00000200,</li><li>modRms        = 0x00000400,</li><li>modCustLang   = 0x00000800,</li><li>modExtDb      = 0x00001000,</li><li>modAdvancedFAQ = 0x00002000,</li><li>modChat       = 0x00004000,</li><li>modSpm        = 0x00008000,</li><li>modSoap       = 0x00010000,</li><li>modSoapPublic = 0x00020000,</li><li>modSms        = 0x00040000,</li><li>modBlogic     = 0x00080000,</li><li>modRetail     = 0x00100000</li></ul>These numbers are in hexadecimal notation. Convert to decimal before use.<p></p>\n<ul><li>Integer modTicket = 1;</li><li>Integer modAdmin = 2;</li><li>Integer modDocument = 4;</li><li>Integer modHelp = 8;</li><li>Integer modCustomer = 16;</li><li>Integer modKnowledge = 32;</li><li>Integer modPlanner = 64;</li><li>Integer modAds = 128;</li><li>Integer modSchedule = 256;</li><li>Integer modStat = 512;</li><li>Integer modRms = 1024;</li><li>Integer modCustLang = 2048;</li><li>Integer modExtDb = 4096;</li><li>Integer modAdvancedFAQ = 8192;</li><li>Integer modChat = 16384;</li><li>Integer modSpm = 32768;</li><li>Integer modSoap = 65536;</li><li>Integer modSoapPublic = 131072;</li><li>Integer modSms = 262144;</li><li>Integer modBlogic = 524288;</li><li>Integer modRetail = 1048576;</li></ul>\n"
  remarks: 
  syntax: 
    content: String getProgram(Integer progId)
    parameters:
    - id: progId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getProgramAdmin()
  commentId: M:CRMScript.Global.Void.getProgramAdmin()
  id: 'getProgramAdmin()'
  so.intellisense: Void.getProgramAdmin
  langs:
  - crmscript
  name: 'getProgramAdmin()'
  nameWithType: Void.getProgramAdmin()
  fullName: CRMScript.Global.Void.getProgramAdmin()
  type: Method
  summary: "\nString getProgramAdmin()Returns the URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getProgramAdmin()
    parameters:
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getProgramAjax()
  commentId: M:CRMScript.Global.Void.getProgramAjax()
  id: 'getProgramAjax()'
  so.intellisense: Void.getProgramAjax
  langs:
  - crmscript
  name: 'getProgramAjax()'
  nameWithType: Void.getProgramAjax()
  fullName: CRMScript.Global.Void.getProgramAjax()
  type: Method
  summary: "\nString getProgramAjax()Returns the URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getProgramAjax()
    parameters:
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getProgramBlogic()
  commentId: M:CRMScript.Global.Void.getProgramBlogic()
  id: 'getProgramBlogic()'
  so.intellisense: Void.getProgramBlogic
  langs:
  - crmscript
  name: 'getProgramBlogic()'
  nameWithType: Void.getProgramBlogic()
  fullName: CRMScript.Global.Void.getProgramBlogic()
  type: Method
  summary: "\nString getProgramBlogic()Returns the URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getProgramBlogic()
    parameters:
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getProgramChat()
  commentId: M:CRMScript.Global.Void.getProgramChat()
  id: 'getProgramChat()'
  so.intellisense: Void.getProgramChat
  langs:
  - crmscript
  name: 'getProgramChat()'
  nameWithType: Void.getProgramChat()
  fullName: CRMScript.Global.Void.getProgramChat()
  type: Method
  summary: "\nString getProgramChat()Returns the URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getProgramChat()
    parameters:
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getProgramCustomer()
  commentId: M:CRMScript.Global.Void.getProgramCustomer()
  id: 'getProgramCustomer()'
  so.intellisense: Void.getProgramCustomer
  langs:
  - crmscript
  name: 'getProgramCustomer()'
  nameWithType: Void.getProgramCustomer()
  fullName: CRMScript.Global.Void.getProgramCustomer()
  type: Method
  summary: "\nString getProgramCustomer()Returns the URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getProgramCustomer()
    parameters:
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getProgramDocument()
  commentId: M:CRMScript.Global.Void.getProgramDocument()
  id: 'getProgramDocument()'
  so.intellisense: Void.getProgramDocument
  langs:
  - crmscript
  name: 'getProgramDocument()'
  nameWithType: Void.getProgramDocument()
  fullName: CRMScript.Global.Void.getProgramDocument()
  type: Method
  summary: "\nString getProgramDocument()Returns the URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getProgramDocument()
    parameters:
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getProgramHelp()
  commentId: M:CRMScript.Global.Void.getProgramHelp()
  id: 'getProgramHelp()'
  so.intellisense: Void.getProgramHelp
  langs:
  - crmscript
  name: 'getProgramHelp()'
  nameWithType: Void.getProgramHelp()
  fullName: CRMScript.Global.Void.getProgramHelp()
  type: Method
  summary: "\nString getProgramHelp()Returns the URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getProgramHelp()
    parameters:
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getProgramKnowledge()
  commentId: M:CRMScript.Global.Void.getProgramKnowledge()
  id: 'getProgramKnowledge()'
  so.intellisense: Void.getProgramKnowledge
  langs:
  - crmscript
  name: 'getProgramKnowledge()'
  nameWithType: Void.getProgramKnowledge()
  fullName: CRMScript.Global.Void.getProgramKnowledge()
  type: Method
  summary: "\nString getProgramKnowledge()\n"
  remarks: 
  syntax: 
    content: String getProgramKnowledge()
    parameters:
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getProgramRms()
  commentId: M:CRMScript.Global.Void.getProgramRms()
  id: 'getProgramRms()'
  so.intellisense: Void.getProgramRms
  langs:
  - crmscript
  name: 'getProgramRms()'
  nameWithType: Void.getProgramRms()
  fullName: CRMScript.Global.Void.getProgramRms()
  type: Method
  summary: "\nString getProgramRms()Returns the URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getProgramRms()
    parameters:
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getProgramSoap()
  commentId: M:CRMScript.Global.Void.getProgramSoap()
  id: 'getProgramSoap()'
  so.intellisense: Void.getProgramSoap
  langs:
  - crmscript
  name: 'getProgramSoap()'
  nameWithType: Void.getProgramSoap()
  fullName: CRMScript.Global.Void.getProgramSoap()
  type: Method
  summary: "\nString getProgramSoap()Returns the URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getProgramSoap()
    parameters:
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getProgramStat()
  commentId: M:CRMScript.Global.Void.getProgramStat()
  id: 'getProgramStat()'
  so.intellisense: Void.getProgramStat
  langs:
  - crmscript
  name: 'getProgramStat()'
  nameWithType: Void.getProgramStat()
  fullName: CRMScript.Global.Void.getProgramStat()
  type: Method
  summary: "\nString getProgramStat()Returns the URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getProgramStat()
    parameters:
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getProgramTicket()
  commentId: M:CRMScript.Global.Void.getProgramTicket()
  id: 'getProgramTicket()'
  so.intellisense: Void.getProgramTicket
  langs:
  - crmscript
  name: 'getProgramTicket()'
  nameWithType: Void.getProgramTicket()
  fullName: CRMScript.Global.Void.getProgramTicket()
  type: Method
  summary: "\nString getProgramTicket()Returns the URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getProgramTicket()
    parameters:
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getReplyTemplateBody(Integer,Bool,Integer)
  commentId: M:CRMScript.Global.Void.getReplyTemplateBody(Integer,Bool,Integer)
  id: 'getReplyTemplateBody(Integer,Bool,Integer)'
  so.intellisense: Void.getReplyTemplateBody
  langs:
  - crmscript
  name: 'getReplyTemplateBody(Integer,Bool,Integer)'
  nameWithType: Void.getReplyTemplateBody(Integer,Bool,Integer)
  fullName: CRMScript.Global.Void.getReplyTemplateBody(Integer,Bool,Integer)
  type: Method
  summary: "\nString getReplyTemplateBody(Integer id, Bool useHTML, Integer langId)Returns reply template text as specified by the parameters.\n"
  remarks: 
  syntax: 
    content: String getReplyTemplateBody(Integer id, Bool useHTML, Integer langId)
    parameters:
    - id: id
      type: CRMScript.Global.Integer
      description: 
    - id: useHTML
      type: CRMScript.Global.Bool
      description: 
    - id: langId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getReplyTemplateSubject(Integer,Integer)
  commentId: M:CRMScript.Global.Void.getReplyTemplateSubject(Integer,Integer)
  id: 'getReplyTemplateSubject(Integer,Integer)'
  so.intellisense: Void.getReplyTemplateSubject
  langs:
  - crmscript
  name: 'getReplyTemplateSubject(Integer,Integer)'
  nameWithType: Void.getReplyTemplateSubject(Integer,Integer)
  fullName: CRMScript.Global.Void.getReplyTemplateSubject(Integer,Integer)
  type: Method
  summary: "\nString getReplyTemplateSubject(Integer id, Integer langId)Returns reply template subject.\n"
  remarks: 
  syntax: 
    content: String getReplyTemplateSubject(Integer id, Integer langId)
    parameters:
    - id: id
      type: CRMScript.Global.Integer
      description: 
    - id: langId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getScreenElementConfig(Integer)
  commentId: M:CRMScript.Global.Void.getScreenElementConfig(Integer)
  id: 'getScreenElementConfig(Integer)'
  so.intellisense: Void.getScreenElementConfig
  langs:
  - crmscript
  name: 'getScreenElementConfig(Integer)'
  nameWithType: Void.getScreenElementConfig(Integer)
  fullName: CRMScript.Global.Void.getScreenElementConfig(Integer)
  type: Method
  summary: "\nMap getScreenElementConfig(Integer index)This function can only be called from a screen definition, it will fail if called from a regular script.<p></p>\nIt returns the config of the screen element with the given index in the current screen definition.<p></p>\nThe index can be retrieved with<code>getHtmlElementIndex(elementName)</code>.\n"
  remarks: 
  syntax: 
    content: Map getScreenElementConfig(Integer index)
    parameters:
    - id: index
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.Map
  example: 
- uid: CRMScript.Global.Void.getScreenElementId(Integer)
  commentId: M:CRMScript.Global.Void.getScreenElementId(Integer)
  id: 'getScreenElementId(Integer)'
  so.intellisense: Void.getScreenElementId
  langs:
  - crmscript
  name: 'getScreenElementId(Integer)'
  nameWithType: Void.getScreenElementId(Integer)
  fullName: CRMScript.Global.Void.getScreenElementId(Integer)
  type: Method
  summary: "\nInteger getScreenElementId(Integer index)This function can only be called from a screen definition, it will fail if called from a regular script.<p></p>\nIt returns the id of the screen element with the given index in the current screen definition.<p></p>\nThe index can be retrieved with<code>getHtmlElementIndex(elementName)</code>.\n"
  remarks: 
  syntax: 
    content: Integer getScreenElementId(Integer index)
    parameters:
    - id: index
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.Integer
  example: 
- uid: CRMScript.Global.Void.getScreenElementName(Integer)
  commentId: M:CRMScript.Global.Void.getScreenElementName(Integer)
  id: 'getScreenElementName(Integer)'
  so.intellisense: Void.getScreenElementName
  langs:
  - crmscript
  name: 'getScreenElementName(Integer)'
  nameWithType: Void.getScreenElementName(Integer)
  fullName: CRMScript.Global.Void.getScreenElementName(Integer)
  type: Method
  summary: "\nString getScreenElementName(Integer index)This function can only be called from a screen definition, it will fail if called from a regular script.<p></p>\nIt returns the name of the screen element with the given index in the current screen definition.<p></p>\nThe index can be retrieved with<code>getHtmlElementIndex(elementName)</code>.\n"
  remarks: 
  syntax: 
    content: String getScreenElementName(Integer index)
    parameters:
    - id: index
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getScreenElementType(Integer)
  commentId: M:CRMScript.Global.Void.getScreenElementType(Integer)
  id: 'getScreenElementType(Integer)'
  so.intellisense: Void.getScreenElementType
  langs:
  - crmscript
  name: 'getScreenElementType(Integer)'
  nameWithType: Void.getScreenElementType(Integer)
  fullName: CRMScript.Global.Void.getScreenElementType(Integer)
  type: Method
  summary: "\nInteger getScreenElementType(Integer index)This function can only be called from a screen definition, it will fail if called from a regular script.<p></p>\nIt returns the type of the screen element with the given index in the current screen definition.<p></p>\nThe index can be retrieved with<code>getHtmlElementIndex(elementName)</code>.\n"
  remarks: 
  syntax: 
    content: Integer getScreenElementType(Integer index)
    parameters:
    - id: index
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.Integer
  example: 
- uid: CRMScript.Global.Void.getScriptId(String)
  commentId: M:CRMScript.Global.Void.getScriptId(String)
  id: 'getScriptId(String)'
  so.intellisense: Void.getScriptId
  langs:
  - crmscript
  name: 'getScriptId(String)'
  nameWithType: Void.getScriptId(String)
  fullName: CRMScript.Global.Void.getScriptId(String)
  type: Method
  summary: "\nInteger getScriptId(String idString)Returns the id of the script matching the idString parameter<p></p>\n<ul><li><strong>idString:</strong>The id string of the script</li></ul>\n"
  remarks: 
  syntax: 
    content: Integer getScriptId(String idString)
    parameters:
    - id: idString
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.Integer
  example: 
- uid: CRMScript.Global.Void.getSelectionIds(Integer)
  commentId: M:CRMScript.Global.Void.getSelectionIds(Integer)
  id: 'getSelectionIds(Integer)'
  so.intellisense: Void.getSelectionIds
  langs:
  - crmscript
  name: 'getSelectionIds(Integer)'
  nameWithType: Void.getSelectionIds(Integer)
  fullName: CRMScript.Global.Void.getSelectionIds(Integer)
  type: Method
  summary: "\nInteger[] getSelectionIds(Integer p0)Returns the IDs of the objects in the selection with the given ID.\n"
  remarks: 
  syntax: 
    content: Integer[] getSelectionIds(Integer p0)
    parameters:
    - id: p0
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.Integer[]
  example: 
- uid: CRMScript.Global.Void.getSessionVariable(String)
  commentId: M:CRMScript.Global.Void.getSessionVariable(String)
  id: 'getSessionVariable(String)'
  so.intellisense: Void.getSessionVariable
  langs:
  - crmscript
  name: 'getSessionVariable(String)'
  nameWithType: Void.getSessionVariable(String)
  fullName: CRMScript.Global.Void.getSessionVariable(String)
  type: Method
  summary: "\nString getSessionVariable(String name)This function makes it possible to store variables in the database which the web application can use
as long as a session lives. That is until a user logs out.\n"
  remarks: 
  syntax: 
    content: String getSessionVariable(String name)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getSessionVariables()
  commentId: M:CRMScript.Global.Void.getSessionVariables()
  id: 'getSessionVariables()'
  so.intellisense: Void.getSessionVariables
  langs:
  - crmscript
  name: 'getSessionVariables()'
  nameWithType: Void.getSessionVariables()
  fullName: CRMScript.Global.Void.getSessionVariables()
  type: Method
  summary: "\nMap getSessionVariables()\n"
  remarks: 
  syntax: 
    content: Map getSessionVariables()
    parameters:
    return:
      type: CRMScript.Global.Map
  example: 
- uid: CRMScript.Global.Void.getStatusIdFromName(String)
  commentId: M:CRMScript.Global.Void.getStatusIdFromName(String)
  id: 'getStatusIdFromName(String)'
  so.intellisense: Void.getStatusIdFromName
  langs:
  - crmscript
  name: 'getStatusIdFromName(String)'
  nameWithType: Void.getStatusIdFromName(String)
  fullName: CRMScript.Global.Void.getStatusIdFromName(String)
  type: Method
  summary: "\nInteger getStatusIdFromName(String p0)Returns the ID of the status with the given name.\n"
  remarks: 
  syntax: 
    content: Integer getStatusIdFromName(String p0)
    parameters:
    - id: p0
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.Integer
  example: 
- uid: CRMScript.Global.Void.getSystemFlags()
  commentId: M:CRMScript.Global.Void.getSystemFlags()
  id: 'getSystemFlags()'
  so.intellisense: Void.getSystemFlags
  langs:
  - crmscript
  name: 'getSystemFlags()'
  nameWithType: Void.getSystemFlags()
  fullName: CRMScript.Global.Void.getSystemFlags()
  type: Method
  summary: "\nInteger getSystemFlags()Get the system flags. This is the same value as is stored in the database table config.flags.\n"
  remarks: 
  syntax: 
    content: Integer getSystemFlags()
    parameters:
    return:
      type: CRMScript.Global.Integer
  example: 
- uid: CRMScript.Global.Void.getSystemLang()
  commentId: M:CRMScript.Global.Void.getSystemLang()
  id: 'getSystemLang()'
  so.intellisense: Void.getSystemLang
  langs:
  - crmscript
  name: 'getSystemLang()'
  nameWithType: Void.getSystemLang()
  fullName: CRMScript.Global.Void.getSystemLang()
  type: Method
  summary: "\nString getSystemLang()\n"
  remarks: 
  syntax: 
    content: String getSystemLang()
    parameters:
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getUserLang()
  commentId: M:CRMScript.Global.Void.getUserLang()
  id: 'getUserLang()'
  so.intellisense: Void.getUserLang
  langs:
  - crmscript
  name: 'getUserLang()'
  nameWithType: Void.getUserLang()
  fullName: CRMScript.Global.Void.getUserLang()
  type: Method
  summary: "\nString getUserLang()\n"
  remarks: 
  syntax: 
    content: String getUserLang()
    parameters:
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getUsername(Integer)
  commentId: M:CRMScript.Global.Void.getUsername(Integer)
  id: 'getUsername(Integer)'
  so.intellisense: Void.getUsername
  langs:
  - crmscript
  name: 'getUsername(Integer)'
  nameWithType: Void.getUsername(Integer)
  fullName: CRMScript.Global.Void.getUsername(Integer)
  type: Method
  summary: "\nString getUsername(Integer userId)Get username from the user ID.\n"
  remarks: 
  syntax: 
    content: String getUsername(Integer userId)
    parameters:
    - id: userId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getVariable(String)
  commentId: M:CRMScript.Global.Void.getVariable(String)
  id: 'getVariable(String)'
  so.intellisense: Void.getVariable
  langs:
  - crmscript
  name: 'getVariable(String)'
  nameWithType: Void.getVariable(String)
  fullName: CRMScript.Global.Void.getVariable(String)
  type: Method
  summary: "\nString getVariable(String name)Returns the value in the global environment (used for communication between the script the calling context).<p></p>\nactiveUser<p></p>\n<ul><li><strong>name:</strong>The name of the variable.</li></ul>\n"
  remarks: 
  syntax: 
    content: String getVariable(String name)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.getVariables()
  commentId: M:CRMScript.Global.Void.getVariables()
  id: 'getVariables()'
  so.intellisense: Void.getVariables
  langs:
  - crmscript
  name: 'getVariables()'
  nameWithType: Void.getVariables()
  fullName: CRMScript.Global.Void.getVariables()
  type: Method
  summary: "\nMap getVariables()\n"
  remarks: 
  syntax: 
    content: Map getVariables()
    parameters:
    return:
      type: CRMScript.Global.Map
  example: 
- uid: CRMScript.Global.Void.getWarnings()
  commentId: M:CRMScript.Global.Void.getWarnings()
  id: 'getWarnings()'
  so.intellisense: Void.getWarnings
  langs:
  - crmscript
  name: 'getWarnings()'
  nameWithType: Void.getWarnings()
  fullName: CRMScript.Global.Void.getWarnings()
  type: Method
  summary: "\nMap getWarnings()Return a list of the current system warnings. Warnings are messages intended for system administrators, such as email failure warnings, expired FAQ entries, etc. They are normally listed on the status screen.\n"
  remarks: 
  syntax: 
    content: Map getWarnings()
    parameters:
    return:
      type: CRMScript.Global.Map
  example: 
- uid: CRMScript.Global.Void.htmlConvToText(String)
  commentId: M:CRMScript.Global.Void.htmlConvToText(String)
  id: 'htmlConvToText(String)'
  so.intellisense: Void.htmlConvToText
  langs:
  - crmscript
  name: 'htmlConvToText(String)'
  nameWithType: Void.htmlConvToText(String)
  fullName: CRMScript.Global.Void.htmlConvToText(String)
  type: Method
  summary: "\nString htmlConvToText(String text)Convert the given HTML text to plain text.\n"
  remarks: 
  syntax: 
    content: String htmlConvToText(String text)
    parameters:
    - id: text
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.idToLang(Integer)
  commentId: M:CRMScript.Global.Void.idToLang(Integer)
  id: 'idToLang(Integer)'
  so.intellisense: Void.idToLang
  langs:
  - crmscript
  name: 'idToLang(Integer)'
  nameWithType: Void.idToLang(Integer)
  fullName: CRMScript.Global.Void.idToLang(Integer)
  type: Method
  summary: "\nString idToLang(Integer langId)Returns the code of the given language ID.\n"
  remarks: 
  syntax: 
    content: String idToLang(Integer langId)
    parameters:
    - id: langId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.invoiceTypesExists()
  commentId: M:CRMScript.Global.Void.invoiceTypesExists()
  id: 'invoiceTypesExists()'
  so.intellisense: Void.invoiceTypesExists
  langs:
  - crmscript
  name: 'invoiceTypesExists()'
  nameWithType: Void.invoiceTypesExists()
  fullName: CRMScript.Global.Void.invoiceTypesExists()
  type: Method
  summary: "\nBool invoiceTypesExists()Checks if invoice types exist in the database\n"
  remarks: 
  syntax: 
    content: Bool invoiceTypesExists()
    parameters:
    return:
      type: CRMScript.Global.Bool
  example: 
- uid: CRMScript.Global.Void.isValidPhoneNumber(String,Bool)
  commentId: M:CRMScript.Global.Void.isValidPhoneNumber(String,Bool)
  id: 'isValidPhoneNumber(String,Bool)'
  so.intellisense: Void.isValidPhoneNumber
  langs:
  - crmscript
  name: 'isValidPhoneNumber(String,Bool)'
  nameWithType: Void.isValidPhoneNumber(String,Bool)
  fullName: CRMScript.Global.Void.isValidPhoneNumber(String,Bool)
  type: Method
  summary: "\nBool isValidPhoneNumber(String p_nr, Bool p_isMultiple)\n"
  remarks: 
  syntax: 
    content: Bool isValidPhoneNumber(String p_nr, Bool p_isMultiple)
    parameters:
    - id: p_nr
      type: CRMScript.Global.String
      description: 
    - id: p_isMultiple
      type: CRMScript.Global.Bool
      description: 
    return:
      type: CRMScript.Global.Bool
  example: 
- uid: CRMScript.Global.Void.langToId(String)
  commentId: M:CRMScript.Global.Void.langToId(String)
  id: 'langToId(String)'
  so.intellisense: Void.langToId
  langs:
  - crmscript
  name: 'langToId(String)'
  nameWithType: Void.langToId(String)
  fullName: CRMScript.Global.Void.langToId(String)
  type: Method
  summary: "\nInteger langToId(String langCode)Returns the id of the given language code.<p></p>\nIf no match, it returns 0 (which is Norwegian)\n"
  remarks: 
  syntax: 
    content: Integer langToId(String langCode)
    parameters:
    - id: langCode
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.Integer
  example: 
- uid: CRMScript.Global.Void.License(String,String)
  commentId: M:CRMScript.Global.Void.License(String,String)
  id: 'License(String,String)'
  so.intellisense: Void.License
  langs:
  - crmscript
  name: 'License(String,String)'
  nameWithType: Void.License(String,String)
  fullName: CRMScript.Global.Void.License(String,String)
  type: Method
  summary: "\nLicense License(String host, String license)Deprecated in 7.1.<p></p>\nLicense constructor.\n"
  remarks: 
  syntax: 
    content: License License(String host, String license)
    parameters:
    - id: host
      type: CRMScript.Global.String
      description: 
    - id: license
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Native.License
  example: 
- uid: CRMScript.Global.Void.log(String)
  commentId: M:CRMScript.Global.Void.log(String)
  id: 'log(String)'
  so.intellisense: Void.log
  langs:
  - crmscript
  name: 'log(String)'
  nameWithType: Void.log(String)
  fullName: CRMScript.Global.Void.log(String)
  type: Method
  summary: "\nVoid log(String msg)Writes a message to the new log (the one in the database), which can be accessed with &quot;rms?action=newLog&quot;.\n"
  remarks: 
  syntax: 
    content: log(String msg)
    parameters:
    - id: msg
      type: CRMScript.Global.String
      description: 
  example: 
- uid: CRMScript.Global.Void.logMessage(String)
  commentId: M:CRMScript.Global.Void.logMessage(String)
  id: 'logMessage(String)'
  so.intellisense: Void.logMessage
  langs:
  - crmscript
  name: 'logMessage(String)'
  nameWithType: Void.logMessage(String)
  fullName: CRMScript.Global.Void.logMessage(String)
  type: Method
  summary: "\nVoid logMessage(String p0)This function will write a message to the log file.\n"
  remarks: 
  syntax: 
    content: logMessage(String p0)
    parameters:
    - id: p0
      type: CRMScript.Global.String
      description: 
  example: 
- uid: CRMScript.Global.Void.MacroParameter(String,String,String,String,Bool,String)
  commentId: M:CRMScript.Global.Void.MacroParameter(String,String,String,String,Bool,String)
  id: 'MacroParameter(String,String,String,String,Bool,String)'
  so.intellisense: Void.MacroParameter
  langs:
  - crmscript
  name: 'MacroParameter(String,String,String,String,Bool,String)'
  nameWithType: Void.MacroParameter(String,String,String,String,Bool,String)
  fullName: CRMScript.Global.Void.MacroParameter(String,String,String,String,Bool,String)
  type: Method
  summary: "\nCRMScript MacroParameter constructorMacroParameter constructor. You can optionally pass a default value and specify whether or not it is fixed.<p></p>\nThe Map control-configuration values the type of the parameter allow is also optional.\n"
  remarks: 
  syntax: 
    content: MacroParameter MacroParameter()
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: The name of the parameter.
    - id: type
      type: CRMScript.Global.String
      description: The type of the parameter.
    - id: label
      type: CRMScript.Global.String
      description: The label of the parameter.
    - id: description
      type: CRMScript.Global.String
      description: A longer description of the parameter.
    - id: isOptional
      type: CRMScript.Global.Bool
      description: Whether the parameter is optional.
    - id: defaultValue
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Native.MacroParameter
  example: 
- uid: CRMScript.Global.Void.MacroReturnValue(String,String)
  commentId: M:CRMScript.Global.Void.MacroReturnValue(String,String)
  id: 'MacroReturnValue(String,String)'
  so.intellisense: Void.MacroReturnValue
  langs:
  - crmscript
  name: 'MacroReturnValue(String,String)'
  nameWithType: Void.MacroReturnValue(String,String)
  fullName: CRMScript.Global.Void.MacroReturnValue(String,String)
  type: Method
  summary: "\nMacroReturnValue MacroReturnValue(String p0, String p1)This function creates and returns a macro return value.\n"
  remarks: 
  syntax: 
    content: MacroReturnValue MacroReturnValue(String p0, String p1)
    parameters:
    - id: p0
      type: CRMScript.Global.String
      description: 
    - id: p1
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Native.MacroReturnValue
  example: 
- uid: CRMScript.Global.Void.makePassword(Integer)
  commentId: M:CRMScript.Global.Void.makePassword(Integer)
  id: 'makePassword(Integer)'
  so.intellisense: Void.makePassword
  langs:
  - crmscript
  name: 'makePassword(Integer)'
  nameWithType: Void.makePassword(Integer)
  fullName: CRMScript.Global.Void.makePassword(Integer)
  type: Method
  summary: "\nCRMScript function used to create a random password of length p, with the given seed charactersCreates and returns a random password of the given length. You can optionally pass the given seed characters.\n"
  remarks: 
  syntax: 
    content: String makePassword()
    parameters:
    - id: length
      type: CRMScript.Global.Integer
      description: Length of password
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.mapValue(String)
  commentId: M:CRMScript.Global.Void.mapValue(String)
  id: 'mapValue(String)'
  so.intellisense: Void.mapValue
  langs:
  - crmscript
  name: 'mapValue(String)'
  nameWithType: Void.mapValue(String)
  fullName: CRMScript.Global.Void.mapValue(String)
  type: Method
  summary: "\nMap mapValue(String value)This function allocates a new map and maps the given value to the string &quot;value&quot;.\n"
  remarks: 
  syntax: 
    content: Map mapValue(String value)
    parameters:
    - id: value
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.Map
  example: 
- uid: CRMScript.Global.Void.modulo(Integer,Integer)
  commentId: M:CRMScript.Global.Void.modulo(Integer,Integer)
  id: 'modulo(Integer,Integer)'
  so.intellisense: Void.modulo
  langs:
  - crmscript
  name: 'modulo(Integer,Integer)'
  nameWithType: Void.modulo(Integer,Integer)
  fullName: CRMScript.Global.Void.modulo(Integer,Integer)
  type: Method
  summary: "\nInteger modulo(Integer a, Integer b)Returns a modulo b. This can also be done with the syntax &quot;a % b&quot;.\n"
  remarks: 
  syntax: 
    content: Integer modulo(Integer a, Integer b)
    parameters:
    - id: a
      type: CRMScript.Global.Integer
      description: 
    - id: b
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.Integer
  example: 
- uid: CRMScript.Global.Void.parseJSON(String)
  commentId: M:CRMScript.Global.Void.parseJSON(String)
  id: 'parseJSON(String)'
  so.intellisense: Void.parseJSON
  langs:
  - crmscript
  name: 'parseJSON(String)'
  nameWithType: Void.parseJSON(String)
  fullName: CRMScript.Global.Void.parseJSON(String)
  type: Method
  summary: "\nXMLNode parseJSON(String jsonDocument)Parse a JSON document and generate a tree of XMLNode's.<p></p>\nThis function has a bug. Empty arrays will still return one child. We recommend using<code>parseJSON2()</code>instead where this bug has been fixed. Except for the fix, the function is identical. It is available from 8.4R03.\n"
  remarks: 
  syntax: 
    content: XMLNode parseJSON(String jsonDocument)
    parameters:
    - id: jsonDocument
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.XMLNode
  example: 
  - "\n<pre><code>String jsonString = &quot;{&quot;menu&quot;: {&quot;liste&quot;: [ &quot;1&quot;, &quot;2&quot;, &quot;3&quot;, true, 123, 1.23 ],&quot;id&quot;: &quot;file&quot;,&quot;value&quot;: &quot;File&quot;&quot;tall&quot;: 1.234567,&quot;sant&quot;: true,&quot;usant&quot;: false,&quot;tom&quot;: null,&quot;popup&quot;: {&quot;menuitem&quot;: [{&quot;value&quot;: &quot;New&quot;, &quot;onclick&quot;:&quot;CreateNewDoc()&quot;},{&quot;value&quot;: &quot;Open&quot;, &quot;onclick&quot;: &quot;OpenDoc()&quot;},{&quot;value&quot;: &quot;Close&quot;, &quot;onclick&quot;: &quot;CloseDoc()&quot;}]}}}&quot;;\n\nXMLNode xmlObject = parseJSON(jsonString); // Converts jsonString to XML\nprintLine(xmlObject.toJSON(0)); // Prints out the actual JSON content\n\n//For example the following JSON document:\n//\n//{&quot;menu&quot;: {\n//  &quot;liste&quot;: [ &quot;1&quot;, &quot;2&quot;, &quot;3&quot;, true, 123, 1.23 ],\n//  &quot;id&quot;: &quot;file&quot;,\n//  &quot;value&quot;: &quot;File&quot;,\n//  &quot;tall&quot;: 1.234567,\n//  &quot;sant&quot;: true,\n//  &quot;usant&quot;: false,\n//  &quot;tom&quot;: null,\n//  &quot;popup&quot;: {\n//    &quot;menuitem&quot;: [\n//      {&quot;value&quot;: &quot;New&quot;, &quot;onclick&quot;: &quot;CreateNewDoc()&quot;},\n//      {&quot;value&quot;: &quot;Open&quot;, &quot;onclick&quot;: &quot;OpenDoc()&quot;},\n//      {&quot;value&quot;: &quot;Close&quot;, &quot;onclick&quot;: &quot;CloseDoc()&quot;}\n//    ]\n//  }\n//}}\n//\n//\n//Output:\n//\n//&lt;root type=&quot;object&quot;&gt;\n//  &lt;menu type=&quot;object&quot;&gt;\n//    &lt;liste type=&quot;array&quot;&gt;\n//      &lt;item type=&quot;string&quot;&gt;1&lt;/item&gt;\n//      &lt;item type=&quot;string&quot;&gt;2&lt;/item&gt;\n//      &lt;item type=&quot;string&quot;&gt;3&lt;/item&gt;\n//      &lt;item type=&quot;bool&quot;&gt;true&lt;/item&gt;\n//      &lt;item type=&quot;number&quot;&gt;123&lt;/item&gt;\n//      &lt;item type=&quot;number&quot;&gt;1.23&lt;/item&gt;\n//    &lt;/liste&gt;\n//    &lt;id type=&quot;string&quot;&gt;file&lt;/id&gt;\n//    &lt;value type=&quot;string&quot;&gt;File&lt;/value&gt;\n//    &lt;tall type=&quot;number&quot;&gt;1.234567&lt;/tall&gt;\n//    &lt;sant type=&quot;bool&quot;&gt;true&lt;/sant&gt;\n//    &lt;usant type=&quot;bool&quot;&gt;false&lt;/usant&gt;\n//    &lt;tom type=&quot;null&quot;&gt;null&lt;/tom&gt;\n//    &lt;popup type=&quot;object&quot;&gt;\n//      &lt;menuitem type=&quot;array&quot;&gt;\n//        &lt;item type=&quot;object&quot;&gt;\n//          &lt;value type=&quot;string&quot;&gt;New&lt;/value&gt;\n//          &lt;onclick type=&quot;string&quot;&gt;CreateNewDoc()&lt;/onclick&gt;\n//        &lt;/item&gt;\n//        &lt;item type=&quot;object&quot;&gt;\n//          &lt;value type=&quot;string&quot;&gt;Open&lt;/value&gt;\n//          &lt;onclick type=&quot;string&quot;&gt;OpenDoc()&lt;/onclick&gt;\n//        &lt;/item&gt;\n//        &lt;item type=&quot;object&quot;&gt;\n//          &lt;value type=&quot;string&quot;&gt;Close&lt;/value&gt;\n//          &lt;onclick type=&quot;string&quot;&gt;CloseDoc()&lt;/onclick&gt;\n//        &lt;/item&gt;\n//      &lt;/menuitem&gt;\n//    &lt;/popup&gt;\n//  &lt;/menu&gt;\n//&lt;/root&gt;</code></pre>\n"
- uid: CRMScript.Global.Void.parseJSON2(String)
  commentId: M:CRMScript.Global.Void.parseJSON2(String)
  id: 'parseJSON2(String)'
  so.intellisense: Void.parseJSON2
  langs:
  - crmscript
  name: 'parseJSON2(String)'
  nameWithType: Void.parseJSON2(String)
  fullName: CRMScript.Global.Void.parseJSON2(String)
  type: Method
  summary: "\nXMLNode parseJSON2(String jsonDocument)Parse a JSON document and generate a tree of XMLNode's.\n"
  remarks: 
  syntax: 
    content: XMLNode parseJSON2(String jsonDocument)
    parameters:
    - id: jsonDocument
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.XMLNode
  example: 
  - "\n<pre><code>String jsonString = &quot;{&quot;menu&quot;: {&quot;liste&quot;: [ &quot;1&quot;, &quot;2&quot;, &quot;3&quot;, true, 123, 1.23 ],&quot;id&quot;: &quot;file&quot;,&quot;value&quot;: &quot;File&quot;,&quot;tall&quot;: 1.234567,&quot;sant&quot;: true,&quot;usant&quot;: false,&quot;tom&quot;: null,&quot;popup&quot;: {&quot;menuitem&quot;: [{&quot;value&quot;: &quot;New&quot;, &quot;onclick&quot;: &quot;CreateNewDoc()&quot;},{&quot;value&quot;: &quot;Open&quot;, &quot;onclick&quot;: &quot;OpenDoc()&quot;},{&quot;value&quot;: &quot;Close&quot;, &quot;onclick&quot;: &quot;CloseDoc()&quot;}]}}}&quot;;\n\nXMLNode xmlObject = parseJSON2(jsonString); // Converts jsonString to XML\nprintLine(xmlObject.toJSON(0)); // Prints out the actual JSON content</code></pre>\n"
- uid: CRMScript.Global.Void.parseXML(String)
  commentId: M:CRMScript.Global.Void.parseXML(String)
  id: 'parseXML(String)'
  so.intellisense: Void.parseXML
  langs:
  - crmscript
  name: 'parseXML(String)'
  nameWithType: Void.parseXML(String)
  fullName: CRMScript.Global.Void.parseXML(String)
  type: Method
  summary: "\nXMLNode parseXML(String xmlDocument)Parse an XML document and generate a tree of XMLNode's.\n"
  remarks: 
  syntax: 
    content: XMLNode parseXML(String xmlDocument)
    parameters:
    - id: xmlDocument
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.XMLNode
  example: 
- uid: CRMScript.Global.Void.pow()
  commentId: M:CRMScript.Global.Void.pow()
  id: 'pow()'
  so.intellisense: Void.pow
  langs:
  - crmscript
  name: 'pow()'
  nameWithType: Void.pow()
  fullName: CRMScript.Global.Void.pow()
  type: Method
  summary: "\nFloat pow(Float base, Float exp)The pow function returns base raised to the expth power.<p></p>\nIf the base is zero and exp is less than or equal to zero, or the base is negative and exp is not an integer, an invalid float like -1.#IND0 will be returned<p></p>\nIf the result is too large an invalid float like 1.#INF0 will be returned.\n"
  remarks: 
  syntax: 
    content: Float pow(Float base, Float exp)
    parameters:
    return:
      type: CRMScript.Global.Float
  example: 
- uid: CRMScript.Global.Void.print(String)
  commentId: M:CRMScript.Global.Void.print(String)
  id: 'print(String)'
  so.intellisense: Void.print
  langs:
  - crmscript
  name: 'print(String)'
  nameWithType: Void.print(String)
  fullName: CRMScript.Global.Void.print(String)
  type: Method
  summary: "\nVoid print(String s)Prints the string to the screen. Will only work in certain contexts (i.e. when there is a screen to print to).\n"
  remarks: 
  syntax: 
    content: print(String s)
    parameters:
    - id: s
      type: CRMScript.Global.String
      description: 
  example: 
- uid: CRMScript.Global.Void.printBinary()
  commentId: M:CRMScript.Global.Void.printBinary()
  id: 'printBinary()'
  so.intellisense: Void.printBinary
  langs:
  - crmscript
  name: 'printBinary()'
  nameWithType: Void.printBinary()
  fullName: CRMScript.Global.Void.printBinary()
  type: Method
  summary: "\nCRMScript function that outputs the bytes to the standard output streamOutput the bytes to the standard output stream. You can pass the data to encode as either Byte[] or NSStream.\n"
  remarks: 
  syntax: 
    content: printBinary(Byte[]), printBinary(NSStream)
    parameters:
  example: 
- uid: CRMScript.Global.Void.printDebug(String)
  commentId: M:CRMScript.Global.Void.printDebug(String)
  id: 'printDebug(String)'
  so.intellisense: Void.printDebug
  langs:
  - crmscript
  name: 'printDebug(String)'
  nameWithType: Void.printDebug(String)
  fullName: CRMScript.Global.Void.printDebug(String)
  type: Method
  summary: "\nVoid printDebug(String debug)This function adds the input debug to the debugstring which will be shown in the debug window.\n"
  remarks: 
  syntax: 
    content: printDebug(String debug)
    parameters:
    - id: debug
      type: CRMScript.Global.String
      description: 
  example: 
- uid: CRMScript.Global.Void.printLine(String)
  commentId: M:CRMScript.Global.Void.printLine(String)
  id: 'printLine(String)'
  so.intellisense: Void.printLine
  langs:
  - crmscript
  name: 'printLine(String)'
  nameWithType: Void.printLine(String)
  fullName: CRMScript.Global.Void.printLine(String)
  type: Method
  summary: "\nVoid printLine(String p_line)\n"
  remarks: 
  syntax: 
    content: printLine(String p_line)
    parameters:
    - id: p_line
      type: CRMScript.Global.String
      description: 
  example: 
- uid: CRMScript.Global.Void.rand(Integer,Integer)
  commentId: M:CRMScript.Global.Void.rand(Integer,Integer)
  id: 'rand(Integer,Integer)'
  so.intellisense: Void.rand
  langs:
  - crmscript
  name: 'rand(Integer,Integer)'
  nameWithType: Void.rand(Integer,Integer)
  fullName: CRMScript.Global.Void.rand(Integer,Integer)
  type: Method
  summary: "\nInteger rand(Integer min, Integer max)Returns a random value between min and max. The seed is set by the cgi application when it is invoked.\n"
  remarks: 
  syntax: 
    content: Integer rand(Integer min, Integer max)
    parameters:
    - id: min
      type: CRMScript.Global.Integer
      description: 
    - id: max
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.Integer
  example: 
- uid: CRMScript.Global.Void.reloadAndSendShipment(Integer)
  commentId: M:CRMScript.Global.Void.reloadAndSendShipment(Integer)
  id: 'reloadAndSendShipment(Integer)'
  so.intellisense: Void.reloadAndSendShipment
  langs:
  - crmscript
  name: 'reloadAndSendShipment(Integer)'
  nameWithType: Void.reloadAndSendShipment(Integer)
  fullName: CRMScript.Global.Void.reloadAndSendShipment(Integer)
  type: Method
  summary: "\nBool reloadAndSendShipment(Integer shipmentId)Reload mailings selections and schedule to send again immediately. Used when you have added more people to the selection and want to send to them as well.<p></p>\nReturns: True if it worked. False if it did not work, because the mailing was in an illegal state for this operation.\n"
  remarks: 
  syntax: 
    content: Bool reloadAndSendShipment(Integer shipmentId)
    parameters:
    - id: shipmentId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.Bool
  example: 
- uid: CRMScript.Global.Void.removeHtmlElement(Integer)
  commentId: M:CRMScript.Global.Void.removeHtmlElement(Integer)
  id: 'removeHtmlElement(Integer)'
  so.intellisense: Void.removeHtmlElement
  langs:
  - crmscript
  name: 'removeHtmlElement(Integer)'
  nameWithType: Void.removeHtmlElement(Integer)
  fullName: CRMScript.Global.Void.removeHtmlElement(Integer)
  type: Method
  summary: "\nVoid removeHtmlElement(Integer index)This function can only be called from a screen definition, it will fail if called from a regular script<p></p>\nIt will remove the element with the given index\n"
  remarks: 
  syntax: 
    content: removeHtmlElement(Integer index)
    parameters:
    - id: index
      type: CRMScript.Global.Integer
      description: 
  example: 
- uid: CRMScript.Global.Void.resetChat(Integer)
  commentId: M:CRMScript.Global.Void.resetChat(Integer)
  id: 'resetChat(Integer)'
  so.intellisense: Void.resetChat
  langs:
  - crmscript
  name: 'resetChat(Integer)'
  nameWithType: Void.resetChat(Integer)
  fullName: CRMScript.Global.Void.resetChat(Integer)
  type: Method
  summary: "\nVoid resetChat(Integer sessionId)\n"
  remarks: 
  syntax: 
    content: resetChat(Integer sessionId)
    parameters:
    - id: sessionId
      type: CRMScript.Global.Integer
      description: 
  example: 
- uid: CRMScript.Global.Void.runProgram(String)
  commentId: M:CRMScript.Global.Void.runProgram(String)
  id: 'runProgram(String)'
  so.intellisense: Void.runProgram
  langs:
  - crmscript
  name: 'runProgram(String)'
  nameWithType: Void.runProgram(String)
  fullName: CRMScript.Global.Void.runProgram(String)
  type: Method
  summary: "\nCRMScript function that executes a command and returns the output (stdout)Executes the program (given command) and returns what was sent to stdout. You can optionally pass the codepage used.<p></p>\nThe owner of the process running the CRMScript needs permissions to execute the program.\n"
  remarks: 
  syntax: 
    content: String runProgram()
    parameters:
    - id: command
      type: CRMScript.Global.String
      description: Command line  path to program and parameters
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.saveAllCgiAttachments(String)
  commentId: M:CRMScript.Global.Void.saveAllCgiAttachments(String)
  id: 'saveAllCgiAttachments(String)'
  so.intellisense: Void.saveAllCgiAttachments
  langs:
  - crmscript
  name: 'saveAllCgiAttachments(String)'
  nameWithType: Void.saveAllCgiAttachments(String)
  fullName: CRMScript.Global.Void.saveAllCgiAttachments(String)
  type: Method
  summary: "\nInteger[] saveAllCgiAttachments (String name)Saves all cgi attachments with the given name.\n"
  remarks: 
  syntax: 
    content: Integer[] saveAllCgiAttachments (String name)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.Integer[]
  example: 
- uid: CRMScript.Global.Void.saveCgiAttachment(String)
  commentId: M:CRMScript.Global.Void.saveCgiAttachment(String)
  id: 'saveCgiAttachment(String)'
  so.intellisense: Void.saveCgiAttachment
  langs:
  - crmscript
  name: 'saveCgiAttachment(String)'
  nameWithType: Void.saveCgiAttachment(String)
  fullName: CRMScript.Global.Void.saveCgiAttachment(String)
  type: Method
  summary: "\nInteger saveCgiAttachment(String p_varName)Will save the attachment in cgi variable with the name given in p_varName and return the id of the attachment record in the attachment table.\n"
  remarks: 
  syntax: 
    content: Integer saveCgiAttachment(String p_varName)
    parameters:
    - id: p_varName
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.Integer
  example: 
- uid: CRMScript.Global.Void.setChatStatus(Integer,Integer)
  commentId: M:CRMScript.Global.Void.setChatStatus(Integer,Integer)
  id: 'setChatStatus(Integer,Integer)'
  so.intellisense: Void.setChatStatus
  langs:
  - crmscript
  name: 'setChatStatus(Integer,Integer)'
  nameWithType: Void.setChatStatus(Integer,Integer)
  fullName: CRMScript.Global.Void.setChatStatus(Integer,Integer)
  type: Method
  summary: "\nVoid setChatStatus(Integer sessionId, Integer status)This function allows you to change the status of a chat session. The available statuses are:<p></p>\n<ul><li>StatusInvalid = 0,</li><li>StatusPreChatForm = 1,</li><li>StatusFaq = 2,</li><li>StatusOfflineForm = 3,</li><li>StatusInQueue = 4,</li><li>StatusCustomerLast = 5,</li><li>StatusUserLast = 6,</li><li>StatusFinished = 7,</li><li>StatusDeleted = 8,</li><li>StatusClosed = 9,</li><li>StatusRequestPosted = 10,</li></ul>\n"
  remarks: 
  syntax: 
    content: setChatStatus(Integer sessionId, Integer status)
    parameters:
    - id: sessionId
      type: CRMScript.Global.Integer
      description: 
    - id: status
      type: CRMScript.Global.Integer
      description: 
  example: 
- uid: CRMScript.Global.Void.setCookie(String,String,Bool)
  commentId: M:CRMScript.Global.Void.setCookie(String,String,Bool)
  id: 'setCookie(String,String,Bool)'
  so.intellisense: Void.setCookie
  langs:
  - crmscript
  name: 'setCookie(String,String,Bool)'
  nameWithType: Void.setCookie(String,String,Bool)
  fullName: CRMScript.Global.Void.setCookie(String,String,Bool)
  type: Method
  summary: "\nVoid setCookie(String name, String value, Bool persistent)\n"
  remarks: 
  syntax: 
    content: Void setCookie(String name, String value, Bool persistent)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: 
    - id: value
      type: CRMScript.Global.String
      description: 
    - id: persistent
      type: CRMScript.Global.Bool
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Global.Void.setCurrent(String,String)
  commentId: M:CRMScript.Global.Void.setCurrent(String,String)
  id: 'setCurrent(String,String)'
  so.intellisense: Void.setCurrent
  langs:
  - crmscript
  name: 'setCurrent(String,String)'
  nameWithType: Void.setCurrent(String,String)
  fullName: CRMScript.Global.Void.setCurrent(String,String)
  type: Method
  summary: "\nVoid setCurrent(String key, String value)Map the given key and value in the map of the values common for all the SuperOffice web applications running.\n"
  remarks: 
  syntax: 
    content: setCurrent(String key, String value)
    parameters:
    - id: key
      type: CRMScript.Global.String
      description: 
    - id: value
      type: CRMScript.Global.String
      description: 
  example: 
- uid: CRMScript.Global.Void.setFromCgi()
  commentId: M:CRMScript.Global.Void.setFromCgi()
  id: 'setFromCgi()'
  so.intellisense: Void.setFromCgi
  langs:
  - crmscript
  name: 'setFromCgi()'
  nameWithType: Void.setFromCgi()
  fullName: CRMScript.Global.Void.setFromCgi()
  type: Method
  summary: "\nVoid setFromCgi()\n"
  remarks: 
  syntax: 
    content: setFromCgi()
    parameters:
  example: 
- uid: CRMScript.Global.Void.setGlobalVariable(String,String)
  commentId: M:CRMScript.Global.Void.setGlobalVariable(String,String)
  id: 'setGlobalVariable(String,String)'
  so.intellisense: Void.setGlobalVariable
  langs:
  - crmscript
  name: 'setGlobalVariable(String,String)'
  nameWithType: Void.setGlobalVariable(String,String)
  fullName: CRMScript.Global.Void.setGlobalVariable(String,String)
  type: Method
  summary: "\nVoid setGlobalVariable(String name, String value)Sets the value of a global variable (used for communication between different scripts).\n"
  remarks: 
  syntax: 
    content: setGlobalVariable(String name, String value)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: 
    - id: value
      type: CRMScript.Global.String
      description: 
  example: 
- uid: CRMScript.Global.Void.setHidden(String,String)
  commentId: M:CRMScript.Global.Void.setHidden(String,String)
  id: 'setHidden(String,String)'
  so.intellisense: Void.setHidden
  langs:
  - crmscript
  name: 'setHidden(String,String)'
  nameWithType: Void.setHidden(String,String)
  fullName: CRMScript.Global.Void.setHidden(String,String)
  type: Method
  summary: "\nVoid setHidden(String name, String value)Set the value of a hidden variable in the associated screen. Hidden variables are values that are carried through a screen, and which can be accessed by the following scripts.\n"
  remarks: 
  syntax: 
    content: setHidden(String name, String value)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: 
    - id: value
      type: CRMScript.Global.String
      description: 
  example: 
- uid: CRMScript.Global.Void.setPageFocusFirstControl(Bool)
  commentId: M:CRMScript.Global.Void.setPageFocusFirstControl(Bool)
  id: 'setPageFocusFirstControl(Bool)'
  so.intellisense: Void.setPageFocusFirstControl
  langs:
  - crmscript
  name: 'setPageFocusFirstControl(Bool)'
  nameWithType: Void.setPageFocusFirstControl(Bool)
  fullName: CRMScript.Global.Void.setPageFocusFirstControl(Bool)
  type: Method
  summary: "\nVoid setPageFocusFirstControl(Bool p0)\n"
  remarks: 
  syntax: 
    content: setPageFocusFirstControl(Bool p0)
    parameters:
    - id: p0
      type: CRMScript.Global.Bool
      description: 
  example: 
- uid: CRMScript.Global.Void.setPageOnLoad(String)
  commentId: M:CRMScript.Global.Void.setPageOnLoad(String)
  id: 'setPageOnLoad(String)'
  so.intellisense: Void.setPageOnLoad
  langs:
  - crmscript
  name: 'setPageOnLoad(String)'
  nameWithType: Void.setPageOnLoad(String)
  fullName: CRMScript.Global.Void.setPageOnLoad(String)
  type: Method
  summary: "\nVoid setPageOnLoad(String p0)\n"
  remarks: 
  syntax: 
    content: setPageOnLoad(String p0)
    parameters:
    - id: p0
      type: CRMScript.Global.String
      description: 
  example: 
- uid: CRMScript.Global.Void.setPageRefresh(Integer)
  commentId: M:CRMScript.Global.Void.setPageRefresh(Integer)
  id: 'setPageRefresh(Integer)'
  so.intellisense: Void.setPageRefresh
  langs:
  - crmscript
  name: 'setPageRefresh(Integer)'
  nameWithType: Void.setPageRefresh(Integer)
  fullName: CRMScript.Global.Void.setPageRefresh(Integer)
  type: Method
  summary: "\nVoid setPageRefresh(Integer p_seconds)Sets the page meta refresh to the specified seconds, thus making the screen refresh. If this method is used in a script that is not connected to a screen, nothing will happen.\n"
  remarks: 
  syntax: 
    content: setPageRefresh(Integer p_seconds)
    parameters:
    - id: p_seconds
      type: CRMScript.Global.Integer
      description: 
  example: 
- uid: CRMScript.Global.Void.setPageTitle(String)
  commentId: M:CRMScript.Global.Void.setPageTitle(String)
  id: 'setPageTitle(String)'
  so.intellisense: Void.setPageTitle
  langs:
  - crmscript
  name: 'setPageTitle(String)'
  nameWithType: Void.setPageTitle(String)
  fullName: CRMScript.Global.Void.setPageTitle(String)
  type: Method
  summary: "\nVoid setPageTitle(String title)\n"
  remarks: 
  syntax: 
    content: setPageTitle(String title)
    parameters:
    - id: title
      type: CRMScript.Global.String
      description: 
  example: 
- uid: CRMScript.Global.Void.setParserVariable(String,String)
  commentId: M:CRMScript.Global.Void.setParserVariable(String,String)
  id: 'setParserVariable(String,String)'
  so.intellisense: Void.setParserVariable
  langs:
  - crmscript
  name: 'setParserVariable(String,String)'
  nameWithType: Void.setParserVariable(String,String)
  fullName: CRMScript.Global.Void.setParserVariable(String,String)
  type: Method
  summary: "\nVoid setParserVariable(String name, String value)Set (add) a variable to the global Parser instance.\n"
  remarks: 
  syntax: 
    content: setParserVariable(String name, String value)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: 
    - id: value
      type: CRMScript.Global.String
      description: 
  example: 
- uid: CRMScript.Global.Void.setSessionVariable(String)
  commentId: M:CRMScript.Global.Void.setSessionVariable(String)
  id: 'setSessionVariable(String)'
  so.intellisense: Void.setSessionVariable
  langs:
  - crmscript
  name: 'setSessionVariable(String)'
  nameWithType: Void.setSessionVariable(String)
  fullName: CRMScript.Global.Void.setSessionVariable(String)
  type: Method
  summary: "\nCRMScript function that writes a SessionObject entry to the databaseWrites a SessionObject entry to the database. This function makes it possible to store variables in the database which the web application can use as long as a session lives. That is until a user logs out.\n"
  remarks: 
  syntax: 
    content: String setSessionVariable()
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: Entry name. May be empty, in which case the ID of the first row will be used.
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Global.Void.setUserIsTyping(Integer,Bool)
  commentId: M:CRMScript.Global.Void.setUserIsTyping(Integer,Bool)
  id: 'setUserIsTyping(Integer,Bool)'
  so.intellisense: Void.setUserIsTyping
  langs:
  - crmscript
  name: 'setUserIsTyping(Integer,Bool)'
  nameWithType: Void.setUserIsTyping(Integer,Bool)
  fullName: CRMScript.Global.Void.setUserIsTyping(Integer,Bool)
  type: Method
  summary: "\nVoid setUserIsTyping(Integer sessionId, Bool isTyping)\n"
  remarks: 
  syntax: 
    content: setUserIsTyping(Integer sessionId, Bool isTyping)
    parameters:
    - id: sessionId
      type: CRMScript.Global.Integer
      description: 
    - id: isTyping
      type: CRMScript.Global.Bool
      description: 
  example: 
- uid: CRMScript.Global.Void.setVariable(String,String)
  commentId: M:CRMScript.Global.Void.setVariable(String,String)
  id: 'setVariable(String,String)'
  so.intellisense: Void.setVariable
  langs:
  - crmscript
  name: 'setVariable(String,String)'
  nameWithType: Void.setVariable(String,String)
  fullName: CRMScript.Global.Void.setVariable(String,String)
  type: Method
  summary: "\nVoid setVariable(String name, String value)Sets the value in the global environment (used for communication between the script the calling context).\n"
  remarks: 
  syntax: 
    content: setVariable(String name, String value)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: 
    - id: value
      type: CRMScript.Global.String
      description: 
  example: 
- uid: CRMScript.Global.Void.simpleTwoWay(Byte[])
  commentId: M:CRMScript.Global.Void.simpleTwoWay(Byte[])
  id: 'simpleTwoWay(Byte[])'
  so.intellisense: Void.simpleTwoWay
  langs:
  - crmscript
  name: 'simpleTwoWay(Byte[])'
  nameWithType: Void.simpleTwoWay(Byte[])
  fullName: CRMScript.Global.Void.simpleTwoWay(Byte[])
  type: Method
  summary: "\nByte[] simpleTwoWay(Byte[] data)Simple two-way data encryption.<p></p>\nThe functions works both ways. Data -&gt; Encrypted data -&gt; data<p></p>\n<ul><li><strong>data:</strong>Byte array to encrypt/decrypt.</li></ul>\n"
  remarks: 
  syntax: 
    content: Byte[] simpleTwoWay(Byte[] data)
    parameters:
    - id: data
      type: CRMScript.Global.Byte[]
      description: 
    return:
      type: CRMScript.Global.Byte[]
  example: 
- uid: CRMScript.Global.Void.sleep()
  commentId: M:CRMScript.Global.Void.sleep()
  id: 'sleep()'
  so.intellisense: Void.sleep
  langs:
  - crmscript
  name: 'sleep()'
  nameWithType: Void.sleep()
  fullName: CRMScript.Global.Void.sleep()
  type: Method
  summary: "\nVoid sleep(Float seconds)Sleep (give up CPU) for some time. Useful in some CPU-intensive loops to maintain a responsive system.\n"
  remarks: 
  syntax: 
    content: sleep(Float seconds)
    parameters:
  example: 
  - "\n<pre><code>sleep(01); //sleeps for about one-tenth of a second.</code></pre>\n"
references:
- uid: CRMScript.Global.Void
  commentId: T:CRMScript.Global.Void
  isExternal: true
  name: Void
  nameWithType: Void
  fullName: CRMScript.Global.Void
- uid: CRMScript.Global.String
  commentId: T:CRMScript.Global.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: CRMScript.Global.String
- uid: CRMScript.Global.Bool
  commentId: T:CRMScript.Global.Bool
  isExternal: true
  name: Bool
  nameWithType: Bool
  fullName: CRMScript.Global.Bool
- uid: CRMScript.Global.Integer
  commentId: T:CRMScript.Global.Integer
  isExternal: true
  name: Integer
  nameWithType: Integer
  fullName: CRMScript.Global.Integer
- uid: CRMScript.Native.HtmlElement
  commentId: T:CRMScript.Native.HtmlElement
  isExternal: true
  name: HtmlElement
  nameWithType: HtmlElement
  fullName: CRMScript.Native.HtmlElement
- uid: CRMScript.Global.Void
  commentId: T:CRMScript.Global.Void
  isExternal: true
  name: Void
  nameWithType: Void
  fullName: CRMScript.Global.Void
- uid: CRMScript.Global.Vector
  commentId: T:CRMScript.Global.Vector
  isExternal: true
  name: Vector
  nameWithType: Vector
  fullName: CRMScript.Global.Vector
- uid: CRMScript.Global.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: CRMScript.Global.Byte[]
  spec.crmscript:
  - uid: CRMScript.Global.Byte
    isExternal: true
    name: Byte
    nameWithType: Byte
    fullName: CRMScript.Global.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.Global.Byte
  commentId: T:CRMScript.Global.Byte
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: CRMScript.Global.Byte
- uid: CRMScript.NetServer.NSStream
  commentId: T:CRMScript.NetServer.NSStream
  isExternal: true
  name: NSStream
  nameWithType: NSStream
  fullName: CRMScript.NetServer.NSStream
- uid: CRMScript.Native.Parser
  commentId: T:CRMScript.Native.Parser
  isExternal: true
  name: Parser
  nameWithType: Parser
  fullName: CRMScript.Native.Parser
- uid: CRMScript.Global.Integer[]
  isExternal: true
  name: Integer[]
  nameWithType: Integer[]
  fullName: CRMScript.Global.Integer[]
  spec.crmscript:
  - uid: CRMScript.Global.Integer
    isExternal: true
    name: Integer
    nameWithType: Integer
    fullName: CRMScript.Global.Integer
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.Global.Integer
  commentId: T:CRMScript.Global.Integer
  isExternal: true
  name: Integer
  nameWithType: Integer
  fullName: CRMScript.Global.Integer
- uid: CRMScript.Global.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: CRMScript.Global.String[]
  spec.crmscript:
  - uid: CRMScript.Global.String
    isExternal: true
    name: String
    nameWithType: String
    fullName: CRMScript.Global.String
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.Global.String
  commentId: T:CRMScript.Global.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: CRMScript.Global.String
- uid: CRMScript.Global.Map
  commentId: T:CRMScript.Global.Map
  isExternal: true
  name: Map
  nameWithType: Map
  fullName: CRMScript.Global.Map
- uid: CRMScript.Global.Date
  commentId: T:CRMScript.Global.Date
  isExternal: true
  name: Date
  nameWithType: Date
  fullName: CRMScript.Global.Date
- uid: CRMScript.Global.DateTime
  commentId: T:CRMScript.Global.DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: CRMScript.Global.DateTime
- uid: CRMScript.Global.Time
  commentId: T:CRMScript.Global.Time
  isExternal: true
  name: Time
  nameWithType: Time
  fullName: CRMScript.Global.Time
- uid: CRMScript.Native.DbiControl
  commentId: T:CRMScript.Native.DbiControl
  isExternal: true
  name: DbiControl
  nameWithType: DbiControl
  fullName: CRMScript.Native.DbiControl
- uid: CRMScript.Native.EventData
  commentId: T:CRMScript.Native.EventData
  isExternal: true
  name: EventData
  nameWithType: EventData
  fullName: CRMScript.Native.EventData
- uid: CRMScript.Native.ExtraTable
  commentId: T:CRMScript.Native.ExtraTable
  isExternal: true
  name: ExtraTable
  nameWithType: ExtraTable
  fullName: CRMScript.Native.ExtraTable
- uid: CRMScript.Global.String[][]
  isExternal: true
  name: String[][]
  nameWithType: String[][]
  fullName: CRMScript.Global.String[][]
  spec.crmscript:
  - uid: CRMScript.Global.String[]
    isExternal: true
    name: String[]
    nameWithType: String[]
    fullName: CRMScript.Global.String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.Global.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: CRMScript.Global.String[]
  spec.crmscript:
  - uid: CRMScript.Global.String
    isExternal: true
    name: String
    nameWithType: String
    fullName: CRMScript.Global.String
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.Global.String
  commentId: T:CRMScript.Global.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: CRMScript.Global.String
- uid: CRMScript.Global.TimeZone
  commentId: T:CRMScript.Global.TimeZone
  isExternal: true
  name: TimeZone
  nameWithType: TimeZone
  fullName: CRMScript.Global.TimeZone
- uid: CRMScript.Native.MainMenu
  commentId: T:CRMScript.Native.MainMenu
  isExternal: true
  name: MainMenu
  nameWithType: MainMenu
  fullName: CRMScript.Native.MainMenu
- uid: CRMScript.Native.License
  commentId: T:CRMScript.Native.License
  isExternal: true
  name: License
  nameWithType: License
  fullName: CRMScript.Native.License
- uid: CRMScript.Native.MacroParameter
  commentId: T:CRMScript.Native.MacroParameter
  isExternal: true
  name: MacroParameter
  nameWithType: MacroParameter
  fullName: CRMScript.Native.MacroParameter
- uid: CRMScript.Native.MacroReturnValue
  commentId: T:CRMScript.Native.MacroReturnValue
  isExternal: true
  name: MacroReturnValue
  nameWithType: MacroReturnValue
  fullName: CRMScript.Native.MacroReturnValue
- uid: CRMScript.Global.XMLNode
  commentId: T:CRMScript.Global.XMLNode
  isExternal: true
  name: XMLNode
  nameWithType: XMLNode
  fullName: CRMScript.Global.XMLNode
- uid: CRMScript.Global.Float
  commentId: T:CRMScript.Global.Float
  isExternal: true
  name: Float
  nameWithType: Float
  fullName: CRMScript.Global.Float