### YamlMime:ManagedReference
items:
- uid: CRMScript.NetServer.NSDatabaseTableAgent
  commentId: T:CRMScript.NetServer.NSDatabaseTableAgent
  id: NSDatabaseTableAgent
  langs:
  - crmscript
  children:
  - CRMScript.NetServer.NSDatabaseTableAgent.Delete(String,Integer[])
  - CRMScript.NetServer.NSDatabaseTableAgent.DeleteRow(String,Integer)
  - CRMScript.NetServer.NSDatabaseTableAgent.Insert(String,String[],String[])
  - CRMScript.NetServer.NSDatabaseTableAgent.InsertRow(String)
  - CRMScript.NetServer.NSDatabaseTableAgent.#ctor
  - CRMScript.NetServer.NSDatabaseTableAgent.ReadRow(String,Integer)
  - CRMScript.NetServer.NSDatabaseTableAgent.Truncate(String)
  - CRMScript.NetServer.NSDatabaseTableAgent.UpdateRow(String,Integer)
  - CRMScript.NetServer.NSDatabaseTableAgent.Upsert(String,String[],String[],String[],Integer,Bool)
  name: NSDatabaseTableAgent
  nameWithType: NSDatabaseTableAgent
  fullName: CRMScript.NetServer.NSDatabaseTableAgent
  type: Class
  summary: "\nAgent used for CRUD operations on database tables. Read, add, update, delete rows in tables.\n"
  example: 
  - "\n<pre><code>NSDatabaseTableAgent agent;\nagent.callMethod(arg1, arg2);</code></pre>\n"
- uid: CRMScript.NetServer.NSDatabaseTableAgent.Delete(String,Integer[])
  commentId: M:CRMScript.NetServer.NSDatabaseTableAgent.Delete(String,Integer[])
  id: 'Delete(String,Integer[])'
  so.intellisense: NSDatabaseTableAgent.Delete
  langs:
  - crmscript
  name: 'Delete(String,Integer[])'
  nameWithType: NSDatabaseTableAgent.Delete(String,Integer[])
  fullName: CRMScript.NetServer.NSDatabaseTableAgent.Delete(String,Integer[])
  type: Method
  summary: "\nDelete rows, by primary key; traveltransactionlog and WebHooks are supported\n"
  remarks: 
  syntax: 
    content: NSMassOperationResult Delete(String tableName, Integer[] iDs)
    parameters:
    - id: tableName
      type: CRMScript.Global.String
      description: 
    - id: iDs
      type: CRMScript.Global.Integer[]
      description: 
    return:
      type: CRMScript.NetServer.NSMassOperationResult
  example: 
  - "\n<pre><code>NSDatabaseTableAgent agent;\nString tableName;\nInteger[] iDs;\nNSMassOperationResult res = agent.Delete(tableName, iDs);</code></pre>\n"
- uid: CRMScript.NetServer.NSDatabaseTableAgent.DeleteRow(String,Integer)
  commentId: M:CRMScript.NetServer.NSDatabaseTableAgent.DeleteRow(String,Integer)
  id: 'DeleteRow(String,Integer)'
  so.intellisense: NSDatabaseTableAgent.DeleteRow
  langs:
  - crmscript
  name: 'DeleteRow(String,Integer)'
  nameWithType: NSDatabaseTableAgent.DeleteRow(String,Integer)
  fullName: CRMScript.NetServer.NSDatabaseTableAgent.DeleteRow(String,Integer)
  type: Method
  summary: "\nDelete a row from a table\n"
  remarks: 
  syntax: 
    content: Void DeleteRow(String tableName, Integer id)
    parameters:
    - id: tableName
      type: CRMScript.Global.String
      description: 
    - id: id
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.NetServer.NSDatabaseTableAgent.Insert(String,String[],String[])
  commentId: M:CRMScript.NetServer.NSDatabaseTableAgent.Insert(String,String[],String[])
  id: 'Insert(String,String[],String[])'
  so.intellisense: NSDatabaseTableAgent.Insert
  langs:
  - crmscript
  name: 'Insert(String,String[],String[])'
  nameWithType: NSDatabaseTableAgent.Insert(String,String[],String[])
  fullName: CRMScript.NetServer.NSDatabaseTableAgent.Insert(String,String[],String[])
  type: Method
  summary: "\nMass-insert rows, with or without primary keys specified. Works on physical tables with no special processing for udef etc.; traveltransactionlog and WebHooks are supported\n"
  remarks: 
  syntax: 
    content: NSMassOperationResult Insert(String tableName, String[] columns, String[] data)
    parameters:
    - id: tableName
      type: CRMScript.Global.String
      description: 
    - id: columns
      type: CRMScript.Global.String[]
      description: 
    - id: data
      type: CRMScript.Global.String[]
      description: 
    return:
      type: CRMScript.NetServer.NSMassOperationResult
  example: 
  - "\n<pre><code>NSDatabaseTableAgent agent;\nString tableName;\nString[] columns;\nString[] data;\nNSMassOperationResult res = agent.Insert(tableName, columns, data);</code></pre>\n"
- uid: CRMScript.NetServer.NSDatabaseTableAgent.InsertRow(String)
  commentId: M:CRMScript.NetServer.NSDatabaseTableAgent.InsertRow(String)
  id: 'InsertRow(String)'
  so.intellisense: NSDatabaseTableAgent.InsertRow
  langs:
  - crmscript
  name: 'InsertRow(String)'
  nameWithType: NSDatabaseTableAgent.InsertRow(String)
  fullName: CRMScript.NetServer.NSDatabaseTableAgent.InsertRow(String)
  type: Method
  summary: "\nInsert a row into a table\n"
  remarks: 
  syntax: 
    content: Integer InsertRow(String tableName, Map values)
    parameters:
    - id: tableName
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.Integer
  example: 
  - "\n<pre><code>NSDatabaseTableAgent agent;\nString tableName;\nMap values;\nInteger res = agent.InsertRow(tableName, values);</code></pre>\n"
- uid: CRMScript.NetServer.NSDatabaseTableAgent.#ctor
  commentId: M:CRMScript.NetServer.NSDatabaseTableAgent.#ctor
  id: '#ctor'
  so.intellisense: Void.NSDatabaseTableAgent
  langs:
  - crmscript
  name: '#ctor'
  nameWithType: NSDatabaseTableAgent.#ctor
  fullName: CRMScript.NetServer.NSDatabaseTableAgent.#ctor
  type: Constructor
  summary: "\nAgent used for CRUD operations on database tables. Read, add, update, delete rows in tables.\n"
  remarks: 
  syntax: 
    content: NSDatabaseTableAgent
  example: 
  - "\n<pre><code>NSDatabaseTableAgent agent;\nagent.callMethod(arg1, arg2);</code></pre>\n"
- uid: CRMScript.NetServer.NSDatabaseTableAgent.ReadRow(String,Integer)
  commentId: M:CRMScript.NetServer.NSDatabaseTableAgent.ReadRow(String,Integer)
  id: 'ReadRow(String,Integer)'
  so.intellisense: NSDatabaseTableAgent.ReadRow
  langs:
  - crmscript
  name: 'ReadRow(String,Integer)'
  nameWithType: NSDatabaseTableAgent.ReadRow(String,Integer)
  fullName: CRMScript.NetServer.NSDatabaseTableAgent.ReadRow(String,Integer)
  type: Method
  summary: "\nRead a row from a table\n"
  remarks: 
  syntax: 
    content: NSTableRecord ReadRow(String tableName, Integer id)
    parameters:
    - id: tableName
      type: CRMScript.Global.String
      description: 
    - id: id
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSTableRecord
  example: 
  - "\n<pre><code>NSDatabaseTableAgent agent;\nString tableName;\nInteger id;\nNSTableRecord res = agent.ReadRow(tableName, id);</code></pre>\n"
- uid: CRMScript.NetServer.NSDatabaseTableAgent.Truncate(String)
  commentId: M:CRMScript.NetServer.NSDatabaseTableAgent.Truncate(String)
  id: 'Truncate(String)'
  so.intellisense: NSDatabaseTableAgent.Truncate
  langs:
  - crmscript
  name: 'Truncate(String)'
  nameWithType: NSDatabaseTableAgent.Truncate(String)
  fullName: CRMScript.NetServer.NSDatabaseTableAgent.Truncate(String)
  type: Method
  summary: "\nDrop all rows in a table. This clearance is not individually logged in TravelTransactionlog or Webhook/script calls\n"
  remarks: 
  syntax: 
    content: NSMassOperationResult Truncate(String tableName)
    parameters:
    - id: tableName
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.NetServer.NSMassOperationResult
  example: 
  - "\n<pre><code>NSDatabaseTableAgent agent;\nString tableName;\nNSMassOperationResult res = agent.Truncate(tableName);</code></pre>\n"
- uid: CRMScript.NetServer.NSDatabaseTableAgent.UpdateRow(String,Integer)
  commentId: M:CRMScript.NetServer.NSDatabaseTableAgent.UpdateRow(String,Integer)
  id: 'UpdateRow(String,Integer)'
  so.intellisense: NSDatabaseTableAgent.UpdateRow
  langs:
  - crmscript
  name: 'UpdateRow(String,Integer)'
  nameWithType: NSDatabaseTableAgent.UpdateRow(String,Integer)
  fullName: CRMScript.NetServer.NSDatabaseTableAgent.UpdateRow(String,Integer)
  type: Method
  summary: "\nUpdate a row in a table\n"
  remarks: 
  syntax: 
    content: Void UpdateRow(String tableName, Integer id, Map values)
    parameters:
    - id: tableName
      type: CRMScript.Global.String
      description: 
    - id: id
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.NetServer.NSDatabaseTableAgent.Upsert(String,String[],String[],String[],Integer,Bool)
  commentId: M:CRMScript.NetServer.NSDatabaseTableAgent.Upsert(String,String[],String[],String[],Integer,Bool)
  id: 'Upsert(String,String[],String[],String[],Integer,Bool)'
  so.intellisense: NSDatabaseTableAgent.Upsert
  langs:
  - crmscript
  name: 'Upsert(String,String[],String[],String[],Integer,Bool)'
  nameWithType: NSDatabaseTableAgent.Upsert(String,String[],String[],String[],Integer,Bool)
  fullName: CRMScript.NetServer.NSDatabaseTableAgent.Upsert(String,String[],String[],String[],Integer,Bool)
  type: Method
  summary: "\nInsert or update rows, optionally deleting/zeroing 'leftover' rows. Special support for UDEF, as well as optional extensive information return. Traveltransactionlog and WebHooks are supported\n"
  remarks: "\n<p>See enum returnRowStatus.</p>\n"
  syntax: 
    content: NSMassOperationResult Upsert(String tableName, String[] columns, String[] keys, String[] data, Integer nomatchAction, Bool returnRowStatus)
    parameters:
    - id: tableName
      type: CRMScript.Global.String
      description: 
    - id: columns
      type: CRMScript.Global.String[]
      description: 
    - id: keys
      type: CRMScript.Global.String[]
      description: 
    - id: data
      type: CRMScript.Global.String[]
      description: 
    - id: nomatchAction
      type: CRMScript.Global.Integer
      description: 
    - id: returnRowStatus
      type: CRMScript.Global.Bool
      description: 
    return:
      type: CRMScript.NetServer.NSMassOperationResult
  example: 
  - "\n<pre><code>NSDatabaseTableAgent agent;\nString tableName;\nString[] columns;\nString[] keys;\nString[] data;\nInteger nomatchAction;\nBool returnRowStatus;\nNSMassOperationResult res = agent.Upsert(tableName, columns, keys, data, nomatchAction, returnRowStatus);</code></pre>\n"
references:
- uid: CRMScript.NetServer.NSDatabaseTableAgent
  commentId: T:CRMScript.NetServer.NSDatabaseTableAgent
  isExternal: true
  name: NSDatabaseTableAgent
  nameWithType: NSDatabaseTableAgent
  fullName: CRMScript.NetServer.NSDatabaseTableAgent
- uid: CRMScript.Global.String
  commentId: T:CRMScript.Global.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: CRMScript.Global.String
- uid: CRMScript.Global.Integer[]
  isExternal: true
  name: Integer[]
  nameWithType: Integer[]
  fullName: CRMScript.Global.Integer[]
  spec.crmscript:
  - uid: CRMScript.Global.Integer
    isExternal: true
    name: Integer
    nameWithType: Integer
    fullName: CRMScript.Global.Integer
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.Global.Integer
  commentId: T:CRMScript.Global.Integer
  isExternal: true
  name: Integer
  nameWithType: Integer
  fullName: CRMScript.Global.Integer
- uid: CRMScript.NetServer.NSMassOperationResult
  commentId: T:CRMScript.NetServer.NSMassOperationResult
  isExternal: true
  name: NSMassOperationResult
  nameWithType: NSMassOperationResult
  fullName: CRMScript.NetServer.NSMassOperationResult
- uid: CRMScript.Global.Integer
  commentId: T:CRMScript.Global.Integer
  isExternal: true
  name: Integer
  nameWithType: Integer
  fullName: CRMScript.Global.Integer
- uid: CRMScript.Global.Void
  commentId: T:CRMScript.Global.Void
  isExternal: true
  name: Void
  nameWithType: Void
  fullName: CRMScript.Global.Void
- uid: CRMScript.Global.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: CRMScript.Global.String[]
  spec.crmscript:
  - uid: CRMScript.Global.String
    isExternal: true
    name: String
    nameWithType: String
    fullName: CRMScript.Global.String
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.Global.String
  commentId: T:CRMScript.Global.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: CRMScript.Global.String
- uid: CRMScript.NetServer.NSTableRecord
  commentId: T:CRMScript.NetServer.NSTableRecord
  isExternal: true
  name: NSTableRecord
  nameWithType: NSTableRecord
  fullName: CRMScript.NetServer.NSTableRecord
- uid: CRMScript.Global.Bool
  commentId: T:CRMScript.Global.Bool
  isExternal: true
  name: Bool
  nameWithType: Bool
  fullName: CRMScript.Global.Bool
- uid: CRMScript.Global.Void
  commentId: T:CRMScript.Global.Void
  isExternal: true
  name: Void
  nameWithType: Void
  fullName: CRMScript.Global.Void
